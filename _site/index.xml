<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>the data diary</title>
<link>https://www.thedatadiary.net/index.html</link>
<atom:link href="https://www.thedatadiary.net/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.2.335</generator>
<lastBuildDate>Tue, 05 Jul 2022 05:00:00 GMT</lastBuildDate>
<item>
  <title>The Math Behind workboots</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2022-07-05-the-math-behind-workboots/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">ggplot2<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">theme_set</span>(</span>
<span id="cb1-2">  ggplot2<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-3">    ggplot2<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>,</span>
<span id="cb1-4">                   <span class="at" style="color: #657422;">plot.background =</span> ggplot2<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"white"</span>))</span>
<span id="cb1-5">)</span></code></pre></div>
</details>
</div>
<p>Generating prediction intervals with workboots hinges on a few core concepts: bootstrap resampling, estimating prediction error for each resample, and aggregating the resampled prediction errors for each observation. The <a href="https://rsample.tidymodels.org/reference/bootstraps.html"><code>bootstraps()</code> documentation from {rsample}</a> gives a concise definition of bootstrap resampling:</p>
<blockquote class="blockquote">
<p>A bootstrap sample is a sample that is the same size as the original data set that is made using replacement. This results in analysis samples that have multiple replicates of some of the original rows of the data. The assessment set is defined as the rows of the original data that were not included in the bootstrap sample. This is often referred to as the “out-of-bag” (OOB) sample.</p>
</blockquote>
<p>This vignette will walk through the details of estimating and aggregating prediction errors — additional resources can be found in Davison and Hinkley’s book, <a href="https://www.cambridge.org/core/books/bootstrap-methods-and-their-application/ED2FD043579F27952363566DC09CBD6A"><em>Bootstrap Methods and their Application</em></a>, or Efron and Tibshirani’s paper, <a href="https://www.jstor.org/stable/2965703"><em>Improvements on Cross-Validation: The Bootstrap .632+ Method</em></a>.</p>
<section id="the-bootstrap-.632-method" class="level3">
<h3 class="anchored" data-anchor-id="the-bootstrap-.632-method">The Bootstrap .632+ Method</h3>
<div class="alert-info">
<p>What follows here is largely a summary of <a href="https://stats.stackexchange.com/questions/96739/what-is-the-632-rule-in-bootstrapping/96750#96750">this explanation</a> of the .632+ error rate by Benjamin Deonovic.</p>
</div>
<p>When working with bootstrap resamples of a dataset, there are two error estimates we can work with: the bootstrap training error and the out-of-bag (oob) error. Using the <a href="https://modeldata.tidymodels.org/reference/Sacramento.html">Sacramento housing dataset</a>, we can estimate the training and oob error for a single bootstrap.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(tidymodels)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;"># setup our data</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">data</span>(<span class="st" style="color: #20794D;">"Sacramento"</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5">Sacramento <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb2-6">  Sacramento <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;">select</span>(sqft, type, price) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">c</span>(sqft, price), log10)) </span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">987</span>)</span>
<span id="cb2-11">sacramento_split <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">initial_split</span>(Sacramento)</span>
<span id="cb2-12">sacramento_train <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">training</span>(sacramento_split)</span>
<span id="cb2-13">sacramento_test <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">testing</span>(sacramento_split)</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;"># setup bootstrapped dataset for .632+ example</span></span>
<span id="cb2-16">sacramento_boots <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">bootstraps</span>(sacramento_train, <span class="at" style="color: #657422;">times =</span> <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb2-17"></span>
<span id="cb2-18">sacramento_boots</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># Bootstrap sampling 
# A tibble: 1 × 2
  splits            id        
  &lt;list&gt;            &lt;chr&gt;     
1 &lt;split [699/261]&gt; Bootstrap1</code></pre>
</div>
</div>
<p>Using a <a href="https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm#k-NN_regression">k-nearest-neighbor regression model</a> and <a href="https://en.wikipedia.org/wiki/Root-mean-square_deviation#:~:text=The%20root%2Dmean%2Dsquare%20deviation,estimator%20and%20the%20values%20observed.">rmse</a> as our error metric, we find that the training and oob error differ, with the training error lesser than the oob error.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># setup a workflow to predict price using a knn regressor</span></span>
<span id="cb4-2">sacramento_recipe <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">recipe</span>(price <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> sacramento_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal</span>())</span>
<span id="cb4-5"></span>
<span id="cb4-6">sacramento_spec <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;">nearest_neighbor</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;">set_mode</span>(<span class="st" style="color: #20794D;">"regression"</span>)</span>
<span id="cb4-9"></span>
<span id="cb4-10">sacramento_wf <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;">add_recipe</span>(sacramento_recipe) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;">add_model</span>(sacramento_spec)</span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">876</span>)</span>
<span id="cb4-16">sacramento_fit <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb4-17">  sacramento_wf <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-18">  <span class="fu" style="color: #4758AB;">fit</span>(<span class="fu" style="color: #4758AB;">training</span>(sacramento_boots<span class="sc" style="color: #5E5E5E;">$</span>splits[[<span class="dv" style="color: #AD0000;">1</span>]])) </span>
<span id="cb4-19"></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;"># get bootstrap training error</span></span>
<span id="cb4-21">sacramento_train_err <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb4-22">  Metrics<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">rmse</span>(</span>
<span id="cb4-23">    <span class="fu" style="color: #4758AB;">training</span>(sacramento_boots<span class="sc" style="color: #5E5E5E;">$</span>splits[[<span class="dv" style="color: #AD0000;">1</span>]])<span class="sc" style="color: #5E5E5E;">$</span>price,</span>
<span id="cb4-24">    sacramento_fit <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">predict</span>(<span class="fu" style="color: #4758AB;">training</span>(sacramento_boots<span class="sc" style="color: #5E5E5E;">$</span>splits[[<span class="dv" style="color: #AD0000;">1</span>]])) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>(.pred)</span>
<span id="cb4-25">  )</span>
<span id="cb4-26"></span>
<span id="cb4-27"><span class="co" style="color: #5E5E5E;"># get oob error</span></span>
<span id="cb4-28">sacramento_oob_err <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb4-29">  Metrics<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">rmse</span>(</span>
<span id="cb4-30">    <span class="fu" style="color: #4758AB;">testing</span>(sacramento_boots<span class="sc" style="color: #5E5E5E;">$</span>splits[[<span class="dv" style="color: #AD0000;">1</span>]])<span class="sc" style="color: #5E5E5E;">$</span>price,</span>
<span id="cb4-31">    sacramento_fit <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">predict</span>(<span class="fu" style="color: #4758AB;">testing</span>(sacramento_boots<span class="sc" style="color: #5E5E5E;">$</span>splits[[<span class="dv" style="color: #AD0000;">1</span>]])) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>(.pred)</span>
<span id="cb4-32">  )</span>
<span id="cb4-33"></span>
<span id="cb4-34">sacramento_train_err</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.08979873</code></pre>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">sacramento_oob_err</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.1661675</code></pre>
</div>
</div>
<p>The training error is overly optimistic in the model’s performance and likely to under-estimate the prediction error. We are interested in the model’s performance on new data. The oob error, on the other hand, is likely to over-estimate the prediction error! This is due to non-distinct observations in the bootstrap sample that results from sampling with replacement. Given that <a href="https://stats.stackexchange.com/questions/88980/why-on-average-does-each-bootstrap-sample-contain-roughly-two-thirds-of-observat?lq=1">the average number of distinct observations in a bootstrap training set is about <code>0.632 * total_observations</code></a>, Efron and Tibshirani proposed a blend of the training and oob error with the 0.632 estimate:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign*%7D%0AErr_%7B.632%7D%20&amp;%20=%200.368%20Err_%7Btrain%7D%20+%200.632%20Err_%7Boob%7D%0A%5Cend%7Balign*%7D%0A"></p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">sacramento_632 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fl" style="color: #AD0000;">0.368</span> <span class="sc" style="color: #5E5E5E;">*</span> sacramento_train_err <span class="sc" style="color: #5E5E5E;">+</span> <span class="fl" style="color: #AD0000;">0.632</span> <span class="sc" style="color: #5E5E5E;">*</span> sacramento_oob_err</span>
<span id="cb8-2">sacramento_632</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.1380638</code></pre>
</div>
</div>
<p>If, however, the model is highly overfit to the bootstrap training set, the training error will approach 0 and the 0.632 estimate will <em>under estimate</em> the prediction error.</p>
<p>An example from <a href="http://appliedpredictivemodeling.com/"><em>Applied Predictive Modeling</em></a> shows that as model complexity increases, the reported resample accuracy by the 0.632 estimate continues to increase whereas other resampling strategies report diminishing returns:</p>
<p><img src="https://www.thedatadiary.net/posts/2022-07-05-the-math-behind-workboots/https:/user-images.githubusercontent.com/5731043/157986232-9c32c1c2-a7ed-4f9f-b28e-7d8ccb7ac41c.png" class="img-fluid"></p>
<p>As an alternative to the 0.632 estimate, Efron &amp; Tibshirani also propose the 0.632+ estimate, which re-weights the blend of training and oob error based on the model overfit rate:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign*%7D%0AErr_%7B0.632+%7D%20&amp;%20=%20(1%20-%20w)%20Err_%7Btrain%7D%20+%20w%20Err_%7Boob%7D%20%5C%5C%0A%5C%5C%0Aw%20&amp;%20=%20%5Cfrac%7B0.632%7D%7B1%20-%200.368%20R%7D%20%5C%5C%0A%5C%5C%0AR%20&amp;%20=%20%5Cfrac%7BErr_%7Boob%7D%20-%20Err_%7Btrain%7D%7D%7B%5Cgamma%20-%20Err_%7Btrain%7D%7D%0A%5Cend%7Balign*%7D%0A"></p>
<p>Here, <img src="https://latex.codecogs.com/png.latex?R"> represents the overfit rate and <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> is the no-information error rate, estimated by evaulating all combinations of predictions and actual values in the bootstrap training set.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># estimate the no-information error rate</span></span>
<span id="cb10-2">preds_train <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;">predict</span>(sacramento_fit, <span class="fu" style="color: #4758AB;">training</span>(sacramento_boots<span class="sc" style="color: #5E5E5E;">$</span>splits[[<span class="dv" style="color: #AD0000;">1</span>]])) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;">pull</span>(.pred)</span>
<span id="cb10-5"></span>
<span id="cb10-6">actuals_train <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb10-7">  <span class="fu" style="color: #4758AB;">training</span>(sacramento_boots<span class="sc" style="color: #5E5E5E;">$</span>splits[[<span class="dv" style="color: #AD0000;">1</span>]]) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;">pull</span>(price)</span>
<span id="cb10-9"></span>
<span id="cb10-10">all_combinations <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb10-11">  <span class="fu" style="color: #4758AB;">crossing</span>(actuals_train, preds_train)</span>
<span id="cb10-12"></span>
<span id="cb10-13">rmse_ni <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb10-14">  Metrics<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">rmse</span>(all_combinations<span class="sc" style="color: #5E5E5E;">$</span>actuals_train, all_combinations<span class="sc" style="color: #5E5E5E;">$</span>preds_train)</span>
<span id="cb10-15"></span>
<span id="cb10-16"><span class="co" style="color: #5E5E5E;"># estimate the overfit rate</span></span>
<span id="cb10-17">overfit <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb10-18">  (sacramento_oob_err <span class="sc" style="color: #5E5E5E;">-</span> sacramento_train_err)<span class="sc" style="color: #5E5E5E;">/</span>(rmse_ni <span class="sc" style="color: #5E5E5E;">-</span> sacramento_train_err)</span>
<span id="cb10-19"></span>
<span id="cb10-20"><span class="co" style="color: #5E5E5E;"># estimate weight</span></span>
<span id="cb10-21">w <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fl" style="color: #AD0000;">0.632</span> <span class="sc" style="color: #5E5E5E;">/</span> (<span class="dv" style="color: #AD0000;">1</span> <span class="sc" style="color: #5E5E5E;">-</span> <span class="fl" style="color: #AD0000;">0.368</span> <span class="sc" style="color: #5E5E5E;">*</span> overfit)</span>
<span id="cb10-22"></span>
<span id="cb10-23">sacramento_632_plus <span class="ot" style="color: #003B4F;">&lt;-</span> (<span class="dv" style="color: #AD0000;">1</span> <span class="sc" style="color: #5E5E5E;">-</span> w) <span class="sc" style="color: #5E5E5E;">*</span> sacramento_train_err <span class="sc" style="color: #5E5E5E;">+</span> w <span class="sc" style="color: #5E5E5E;">*</span> sacramento_oob_err</span>
<span id="cb10-24">sacramento_632_plus</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.1450502</code></pre>
</div>
</div>
<p>When there is no overfitting (i.e., <img src="https://latex.codecogs.com/png.latex?R%20=%200">) the 0.632+ estimate will equal the 0.632 estimate. In this case, however, the model is overfitting the training set and the 0.632+ error estimate is pushed a bit closer to the oob error.</p>
</section>
<section id="prediction-intervals-with-many-bootstraps" class="level3">
<h3 class="anchored" data-anchor-id="prediction-intervals-with-many-bootstraps">Prediction intervals with many bootstraps</h3>
<p><a href="https://en.wikipedia.org/wiki/Root-mean-square_deviation#Formula">For an unbiased estimator, rmse is the standard deviation of the residuals</a>. With this in mind, we can modify our predictions to include a sample from the residual distribution (for more information, see Algorithm 6.4 from Davison and Hinkley’s <em>Bootstrap Methods and their Application</em>):</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">999</span>)</span>
<span id="cb12-2">resid_train_add <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="fu" style="color: #4758AB;">length</span>(preds_train), <span class="dv" style="color: #AD0000;">0</span>, sacramento_632_plus)</span>
<span id="cb12-3">preds_train_mod <span class="ot" style="color: #003B4F;">&lt;-</span> preds_train <span class="sc" style="color: #5E5E5E;">+</span> resid_train_add</span></code></pre></div>
</details>
</div>
<p>Thus far, we’ve been working with a single bootstrap resample. When working with a single bootstrap resample, adding this residual term gives a pretty poor estimate for each observation:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;">tibble</span>(<span class="at" style="color: #657422;">.pred =</span> preds_train_mod) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;">bind_cols</span>(<span class="fu" style="color: #4758AB;">training</span>(sacramento_boots<span class="sc" style="color: #5E5E5E;">$</span>splits[[<span class="dv" style="color: #AD0000;">1</span>]])) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">c</span>(.pred, price), <span class="sc" style="color: #5E5E5E;">~</span><span class="dv" style="color: #AD0000;">10</span><span class="sc" style="color: #5E5E5E;">^</span>.x)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> .pred, <span class="at" style="color: #657422;">y =</span> price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>,</span>
<span id="cb13-8">             <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">2.5</span>,</span>
<span id="cb13-9">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"midnightblue"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-10">  <span class="fu" style="color: #4758AB;">geom_abline</span>(<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb13-11">              <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>, </span>
<span id="cb13-12">              <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"gray"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-13">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Predicted sale price of home in Sacramento"</span>,</span>
<span id="cb13-14">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Adding a single error estimate produces poor predictions of price"</span>,</span>
<span id="cb13-15">       <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Predicted price"</span>,</span>
<span id="cb13-16">       <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Actual price"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-17">  <span class="fu" style="color: #4758AB;">scale_x_log10</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">label_dollar</span>(<span class="at" style="color: #657422;">scale_cut =</span> <span class="fu" style="color: #4758AB;">cut_short_scale</span>())) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-18">  <span class="fu" style="color: #4758AB;">scale_y_log10</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">label_dollar</span>(<span class="at" style="color: #657422;">scale_cut =</span> <span class="fu" style="color: #4758AB;">cut_short_scale</span>())) </span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2022-07-05-the-math-behind-workboots/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="2700"></p>
</div>
</div>
<p>With workboots, however, we can repeat this process over many bootstrap datasets to generate a prediction distribution for each observation:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">library</span>(workboots)</span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;"># fit and predict price in sacramento_test from 100 models</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;"># the default number of resamples is 2000 - dropping here to speed up knitting</span></span>
<span id="cb14-5"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">555</span>)</span>
<span id="cb14-6">sacramento_pred_int <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb14-7">  sacramento_wf <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;">predict_boots</span>(</span>
<span id="cb14-9">    <span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb14-10">    <span class="at" style="color: #657422;">training_data =</span> sacramento_train,</span>
<span id="cb14-11">    <span class="at" style="color: #657422;">new_data =</span> sacramento_test</span>
<span id="cb14-12">  )</span>
<span id="cb14-13"></span>
<span id="cb14-14">sacramento_pred_int <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-15">  <span class="fu" style="color: #4758AB;">summarise_predictions</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-16">  <span class="fu" style="color: #4758AB;">bind_cols</span>(sacramento_test) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-17">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">c</span>(.pred<span class="sc" style="color: #5E5E5E;">:</span>.pred_upper, price), <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">10</span><span class="sc" style="color: #5E5E5E;">^</span>.x)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-18">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> .pred,</span>
<span id="cb14-19">             <span class="at" style="color: #657422;">y =</span> price,</span>
<span id="cb14-20">             <span class="at" style="color: #657422;">ymin =</span> .pred_lower,</span>
<span id="cb14-21">             <span class="at" style="color: #657422;">ymax =</span> .pred_upper)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-22">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>,</span>
<span id="cb14-23">             <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">2.5</span>,</span>
<span id="cb14-24">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"midnightblue"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-25">  <span class="fu" style="color: #4758AB;">geom_errorbar</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>,</span>
<span id="cb14-26">                <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"midnightblue"</span>,</span>
<span id="cb14-27">                <span class="at" style="color: #657422;">width =</span> <span class="fl" style="color: #AD0000;">0.0125</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-28">  <span class="fu" style="color: #4758AB;">scale_x_log10</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">label_dollar</span>(<span class="at" style="color: #657422;">scale_cut =</span> <span class="fu" style="color: #4758AB;">cut_short_scale</span>())) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-29">  <span class="fu" style="color: #4758AB;">scale_y_log10</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">label_dollar</span>(<span class="at" style="color: #657422;">scale_cut =</span> <span class="fu" style="color: #4758AB;">cut_short_scale</span>())) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-30">  <span class="fu" style="color: #4758AB;">geom_abline</span>(<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb14-31">              <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>,</span>
<span id="cb14-32">              <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"gray"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-33">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Predicted sale price of home in Sacramento"</span>,</span>
<span id="cb14-34">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Using many resamples allows us to generate prediction intervals"</span>,</span>
<span id="cb14-35">       <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Predicted price"</span>,</span>
<span id="cb14-36">       <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Actual price"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2022-07-05-the-math-behind-workboots/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="2700"></p>
</div>
</div>
<p>This methodology produces prediction distributions that are <a href="https://markjrieke.github.io/workboots/articles/Estimating-Linear-Intervals.html">consistent with what we might expect from linear models</a> while making no assumptions about model type (i.e., we can use a non-parametric model; in this case, a k-nearest neighbors regression).</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2022,
  author = {Mark Rieke},
  title = {The {Math} {Behind} Workboots},
  date = {2022-07-05},
  url = {https://www.thedatadiary.net/posts/2022-07-05-the-math-behind-workboots},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2022" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2022. <span>“The Math Behind Workboots.”</span> July 5,
2022. <a href="https://www.thedatadiary.net/posts/2022-07-05-the-math-behind-workboots">https://www.thedatadiary.net/posts/2022-07-05-the-math-behind-workboots</a>.
</div></div></section></div> ]]></description>
  <category>rstats</category>
  <category>workboots</category>
  <category>tidymodels</category>
  <guid>https://www.thedatadiary.net/posts/2022-07-05-the-math-behind-workboots/index.html</guid>
  <pubDate>Tue, 05 Jul 2022 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2022-07-05-the-math-behind-workboots/featured.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Estimate your uncertainty</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># setup themes</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">theme_set</span>(</span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;">theme_minimal</span>(<span class="at" style="color: #657422;">base_family =</span> <span class="st" style="color: #20794D;">"Roboto Slab"</span>,</span>
<span id="cb1-6">                <span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">15</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-7">    <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>,</span>
<span id="cb1-8">          <span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#F9F9FC"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#F9F9FC"</span>),</span>
<span id="cb1-9">          <span class="at" style="color: #657422;">plot.title =</span> ggtext<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">element_markdown</span>(),</span>
<span id="cb1-10">          <span class="at" style="color: #657422;">plot.subtitle =</span> ggtext<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">element_markdown</span>())</span>
<span id="cb1-11">)</span></code></pre></div>
</details>
</div>
<p>I recently picked up <a href="http://varianceexplained.org/about/">David Robinson’s</a> book, <a href="http://varianceexplained.org/r/empirical-bayes-book/">Introduction to Empirical Bayes</a>. It’s available online for a price of your own choosing (operating under a “pay-what-you-want” model), so you can technically pick it up for free, but it’s well worth the suggested price of $9.95. The book has a particular focus on practical steps for implementing Bayesian methods with code, which I appreciate. I’ve made it through Part I (of four), which makes for a good stopping point to practice what I’ve read.</p>
<p>The first section is highly focused on modeling the probability of success/failure of some binary outcome using a <a href="https://en.wikipedia.org/wiki/Beta_distribution">beta distribution</a>. This is highly relevant to my work as an analyst, where whether or not a patient responded positively to a particular question on a survey can be modeled with this method. Thus far, however, I’ve taken the <a href="https://en.wikipedia.org/wiki/Frequentist_inference">frequentist</a> approach to analyses, which assumes we know nothing about what the data ought to look like prior to analyzing it. This is largely because I didn’t know of a robust way to estimate a <a href="https://en.wikipedia.org/wiki/Prior_probability">prior</a> for a Bayesian analysis.</p>
<p>Thankfully, however, the book walks through examples of exactly how to do this! We can use a <a href="https://en.wikipedia.org/wiki/Maximum_likelihood_estimation">maximum likelihood estimator</a> to estimate a reasonable prior given the current data. That’s quite a bit of statistical mumbo-jumbo — in this post I’ll walk through an example that spells it out a bit more clearly using fake hospital satisfaction data (N.B.; this is largely a recreation of the steps taken in the book — practice makes perfect!).</p>
<section id="setting-up-the-data" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-data">Setting up the data</h2>
<p>First, let’s simulate responses to patient satisfaction surveys. I tend to look at patient satisfaction scores across individual hospital units (e.g., ED, ICU, IMU, etc.). Units can have varying numbers of discharges, so we’ll use a <a href="https://en.wikipedia.org/wiki/Log-normal_distribution">log-normal</a> distribution to estimate the number of responses for each unit.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># simulate 1,500 hospital units with an average of 150 survey returns per unit</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">123</span>)</span>
<span id="cb2-3">survey_data <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;">rlnorm</span>(<span class="dv" style="color: #AD0000;">1500</span>, <span class="fu" style="color: #4758AB;">log</span>(<span class="dv" style="color: #AD0000;">150</span>), <span class="fl" style="color: #AD0000;">1.5</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;">rename</span>(<span class="at" style="color: #657422;">n =</span> value)</span>
<span id="cb2-7"></span>
<span id="cb2-8">survey_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> n)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;">geom_histogram</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;">scale_x_log10</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">comma_format</span>()) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Simulation of hospital satisfaction data"</span>,</span>
<span id="cb2-13">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Distribution of the number of survey returns per hospital unit"</span>,</span>
<span id="cb2-14">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb2-15">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>) </span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="2700"></p>
</div>
</div>
<p>The spectrum of responses is incredibly broad — some units have a massive number of returns (in the tens of thousands!) while others have just a handful. This is fairly consistent with the real-world data that I’ve seen (though the units on the high-side are a bit over-represented here).</p>
<p>Next, let’s assume that there is some true satisfaction rate that is associated with each unit. If each unit had an infinite number of survey returns, the satisfaction rate from the survey returns would approach this true value. In this case, we’ll set the true satisfaction for each unit randomly but have it hover around 66%.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># set the true satisfaction to be different for each unit, but hover around 66%</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">234</span>)</span>
<span id="cb3-3">survey_data <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb3-4">  survey_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;">rowwise</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">true_satisfaction =</span> <span class="fu" style="color: #4758AB;">rbeta</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">66</span>, <span class="dv" style="color: #AD0000;">34</span>))</span></code></pre></div>
</details>
</div>
<p>Although there is a true satisfaction associated with each unit, we wouldn’t expect that the reported survey scores would match this exactly. This is especially true when there are few responses — if a unit has a true satisfaction rate of 75% but only 3 responses, it’s impossible for the reported score to match the underlying true rate!</p>
<p>We can simulate the number of patients who responded positively (in survey terms, the number of “topbox” responses) by generating <code>n</code> responses for each unit using a <a href="https://en.wikipedia.org/wiki/Binomial_distribution">binomial distribution</a>.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># simulate the number of patients responding with the topbox value</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;"># we *know* the true value, but the actual score may vary!</span></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">345</span>)</span>
<span id="cb4-4">survey_data <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb4-5">  survey_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">n =</span> <span class="fu" style="color: #4758AB;">round</span>(n),</span>
<span id="cb4-7">         <span class="at" style="color: #657422;">topbox =</span> <span class="fu" style="color: #4758AB;">rbinom</span>(<span class="dv" style="color: #AD0000;">1</span>, n, true_satisfaction)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;">ungroup</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-9">  </span>
<span id="cb4-10">  <span class="co" style="color: #5E5E5E;"># name each unit</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;">rowid_to_column</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">unit =</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"Unit"</span>, rowid)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;">relocate</span>(unit) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-14">  </span>
<span id="cb4-15">  <span class="co" style="color: #5E5E5E;"># remove the true satisfaction so we don't know what it is!</span></span>
<span id="cb4-16">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>rowid, <span class="sc" style="color: #5E5E5E;">-</span>true_satisfaction)</span>
<span id="cb4-17"></span>
<span id="cb4-18"><span class="co" style="color: #5E5E5E;"># find patient satisfaction scores</span></span>
<span id="cb4-19">survey_data <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb4-20">  survey_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-21">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">score =</span> topbox<span class="sc" style="color: #5E5E5E;">/</span>n)</span>
<span id="cb4-22"></span>
<span id="cb4-23">survey_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-24">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> score)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-25">  <span class="fu" style="color: #4758AB;">geom_histogram</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-26">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">percent_format</span>(<span class="at" style="color: #657422;">accuracy =</span> <span class="dv" style="color: #AD0000;">1</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-27">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Simulation of hospital satisfaction data"</span>,</span>
<span id="cb4-28">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Distribution of patient satisfaction scores per hospital unit"</span>,</span>
<span id="cb4-29">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb4-30">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="2700"></p>
</div>
</div>
<p>As expected, most of our simulated data hovers around a score of 66%. However, there are a few scores at the extremes of 0% and 100% — given how we simulated the data, it is unlikely that these units are <em>really</em> performing so poorly/so well and it’s likelier that they just have few returns.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># which units have the highest scores?</span></span>
<span id="cb5-2">survey_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(score)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;">slice_head</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">10</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-5">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">unit</th>
<th style="text-align: right;">n</th>
<th style="text-align: right;">topbox</th>
<th style="text-align: right;">score</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Unit 26</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">1.0000000</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 591</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">1.0000000</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 616</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">1.0000000</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 811</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">1.0000000</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 943</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">1.0000000</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 1217</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">1.0000000</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 1435</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">1.0000000</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 1437</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">1.0000000</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 863</td>
<td style="text-align: right;">19</td>
<td style="text-align: right;">18</td>
<td style="text-align: right;">0.9473684</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 372</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">0.9230769</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># which units have the lowest scores?</span></span>
<span id="cb6-2">survey_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;">arrange</span>(score) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;">slice_head</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">10</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-5">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">unit</th>
<th style="text-align: right;">n</th>
<th style="text-align: right;">topbox</th>
<th style="text-align: right;">score</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Unit 1092</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.0000000</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 248</td>
<td style="text-align: right;">20</td>
<td style="text-align: right;">5</td>
<td style="text-align: right;">0.2500000</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 1120</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0.2857143</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 416</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0.3333333</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 456</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0.3333333</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 972</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0.3333333</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 113</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">5</td>
<td style="text-align: right;">0.3846154</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 260</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">0.4000000</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 695</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">0.4000000</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 1352</td>
<td style="text-align: right;">17</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">0.4117647</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>As expected, the units on either end of the spectrum aren’t necessarily outperforming/underperforming — they simply don’t have a lot of survey responses! We can use Bayesian inference to estimate the true satisfaction rate by specifying and updating a prior!</p>
</section>
<section id="generating-a-prior-distribution" class="level2">
<h2 class="anchored" data-anchor-id="generating-a-prior-distribution">Generating a prior distribution</h2>
<p>When looking at the entire dataset, the distribution of scores is thrown off a bit by the units with few responses. If we restrict the dataset to only the units that have more than 30 responses (which, <a href="https://www.thedatadiary.net/blog/2022-04-28-30-is-not-statistical/">as I’ve written about before</a>, isn’t necessarily a data-driven cutoff for analysis) we can get a clearer idea of the distribution of the scores.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">survey_data_filtered <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb7-2">  survey_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">filter</span>(n <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">30</span>)</span>
<span id="cb7-4"></span>
<span id="cb7-5">survey_data_filtered <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> score)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;">geom_histogram</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">percent_format</span>(<span class="at" style="color: #657422;">accuracy =</span> <span class="dv" style="color: #AD0000;">1</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Simulation of hospital satisfaction data"</span>,</span>
<span id="cb7-10">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Distribution of patient satisfaction scores for units with more than 30 responses"</span>,</span>
<span id="cb7-11">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb7-12">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="2700"></p>
</div>
</div>
<p>Alternatively, we can represent this distribution with a density plot:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">survey_data_filtered <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> score)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;">geom_density</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">percent_format</span>(<span class="at" style="color: #657422;">accuracy =</span> <span class="dv" style="color: #AD0000;">1</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Simulation of hospital satisfaction data"</span>,</span>
<span id="cb8-6">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Distribution of patient satisfaction scores for units with more than 30 responses"</span>,</span>
<span id="cb8-7">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb8-8">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="2700"></p>
</div>
</div>
<p>This looks suspiciously like a beta distribution! A beta distribution’s shape can be defined by two parameters — alpha and beta. Varying these parameters lets us adjust the center and width to match any possible beta distribution.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty/https:/upload.wikimedia.org/wikipedia/commons/7/78/PDF_of_the_Beta_distribution.gif" class="img-fluid"></p>
<p>What may make sense would be to use <em>this distribution</em> as our prior. I.e., if we have no responses for a unit, we can probably guess that their score would be somewhere around 66% with some healthy room on either side for variability. To do so, we need to estimate an appropriate alpha and beta — rather than guess the values using trial and error we can pass the work off to our computer to find parameters that <strong>maximize</strong> the <strong>likelihood</strong> that our <strong>estimated distribution</strong> matches the true distribution (hence the name, <em>maximum likelihood estimator</em>).</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">library</span>(stats4)</span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;"># log-likelihood function</span></span>
<span id="cb9-4">log_likelihood <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(alpha, beta) {</span>
<span id="cb9-5">  <span class="sc" style="color: #5E5E5E;">-</span><span class="fu" style="color: #4758AB;">sum</span>(<span class="fu" style="color: #4758AB;">dbeta</span>(survey_data_filtered<span class="sc" style="color: #5E5E5E;">$</span>score, alpha, beta, <span class="at" style="color: #657422;">log =</span> <span class="cn" style="color: #8f5902;">TRUE</span>))</span>
<span id="cb9-6">}</span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;"># pass various alphas &amp; betas to `log_likelihood` </span></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;"># to find combination that maximizes the likelihood!</span></span>
<span id="cb9-10">params <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;">mle</span>(</span>
<span id="cb9-12">    log_likelihood, </span>
<span id="cb9-13">    <span class="at" style="color: #657422;">start =</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="dv" style="color: #AD0000;">50</span>, <span class="at" style="color: #657422;">beta =</span> <span class="dv" style="color: #AD0000;">50</span>),</span>
<span id="cb9-14">    <span class="at" style="color: #657422;">lower =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb9-15">  )</span>
<span id="cb9-16"></span>
<span id="cb9-17"><span class="co" style="color: #5E5E5E;"># extract alpha &amp; beta</span></span>
<span id="cb9-18">params <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">coef</span>(params)</span>
<span id="cb9-19">alpha0 <span class="ot" style="color: #003B4F;">&lt;-</span> params[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb9-20">beta0 <span class="ot" style="color: #003B4F;">&lt;-</span> params[<span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb9-21"></span>
<span id="cb9-22"><span class="fu" style="color: #4758AB;">print</span>(<span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"alpha:"</span>, <span class="fu" style="color: #4758AB;">round</span>(alpha0, <span class="dv" style="color: #AD0000;">1</span>), <span class="st" style="color: #20794D;">"beta:"</span>, <span class="fu" style="color: #4758AB;">round</span>(beta0, <span class="dv" style="color: #AD0000;">1</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "alpha: 39.7 beta: 20.5"</code></pre>
</div>
</div>
<p>How well does a beta distribution defined by these parameters match our actual data?</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">survey_data_filtered <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">density =</span> <span class="fu" style="color: #4758AB;">dbeta</span>(score, alpha0, beta0)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> score)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;">geom_density</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> density),</span>
<span id="cb11-6">            <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>,</span>
<span id="cb11-7">            <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#BD43BF"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">percent_format</span>(<span class="at" style="color: #657422;">accuracy =</span> <span class="dv" style="color: #AD0000;">1</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Simulation of hospital satisfaction data"</span>,</span>
<span id="cb11-10">       <span class="at" style="color: #657422;">subtitle =</span> glue<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">glue</span>(<span class="st" style="color: #20794D;">"**Actual distribution of scores** and the **{riekelib::color_text('distribution estimated by maximum likelihood', '#BD43BF')}**"</span>),</span>
<span id="cb11-11">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb11-12">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="2700"></p>
</div>
</div>
<p>This is a pretty good representation of our initial data! When we have no survey responses, we can use a beta distribution with the initial parameters as specified by the maximum likelihood estimation. As a unit gets more responses, we can update our estimation to rely more heavily on the data rather than the prior:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;"># update alpha &amp; beta as new responses come in!</span></span>
<span id="cb12-2">alpha_new <span class="ot" style="color: #003B4F;">&lt;-</span> alpha0 <span class="sc" style="color: #5E5E5E;">+</span> n_topbox</span>
<span id="cb12-3">beta_new <span class="ot" style="color: #003B4F;">&lt;-</span> beta0 <span class="sc" style="color: #5E5E5E;">+</span> n <span class="sc" style="color: #5E5E5E;">-</span> n_topbox</span></code></pre></div>
</details>
</div>
</section>
<section id="updating-our-priors" class="level2">
<h2 class="anchored" data-anchor-id="updating-our-priors">Updating our priors</h2>
<p>With a prior distribution defined by <code>alpha0</code> and <code>beta0</code>, we can upgrade our frequentest estimation of each unit’s score to a Bayesian estimation!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;"># empirical bayes estimation of satisfaction score</span></span>
<span id="cb13-2">survey_eb <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb13-3">  survey_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">eb_estimate =</span> (topbox <span class="sc" style="color: #5E5E5E;">+</span> alpha0) <span class="sc" style="color: #5E5E5E;">/</span> (n <span class="sc" style="color: #5E5E5E;">+</span> alpha0 <span class="sc" style="color: #5E5E5E;">+</span> beta0))</span></code></pre></div>
</details>
</div>
<p>What are the top and bottom performing units by this new Bayesian estimation?</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;"># which units have the highest estimated scores?</span></span>
<span id="cb14-2">survey_eb <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(eb_estimate)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;">slice_head</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">10</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-5">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">unit</th>
<th style="text-align: right;">n</th>
<th style="text-align: right;">topbox</th>
<th style="text-align: right;">score</th>
<th style="text-align: right;">eb_estimate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Unit 133</td>
<td style="text-align: right;">160</td>
<td style="text-align: right;">133</td>
<td style="text-align: right;">0.8312500</td>
<td style="text-align: right;">0.7841640</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 1004</td>
<td style="text-align: right;">123</td>
<td style="text-align: right;">103</td>
<td style="text-align: right;">0.8373984</td>
<td style="text-align: right;">0.7787827</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 172</td>
<td style="text-align: right;">165</td>
<td style="text-align: right;">133</td>
<td style="text-align: right;">0.8060606</td>
<td style="text-align: right;">0.7667547</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 1042</td>
<td style="text-align: right;">372</td>
<td style="text-align: right;">291</td>
<td style="text-align: right;">0.7822581</td>
<td style="text-align: right;">0.7650930</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 1294</td>
<td style="text-align: right;">1409</td>
<td style="text-align: right;">1083</td>
<td style="text-align: right;">0.7686302</td>
<td style="text-align: right;">0.7641391</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 892</td>
<td style="text-align: right;">349</td>
<td style="text-align: right;">273</td>
<td style="text-align: right;">0.7822350</td>
<td style="text-align: right;">0.7641085</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 306</td>
<td style="text-align: right;">247</td>
<td style="text-align: right;">195</td>
<td style="text-align: right;">0.7894737</td>
<td style="text-align: right;">0.7639102</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 1249</td>
<td style="text-align: right;">1234</td>
<td style="text-align: right;">943</td>
<td style="text-align: right;">0.7641815</td>
<td style="text-align: right;">0.7592901</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 427</td>
<td style="text-align: right;">5469</td>
<td style="text-align: right;">4151</td>
<td style="text-align: right;">0.7590053</td>
<td style="text-align: right;">0.7579168</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 920</td>
<td style="text-align: right;">1637</td>
<td style="text-align: right;">1243</td>
<td style="text-align: right;">0.7593158</td>
<td style="text-align: right;">0.7557585</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;"># which units have the lowest estimated scores?</span></span>
<span id="cb15-2">survey_eb <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;">arrange</span>(eb_estimate) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;">slice_head</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">10</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-5">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">unit</th>
<th style="text-align: right;">n</th>
<th style="text-align: right;">topbox</th>
<th style="text-align: right;">score</th>
<th style="text-align: right;">eb_estimate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Unit 613</td>
<td style="text-align: right;">1886</td>
<td style="text-align: right;">932</td>
<td style="text-align: right;">0.4941676</td>
<td style="text-align: right;">0.4992689</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 760</td>
<td style="text-align: right;">112</td>
<td style="text-align: right;">49</td>
<td style="text-align: right;">0.4375000</td>
<td style="text-align: right;">0.5149645</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 363</td>
<td style="text-align: right;">226</td>
<td style="text-align: right;">112</td>
<td style="text-align: right;">0.4955752</td>
<td style="text-align: right;">0.5299674</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 316</td>
<td style="text-align: right;">431</td>
<td style="text-align: right;">224</td>
<td style="text-align: right;">0.5197216</td>
<td style="text-align: right;">0.5368008</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 1032</td>
<td style="text-align: right;">235</td>
<td style="text-align: right;">119</td>
<td style="text-align: right;">0.5063830</td>
<td style="text-align: right;">0.5375222</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 1093</td>
<td style="text-align: right;">354</td>
<td style="text-align: right;">183</td>
<td style="text-align: right;">0.5169492</td>
<td style="text-align: right;">0.5376064</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 749</td>
<td style="text-align: right;">5286</td>
<td style="text-align: right;">2839</td>
<td style="text-align: right;">0.5370791</td>
<td style="text-align: right;">0.5384528</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 291</td>
<td style="text-align: right;">865</td>
<td style="text-align: right;">460</td>
<td style="text-align: right;">0.5317919</td>
<td style="text-align: right;">0.5400741</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unit 515</td>
<td style="text-align: right;">60</td>
<td style="text-align: right;">26</td>
<td style="text-align: right;">0.4333333</td>
<td style="text-align: right;">0.5463929</td>
</tr>
<tr class="even">
<td style="text-align: left;">Unit 622</td>
<td style="text-align: right;">242</td>
<td style="text-align: right;">127</td>
<td style="text-align: right;">0.5247934</td>
<td style="text-align: right;">0.5515432</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>There are a few things that are worth noting with these estimates:</p>
<ul>
<li>The estimated score is not the same as the actual reported score! As more responses come in, however, the estimated score converges to the actual.</li>
<li>The prior pulls estimated scores towards the prior mean — low scores are pulled up a bit and high scores are pulled down a bit.</li>
<li>The top (and bottom) performing units are no longer dominated by units with few returns!</li>
</ul>
<p>We can also estimate the uncertainty around the estimated score with a <a href="https://en.wikipedia.org/wiki/Credible_interval">credible interval</a>. Credible intervals are the Bayesian counterpart to a frequentist’s <a href="https://en.wikipedia.org/wiki/Confidence_interval">confidence interval</a> — both estimate the region that the true value could fall in given a certain probability — credible intervals, however, are informed by the prior distribution.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">777</span>)</span>
<span id="cb16-2">survey_eb <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;">slice_sample</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">10</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">alpha =</span> alpha0 <span class="sc" style="color: #5E5E5E;">+</span> topbox,</span>
<span id="cb16-5">         <span class="at" style="color: #657422;">beta =</span> beta0 <span class="sc" style="color: #5E5E5E;">+</span> n <span class="sc" style="color: #5E5E5E;">-</span> topbox) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb16-6">  riekelib<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">beta_interval</span>(alpha, beta) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb16-7">  <span class="fu" style="color: #4758AB;">rename_with</span>(<span class="at" style="color: #657422;">.cols =</span> <span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"ci"</span>), <span class="at" style="color: #657422;">.fn =</span> <span class="sc" style="color: #5E5E5E;">~</span><span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"bayes_"</span>, .x)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb16-8">  riekelib<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">beta_interval</span>(topbox, n <span class="sc" style="color: #5E5E5E;">-</span> topbox) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb16-9">  <span class="fu" style="color: #4758AB;">rename_with</span>(<span class="at" style="color: #657422;">.cols =</span> <span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"ci"</span>), <span class="at" style="color: #657422;">.fn =</span> <span class="sc" style="color: #5E5E5E;">~</span><span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"freq_"</span>, .x)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">unit =</span> <span class="fu" style="color: #4758AB;">paste0</span>(unit, <span class="st" style="color: #20794D;">" (n="</span>, n, <span class="st" style="color: #20794D;">")"</span>),</span>
<span id="cb16-11">         <span class="at" style="color: #657422;">unit =</span> <span class="fu" style="color: #4758AB;">fct_reorder</span>(unit, <span class="sc" style="color: #5E5E5E;">-</span>n)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb16-12">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> unit)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-13">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> score),</span>
<span id="cb16-14">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#FF8655"</span>,</span>
<span id="cb16-15">             <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.75</span>,</span>
<span id="cb16-16">             <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">2.5</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-17">  <span class="fu" style="color: #4758AB;">geom_errorbar</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">ymin =</span> freq_ci_lower,</span>
<span id="cb16-18">                    <span class="at" style="color: #657422;">ymax =</span> freq_ci_upper),</span>
<span id="cb16-19">                <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#FF8655"</span>,</span>
<span id="cb16-20">                <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.75</span>,</span>
<span id="cb16-21">                <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-22">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> eb_estimate),</span>
<span id="cb16-23">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#55CEFF"</span>,</span>
<span id="cb16-24">             <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.75</span>,</span>
<span id="cb16-25">             <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">2.5</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-26">  <span class="fu" style="color: #4758AB;">geom_errorbar</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">ymin =</span> bayes_ci_lower,</span>
<span id="cb16-27">                    <span class="at" style="color: #657422;">ymax =</span> bayes_ci_upper),</span>
<span id="cb16-28">                <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#55CEFF"</span>,</span>
<span id="cb16-29">                <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.75</span>,</span>
<span id="cb16-30">                <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-31">  <span class="fu" style="color: #4758AB;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-32">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">percent_format</span>(<span class="at" style="color: #657422;">accuracy =</span> <span class="dv" style="color: #AD0000;">1</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-33">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Random sampling of hospital units"</span>,</span>
<span id="cb16-34">       <span class="at" style="color: #657422;">subtitle =</span> glue<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">glue</span>(<span class="st" style="color: #20794D;">"Comparison of 95% **{riekelib::color_text('credible intervals', '#55CEFF')}** and **{riekelib::color_text('confidence intervals', '#Ff8655')}**"</span>),</span>
<span id="cb16-35">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb16-36">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="2700"></p>
</div>
</div>
<p>Because credible intervals are informed in part by the prior, they are tighter than their confidence interval counterparts. Like with the estimated score, however, as n-size increases, the Bayesian and frequentist interval estimations converge. In the absence of larger swathes of data, Bayesian methods can offer additional insight into our data by means of a prior distribution.</p>
</section>
<section id="some-closing-thoughts" class="level2">
<h2 class="anchored" data-anchor-id="some-closing-thoughts">Some closing thoughts</h2>
<p>Overall, this has been a fairly glowing review of the methods laid out in the first section of <em>Introduction to Empirical Bayes</em>. That being said, Bayesian methods of inference are not inherently <em>better</em> than frequentist methods — while they can offer additional context via a prior, there are situations where frequentist methods are preferred. From a math perspective, the prior provides diminishing returns as sample size increases, so it may be better forgoe Bayesian analysis when sample sizes are large. From an organizational perspective, Bayesian inference may be difficult to explain. In my own work, it’s highly unlikely that I’ll use Bayesian inference in any critical projects any time soon — I can imagine a lengthy uphill battle trying to explain the difference between the reported score and the estimated score informed by a prior.</p>
<p>Finally, there are a few things in this toy analysis that I am hoping to improve upon as I progress further through the book:</p>
<ul>
<li>As I mentioned above and <a href="https://www.thedatadiary.net/blog/2022-04-28-30-is-not-statistical/">in previous writings</a>, using <code>n = 30</code> is a relatively arbitrary cutoff point for analysis. In this case, the prior distribution is fairly sensitive to the cutoff point selected — I am hoping that later sections in the book highilight more robust ways of partitioning data for setting priors.</li>
<li>In the above analysis we’re only examining one variable (univariate analysis) — I am looking forward to extending these methods to multivariate analyses and regressions.</li>
<li>The beta distribution is appropriate for modeling the probability distribution of binary outcomes. In this example, where the outcome is simply the proportion of patients that responded favorably to the survey, modeling the outcome with a beta distribution is appropriate (responses can either be in the “topbox” or not). When there are more than two possible outcomes — for example, when trying to model <a href="https://en.wikipedia.org/wiki/Net_promoter_score">Net Promoter Score</a> as the proportion of “promoters,” “passives,” and “detractors” — the more general <a href="https://en.wikipedia.org/wiki/Dirichlet_distribution">Dirichlet distribution</a> is more appropriate.</li>
<li>I’m hoping also that the book covers methods for dealing with time-dependent data. For example, we’d expect that concerted efforts (or lack thereof) by the hospital units could significantly impact the underlying “true satisfaction” that we’re attempting to estimate via surveying. We expect that more recent survey responses should be more impactful in informing our posterior estimation, but I’ve yet to find any robust literature on how to weight the recency of responses. In the past, I’ve used <a href="https://en.wikipedia.org/wiki/Exponential_decay">exponentional decay</a> to reduce the weight of old responses, but this feels a bit arbitrary.</li>
</ul>
<p>Overall, this has been a long way of saying that I’m happy with the book so far and I’m excited to see what comes next as I continue reading!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2022,
  author = {Mark Rieke},
  title = {Estimate Your Uncertainty},
  date = {2022-06-12},
  url = {https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2022" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2022. <span>“Estimate Your Uncertainty.”</span> June 12,
2022. <a href="https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty">https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty</a>.
</div></div></section></div> ]]></description>
  <category>rstats</category>
  <category>bayes</category>
  <guid>https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty/index.html</guid>
  <pubDate>Sun, 12 Jun 2022 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2022-06-12-estimate-your-uncertainty/featured.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Practical Data Visualization Tips for Excel Users</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/index.html</link>
  <description><![CDATA[ 




<p>I am an avid R user and will always advocate that others use R (or another programming language) for generating reproducible visualizations. In just about every organization, however, Excel plays an important role in an analyst’s toolkit. In this post, I’ll share some visualization design practices that I picked up while learning R but are ubiquitous and transferable to Excel (most of these suggestions are ripped directly from <a href="https://www.williamrchase.com/about/">Will Chase’s</a> <a href="https://www.youtube.com/watch?v=h5cTacaWE6I">“Glamour of Graphics”</a> talk from rstudio::conf(2020), which has <em>heavily informed</em> how I think about visualization design).</p>
<section id="a-motivating-example" class="level2">
<h2 class="anchored" data-anchor-id="a-motivating-example">A motivating example</h2>
<p>For the purposes of this exercise, let’s use fake patient satisfaction data from the Sesame Street Health System, which includes several hospitals and campuses. Let’s say that our system-wide patient satisfaction for the current fiscal year looks like this:</p>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/system_px.png" class="img-fluid"></p>
<p>Most of the hospitals have pretty high satisfaction scores — generally greater than <strong>75%</strong>! The overall system score, however, sits at <strong>65%</strong>. Concerned that there may be an error in the data pipeline or dashboard, your boss asks that you investigate what’s going on and provide an update at the next team meeting.</p>
<p>At first glance, it may be pretty obvious what’s going on — Big Bird Emergency has a pretty low satisfaction score and you know from experience that it’s a larger hospital that generates a lot of survey returns, which may be driving the score down. Since you’re presenting, however, it’s best to use a visualization to communicate this.</p>
</section>
<section id="putting-together-a-bad-plot" class="level2">
<h2 class="anchored" data-anchor-id="putting-together-a-bad-plot">Putting together a bad plot</h2>
<p>Downloading the hospital data and opening in Excel confirms that Big Bird Emergency has far more survey returns than other hospitals.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/system_raw.png" class="img-fluid"></p>
<p>A quick plot that <em>technically</em> includes all the information needed may look something like this:</p>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/plot_01.png" class="img-fluid"></p>
<p>While this does answer the question originally asked, the answer is not <strong>clearly communicated by a quick glance</strong>. Viewers who know what was originally asked have to do some extra mental work to decode the plot, and viewers who see this without the original context may not find anything useful. Our goal should be to provide a visualization that:</p>
<ol type="1">
<li>Clearly communicates the message we want to convey.</li>
<li>Is able to stand alone in other contexts and still communicate the same message.</li>
<li>Is visually appealing.</li>
</ol>
<p>Let’s get started!</p>
</section>
<section id="putting-together-a-good-plot" class="level2">
<h2 class="anchored" data-anchor-id="putting-together-a-good-plot">Putting together a good plot</h2>
<section id="changing-to-a-bar-plot" class="level3">
<h3 class="anchored" data-anchor-id="changing-to-a-bar-plot">Changing to a bar plot</h3>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/plot_02.png" class="img-fluid"></p>
<p>The first order of business is to convert the plot from a pie chart to a bar plot. Pie charts are loved by executives but loathed by visualization practitioners, since information is encoded in each slice’s angle and <a href="https://en.wikipedia.org/wiki/Graphical_perception">differences in angle are difficult for the human eye to detect</a>. Bar plots encode the same information with relative position on a scale, which is the most effective method for showing differences. This also has the added benefit in Excel of automatically converting each hospital to the same color, which reduces a lot of the visual noise that was in the original plot.</p>
</section>
<section id="flipping-axes" class="level3">
<h3 class="anchored" data-anchor-id="flipping-axes">Flipping axes</h3>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/plot_03.png" class="img-fluid"></p>
<p>In order to read the hospital names in the previous plot, viewers need to crane their necks to align with the axis text. The angled text also takes up a lot of whitespace and makes the important part — the actual data — look a bit squished. Changing to a horizontal bar plot alleviates both of these issues (horizontal bar plots are preferred over vertical ones in general for this reason).</p>
</section>
<section id="ordering-the-data" class="level3">
<h3 class="anchored" data-anchor-id="ordering-the-data">Ordering the data</h3>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/plot_04.png" class="img-fluid"></p>
<p>Unordered categories in a plot can be messy and visually confusing — the viewer’s eye needs to dart around to determine which values are greater than other ones. Ordering the categories reduces this cognitive load and allows the viewer to simply read through the list. In this case (and in most cases), we don’t care about the exact values (just the <em>relative difference</em> between values), so we can also remove the data labels.</p>
<p>To order a plot in Excel, we don’t actually need to do anything to the plot itself — simply turn the raw data into a table then arrange the rows by <code>survey_returns</code>:</p>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/ordered_campuses.png" class="img-fluid"></p>
</section>
<section id="giving-the-plot-a-narrative" class="level3">
<h3 class="anchored" data-anchor-id="giving-the-plot-a-narrative">Giving the plot a narrative</h3>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/plot_05.png" class="img-fluid"></p>
<p>The original title, “FYTD Surveys”, while technically informative, is uninspiring. We’re putting together this plot to answer the specific question, <em>why is the system satisfaction score 65% when most hospitals have a higher score?</em> A good visualization will directly answer this without needing additional context from the analyst — the title is a great place to state that <em>Big Bird Emergency is driving the system score down</em>.</p>
<p>Also note that there are no axis labels on this plot. Axis labels are often unnecessary — they take up valuable whitespace with information that is either readily apparent (I don’t need a label to know that the y-axis refers to each hospital!) or encoded elsewhere. When possible, remove axis labels and describe the necessary detail elsewhere (i.e., the title or subtitle).</p>
</section>
<section id="highlighting-the-important-bits" class="level3">
<h3 class="anchored" data-anchor-id="highlighting-the-important-bits">Highlighting the important bits</h3>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/plot_06.png" class="img-fluid"></p>
<p>Color can be a great way to draw our attention to a particular portion of a plot. In this case, not all of the hospitals are equally important in this plot’s narrative — we’re making a distinct point regarding Big Bird Emergency. Highlighting the text and bar for Big Bird Emergency in yellow (Big Bird is, after all, a big yellow bird) while graying out the other bars visually communicates to the viewer this is the hospital deserving the most attention in this plot.</p>
</section>
<section id="realigning-the-plot" class="level3">
<h3 class="anchored" data-anchor-id="realigning-the-plot">Realigning the plot</h3>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/plot_07.png" class="img-fluid"></p>
<p>In the vast majority of cases, a left-aligned the title/subtitle is strongly preferred over center-aligned one. In western countries, we tend to naturally orient our attention in the top-left corner of plots when we first view them, then migrate our gaze downwards and leftwards (eye-tracking studies confirm this, however I can’t seem to find the source I heard this from, so you’ll just have to take my word for it here). By aligning the title to the left, we reduce how much the viewer needs to dart their eyes around the plot to understand it.</p>
</section>
<section id="adding-the-final-touches" class="level3">
<h3 class="anchored" data-anchor-id="adding-the-final-touches">Adding the final touches</h3>
<p><img src="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/pics/plot_08.png" class="img-fluid"></p>
<p>Adding some final formatting touches to polish up the visualization not only improves the quality of the plot but also shows the viewer that you’re serious about your craft and willing to go the extra mile to really make a visualization shine. In this case, applying comma-formatting to the x-axis, changing the font, and updating the background to an off-white are all minor edits, but their effects have a big impact on the visualization’s overall presentation.</p>
<p></p><div id="tweet-48693"></div><script>tweet={"url":"https:\/\/twitter.com\/flyosity\/status\/1495087213150879747","author_name":"Mike Rundle","author_url":"https:\/\/twitter.com\/flyosity","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EMy buddy is an electrician and told me a few months ago that he always leaves the screws in a vertical position on jobs as a sign of craftsmanship. Been thinking ever since what my “vertical screws” equivalent is for product design. \u003Ca href=\"https:\/\/t.co\/dM9CFEG8MF\"\u003Epic.twitter.com\/dM9CFEG8MF\u003C\/a\u003E\u003C\/p\u003E&mdash; Mike Rundle (@flyosity) \u003Ca href=\"https:\/\/twitter.com\/flyosity\/status\/1495087213150879747?ref_src=twsrc%5Etfw\"\u003EFebruary 19, 2022\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-48693").innerHTML = tweet["html"];</script><p></p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2022,
  author = {Mark Rieke},
  title = {Practical {Data} {Visualization} {Tips} for {Excel} {Users}},
  date = {2022-05-31},
  url = {https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2022" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2022. <span>“Practical Data Visualization Tips for Excel
Users.”</span> May 31, 2022. <a href="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users">https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users</a>.
</div></div></section></div> ]]></description>
  <category>rstats</category>
  <guid>https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/index.html</guid>
  <pubDate>Tue, 31 May 2022 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2022-05-31-practical-data-vizualization-tips-for-excel-users/featured.png" medium="image" type="image/png" height="82" width="144"/>
</item>
<item>
  <title>“30 is not Statistical”</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2022-04-28-30-is-not-statistical/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># setup themes</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">theme_set</span>(</span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;">theme_minimal</span>(<span class="at" style="color: #657422;">base_family =</span> <span class="st" style="color: #20794D;">"Roboto Slab"</span>,</span>
<span id="cb1-6">                <span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">13</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-7">    <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>,</span>
<span id="cb1-8">          <span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#F9F9FC"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#F9F9FC"</span>),</span>
<span id="cb1-9">          <span class="at" style="color: #657422;">plot.title =</span> ggtext<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">element_markdown</span>(),</span>
<span id="cb1-10">          <span class="at" style="color: #657422;">plot.subtitle =</span> ggtext<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">element_markdown</span>())</span>
<span id="cb1-11">)</span></code></pre></div>
</details>
</div>
<p>In my role as an analyst, my team and I are required to put together reports that summarize each hospital’s patient satisfaction performance in a table. These are reviewed by our system’s executive leadership team and the hospital directors in monthly operational reviews (MORs). The format I inherited, loosely recreated below with fake data, color codes each month’s performance against the hospital’s goal: green when outperforming and red when underperforming.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-04-28-30-is-not-statistical/pics/table.png" class="img-fluid"></p>
<p>“But wait!” you may ask, “what do the gray cells mean?” <em>That</em>, dear reader, has been the source of most of my organizational frustration in this role. When the number of surveys returned is less than 30 for a given month, we simply gray-out that cell under the guise of the phrase, “30 is not statistical.”</p>
<p>I don’t think this practice (or something similar) is unique to my organization — I’ve seen similar outputs from previous employers and in other companies’ published reports. While this isn’t the best use of the underlying data, I understand <em>why</em> this sort of method gets adapted into so many organizational lexicons: companies want their decisions to be based on data and their understanding, albeit incorrect, is that a sample size less than 30 doesn’t provide meaningful info. For this reason, I think it’s important to explore <strong>where</strong> this sentiment came from, <strong>what</strong> the problems with this data-presentation style are, <strong>what</strong> I think would be a better way of presenting the data, and ultimately <strong>why</strong> companies may be hesitant to update their methodology.</p>
<section id="where-does-this-come-from" class="level2">
<h2 class="anchored" data-anchor-id="where-does-this-come-from">Where does this come from?</h2>
<p>At first glance, 30 is a pretty arbitrary number to use as a cutoff. In this case, this cutoff can cause downstream issues with interpreting the data because the difference between <code>n = 30</code> and <code>n = 31</code> is so visually distinct! In our case, the cutoff of 30 was passed down from one of our previous survey vendors, but I believe that the wider root of why this value appears has to do with the <a href="https://en.wikipedia.org/wiki/Central_limit_theorem">central limit theorem</a>.</p>
<p>The central limit theorem states that as a sample size increases, the probability distribution of the sample mean approaches a normal distribution, <em>regardless of the source distribution!</em> As a rule of thumb, this theorem holds true when the <a href="https://stats.stackexchange.com/questions/2541/what-references-should-be-cited-to-support-using-30-as-a-large-enough-sample-siz">sample size is at least 30</a>. In practice, this means that when there are at least 30 samples, we can generally approximate the distribution as normal. The central limit theorem is incredibly useful and an important foundation for a wide array of statistical techniques. Stating that the data doesn’t meet the criteria for the central limit theorem to hold, however, is very different from saying that data is worthless when the sample size is less than 30!</p>
</section>
<section id="problems-with-this-approach" class="level2">
<h2 class="anchored" data-anchor-id="problems-with-this-approach">Problems with this approach</h2>
<ol type="1">
<li>Sometimes, the source distribution is known, and whether or not the central limit theorem holds is irrelevant! In my particular case, I am often dealing with patient satisfaction data that lies on a 0-100% scale. This is the perfect use case for modeling the sample with the <a href="https://en.wikipedia.org/wiki/Beta_distribution">beta distribution</a> (which is bound by 0 and 1).</li>
<li>As mentioned above, graying-out samples where the sample size is less than 30 visually communicates that some months can be ignored. This is a waste of valuable data! While it is true that a larger sample size implies greater confidence in the score, the confidence interval widths for <code>n = 30</code> and <code>n = 31</code> are not <em>so different</em> and we can still estimate the uncertainty with the smaller sample.</li>
<li>Tabular data is incredibly difficult to parse at-a-glance! <a href="https://www.rstudio.com/resources/rstudioconf-2020/effective-visualizations/">Research shows</a> that spatial encoding (e.g., length, position) is the most interpretable mode of data presentation. Intuitively, it makes sense — there’s a lot less mental overhead involved in looking at a set of points and comparing positions <em>collectively</em> than stringing together several comparisons of individual pairs of numbers in your head.</li>
</ol>
</section>
<section id="a-better-approach" class="level2">
<h2 class="anchored" data-anchor-id="a-better-approach">A better approach</h2>
<p>When the underlying distribution is known, a better approach would be to display the data in a plot, regardless of n-size, and use a confidence interval to indicate uncertainty. In this case, we can plot each survey’s scores over time with a line and use a shaded area for the confidence interval.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># copied via datapasta</span></span>
<span id="cb2-2">responses <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb2-3">  tibble<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tribble</span>(</span>
<span id="cb2-4">    <span class="sc" style="color: #5E5E5E;">~</span>survey, <span class="sc" style="color: #5E5E5E;">~</span>goal, <span class="sc" style="color: #5E5E5E;">~</span>month, <span class="sc" style="color: #5E5E5E;">~</span>score, <span class="sc" style="color: #5E5E5E;">~</span>n,</span>
<span id="cb2-5">    <span class="st" style="color: #20794D;">"Survey A"</span>, 60L, <span class="st" style="color: #20794D;">"Jul"</span>, <span class="fl" style="color: #AD0000;">65.8</span>,   <span class="dv" style="color: #AD0000;">277</span>,</span>
<span id="cb2-6">    <span class="st" style="color: #20794D;">"Survey A"</span>, 60L, <span class="st" style="color: #20794D;">"Aug"</span>, <span class="fl" style="color: #AD0000;">66.5</span>,   <span class="dv" style="color: #AD0000;">264</span>,</span>
<span id="cb2-7">    <span class="st" style="color: #20794D;">"Survey A"</span>, 60L, <span class="st" style="color: #20794D;">"Sep"</span>, <span class="fl" style="color: #AD0000;">50.2</span>,   <span class="dv" style="color: #AD0000;">279</span>,</span>
<span id="cb2-8">    <span class="st" style="color: #20794D;">"Survey A"</span>, 60L, <span class="st" style="color: #20794D;">"Oct"</span>, <span class="fl" style="color: #AD0000;">57.4</span>,   <span class="dv" style="color: #AD0000;">287</span>,</span>
<span id="cb2-9">    <span class="st" style="color: #20794D;">"Survey A"</span>, 60L, <span class="st" style="color: #20794D;">"Nov"</span>, <span class="fl" style="color: #AD0000;">63.9</span>,   <span class="dv" style="color: #AD0000;">265</span>,</span>
<span id="cb2-10">    <span class="st" style="color: #20794D;">"Survey A"</span>, 60L, <span class="st" style="color: #20794D;">"Dec"</span>, <span class="fl" style="color: #AD0000;">60.7</span>,   <span class="dv" style="color: #AD0000;">270</span>,</span>
<span id="cb2-11">    <span class="st" style="color: #20794D;">"Survey A"</span>, 60L, <span class="st" style="color: #20794D;">"Jan"</span>,   <span class="dv" style="color: #AD0000;">60</span>,   <span class="dv" style="color: #AD0000;">263</span>,</span>
<span id="cb2-12">    <span class="st" style="color: #20794D;">"Survey A"</span>, 60L, <span class="st" style="color: #20794D;">"Feb"</span>, <span class="fl" style="color: #AD0000;">57.1</span>,   <span class="dv" style="color: #AD0000;">281</span>,</span>
<span id="cb2-13">    <span class="st" style="color: #20794D;">"Survey A"</span>, 60L, <span class="st" style="color: #20794D;">"Mar"</span>, <span class="fl" style="color: #AD0000;">49.6</span>,   <span class="dv" style="color: #AD0000;">267</span>,</span>
<span id="cb2-14">    <span class="st" style="color: #20794D;">"Survey B"</span>, 75L, <span class="st" style="color: #20794D;">"Jul"</span>, <span class="fl" style="color: #AD0000;">74.5</span>,    <span class="dv" style="color: #AD0000;">35</span>,</span>
<span id="cb2-15">    <span class="st" style="color: #20794D;">"Survey B"</span>, 75L, <span class="st" style="color: #20794D;">"Aug"</span>, <span class="fl" style="color: #AD0000;">82.9</span>,    <span class="dv" style="color: #AD0000;">32</span>,</span>
<span id="cb2-16">    <span class="st" style="color: #20794D;">"Survey B"</span>, 75L, <span class="st" style="color: #20794D;">"Sep"</span>, <span class="fl" style="color: #AD0000;">73.7</span>,    <span class="dv" style="color: #AD0000;">39</span>,</span>
<span id="cb2-17">    <span class="st" style="color: #20794D;">"Survey B"</span>, 75L, <span class="st" style="color: #20794D;">"Oct"</span>, <span class="fl" style="color: #AD0000;">86.2</span>,    <span class="dv" style="color: #AD0000;">27</span>,</span>
<span id="cb2-18">    <span class="st" style="color: #20794D;">"Survey B"</span>, 75L, <span class="st" style="color: #20794D;">"Nov"</span>,   <span class="dv" style="color: #AD0000;">79</span>,    <span class="dv" style="color: #AD0000;">31</span>,</span>
<span id="cb2-19">    <span class="st" style="color: #20794D;">"Survey B"</span>, 75L, <span class="st" style="color: #20794D;">"Dec"</span>,   <span class="dv" style="color: #AD0000;">79</span>,    <span class="dv" style="color: #AD0000;">26</span>,</span>
<span id="cb2-20">    <span class="st" style="color: #20794D;">"Survey B"</span>, 75L, <span class="st" style="color: #20794D;">"Jan"</span>, <span class="fl" style="color: #AD0000;">73.9</span>,    <span class="dv" style="color: #AD0000;">29</span>,</span>
<span id="cb2-21">    <span class="st" style="color: #20794D;">"Survey B"</span>, 75L, <span class="st" style="color: #20794D;">"Feb"</span>, <span class="fl" style="color: #AD0000;">71.9</span>,    <span class="dv" style="color: #AD0000;">20</span>,</span>
<span id="cb2-22">    <span class="st" style="color: #20794D;">"Survey B"</span>, 75L, <span class="st" style="color: #20794D;">"Mar"</span>, <span class="fl" style="color: #AD0000;">47.3</span>,    <span class="dv" style="color: #AD0000;">26</span>,</span>
<span id="cb2-23">    <span class="st" style="color: #20794D;">"Survey C"</span>, 55L, <span class="st" style="color: #20794D;">"Jul"</span>, <span class="fl" style="color: #AD0000;">52.7</span>,    <span class="dv" style="color: #AD0000;">73</span>,</span>
<span id="cb2-24">    <span class="st" style="color: #20794D;">"Survey C"</span>, 55L, <span class="st" style="color: #20794D;">"Aug"</span>, <span class="fl" style="color: #AD0000;">53.7</span>,    <span class="dv" style="color: #AD0000;">96</span>,</span>
<span id="cb2-25">    <span class="st" style="color: #20794D;">"Survey C"</span>, 55L, <span class="st" style="color: #20794D;">"Sep"</span>,   <span class="dv" style="color: #AD0000;">53</span>,    <span class="dv" style="color: #AD0000;">81</span>,</span>
<span id="cb2-26">    <span class="st" style="color: #20794D;">"Survey C"</span>, 55L, <span class="st" style="color: #20794D;">"Oct"</span>, <span class="fl" style="color: #AD0000;">54.2</span>,    <span class="dv" style="color: #AD0000;">99</span>,</span>
<span id="cb2-27">    <span class="st" style="color: #20794D;">"Survey C"</span>, 55L, <span class="st" style="color: #20794D;">"Nov"</span>, <span class="fl" style="color: #AD0000;">50.6</span>,    <span class="dv" style="color: #AD0000;">85</span>,</span>
<span id="cb2-28">    <span class="st" style="color: #20794D;">"Survey C"</span>, 55L, <span class="st" style="color: #20794D;">"Dec"</span>, <span class="fl" style="color: #AD0000;">61.8</span>,    <span class="dv" style="color: #AD0000;">83</span>,</span>
<span id="cb2-29">    <span class="st" style="color: #20794D;">"Survey C"</span>, 55L, <span class="st" style="color: #20794D;">"Jan"</span>, <span class="fl" style="color: #AD0000;">55.4</span>,    <span class="dv" style="color: #AD0000;">97</span>,</span>
<span id="cb2-30">    <span class="st" style="color: #20794D;">"Survey C"</span>, 55L, <span class="st" style="color: #20794D;">"Feb"</span>, <span class="fl" style="color: #AD0000;">58.3</span>,    <span class="dv" style="color: #AD0000;">82</span>,</span>
<span id="cb2-31">    <span class="st" style="color: #20794D;">"Survey C"</span>, 55L, <span class="st" style="color: #20794D;">"Mar"</span>, <span class="fl" style="color: #AD0000;">62.9</span>,    <span class="dv" style="color: #AD0000;">83</span>,</span>
<span id="cb2-32">    <span class="st" style="color: #20794D;">"Survey D"</span>, 70L, <span class="st" style="color: #20794D;">"Jul"</span>, <span class="fl" style="color: #AD0000;">53.7</span>,    <span class="dv" style="color: #AD0000;">29</span>,</span>
<span id="cb2-33">    <span class="st" style="color: #20794D;">"Survey D"</span>, 70L, <span class="st" style="color: #20794D;">"Aug"</span>, <span class="fl" style="color: #AD0000;">66.2</span>,    <span class="dv" style="color: #AD0000;">38</span>,</span>
<span id="cb2-34">    <span class="st" style="color: #20794D;">"Survey D"</span>, 70L, <span class="st" style="color: #20794D;">"Sep"</span>, <span class="fl" style="color: #AD0000;">85.9</span>,    <span class="dv" style="color: #AD0000;">36</span>,</span>
<span id="cb2-35">    <span class="st" style="color: #20794D;">"Survey D"</span>, 70L, <span class="st" style="color: #20794D;">"Oct"</span>, <span class="fl" style="color: #AD0000;">78.8</span>,    <span class="dv" style="color: #AD0000;">28</span>,</span>
<span id="cb2-36">    <span class="st" style="color: #20794D;">"Survey D"</span>, 70L, <span class="st" style="color: #20794D;">"Nov"</span>, <span class="fl" style="color: #AD0000;">71.2</span>,    <span class="dv" style="color: #AD0000;">32</span>,</span>
<span id="cb2-37">    <span class="st" style="color: #20794D;">"Survey D"</span>, 70L, <span class="st" style="color: #20794D;">"Dec"</span>, <span class="fl" style="color: #AD0000;">71.6</span>,    <span class="dv" style="color: #AD0000;">38</span>,</span>
<span id="cb2-38">    <span class="st" style="color: #20794D;">"Survey D"</span>, 70L, <span class="st" style="color: #20794D;">"Jan"</span>, <span class="fl" style="color: #AD0000;">68.7</span>,    <span class="dv" style="color: #AD0000;">39</span>,</span>
<span id="cb2-39">    <span class="st" style="color: #20794D;">"Survey D"</span>, 70L, <span class="st" style="color: #20794D;">"Feb"</span>, <span class="fl" style="color: #AD0000;">76.1</span>,    <span class="dv" style="color: #AD0000;">37</span>,</span>
<span id="cb2-40">    <span class="st" style="color: #20794D;">"Survey D"</span>, 70L, <span class="st" style="color: #20794D;">"Mar"</span>, <span class="fl" style="color: #AD0000;">74.9</span>,    <span class="dv" style="color: #AD0000;">36</span></span>
<span id="cb2-41">  )</span>
<span id="cb2-42"></span>
<span id="cb2-43">responses <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-44">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">month =</span> <span class="fu" style="color: #4758AB;">paste</span>(month, <span class="st" style="color: #20794D;">"1st, 2022"</span>),</span>
<span id="cb2-45">         <span class="at" style="color: #657422;">month =</span> lubridate<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">mdy</span>(month),</span>
<span id="cb2-46">         <span class="at" style="color: #657422;">month =</span> lubridate<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">month</span>(month),</span>
<span id="cb2-47">         <span class="at" style="color: #657422;">month =</span> <span class="fu" style="color: #4758AB;">case_when</span>(month <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">7</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"2022"</span>, month, <span class="st" style="color: #20794D;">"1"</span>, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">"-"</span>), </span>
<span id="cb2-48">                           month <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">6</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"2021"</span>, month, <span class="st" style="color: #20794D;">"1"</span>, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">"-"</span>)),</span>
<span id="cb2-49">         <span class="at" style="color: #657422;">month =</span> lubridate<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">ymd</span>(month),</span>
<span id="cb2-50">         <span class="at" style="color: #657422;">score =</span> score<span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb2-51">         <span class="at" style="color: #657422;">alpha =</span> score <span class="sc" style="color: #5E5E5E;">*</span> n,</span>
<span id="cb2-52">         <span class="at" style="color: #657422;">beta =</span> n <span class="sc" style="color: #5E5E5E;">-</span> alpha) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-53">  riekelib<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">beta_interval</span>(alpha, beta) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-54">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> month,</span>
<span id="cb2-55">             <span class="at" style="color: #657422;">y =</span> score,</span>
<span id="cb2-56">             <span class="at" style="color: #657422;">ymin =</span> ci_lower,</span>
<span id="cb2-57">             <span class="at" style="color: #657422;">ymax =</span> ci_upper,</span>
<span id="cb2-58">             <span class="at" style="color: #657422;">color =</span> survey,</span>
<span id="cb2-59">             <span class="at" style="color: #657422;">fill =</span> survey)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-60">  <span class="fu" style="color: #4758AB;">geom_ribbon</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>,</span>
<span id="cb2-61">              <span class="at" style="color: #657422;">color =</span> <span class="cn" style="color: #8f5902;">NA</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-62">  <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-63">  <span class="fu" style="color: #4758AB;">geom_hline</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">yintercept =</span> goal<span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">100</span>),</span>
<span id="cb2-64">             <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-65">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>survey) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-66">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Monthly Patient Satisfaction Scores at **Hospital ABCD**"</span>,</span>
<span id="cb2-67">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Dashed line shows survey goal; shaded area represents 95% conidence interval"</span>,</span>
<span id="cb2-68">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb2-69">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb2-70">       <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"*Fake data that I made up for this example."</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb2-71">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">label_percent</span>()) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-72">  MetBrewer<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">scale_color_met_d</span>(<span class="st" style="color: #20794D;">"Egypt"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-73">  MetBrewer<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">scale_fill_met_d</span>(<span class="st" style="color: #20794D;">"Egypt"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-74">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"none"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2022-04-28-30-is-not-statistical/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>This, I believe, has a few benefits.</p>
<ol type="1">
<li>This is simply more visually appealing than the table. I (along with most people, I’d assume) prefer the look of a well formatted plot over a well formatted table (even if well formatted, a table is still a big block of text).</li>
<li>It is far easier to discern the overall trend. Instead of reading and trying to compare values, we can simply see which direction the line is moving!</li>
<li>Most imortantly, <em>we do not throw out valuable data because of sample size.</em> We actually end up encoding <em>more</em> information — n-size, which was missing from the table, is encoded in the width of the confidence interval (a smaller confidence interval indicates a larger sample). In this toy example, surveys B and D included a few months with fewer than 30 returns — can you tell which months they were without looking at the table?</li>
</ol>
<p>The tradeoff is that we can no longer explicitly see each month’s score and it is a bit harder to tell if a hospital is meeting the goal when the score is close. In my experience, however, this is not how formatted tables are used — executives that I interact with typically try to determine overall trends from tabular data!</p>
</section>
<section id="organizational-resistance" class="level2">
<h2 class="anchored" data-anchor-id="organizational-resistance">Organizational resistance</h2>
<p>While the changes suggested here have clear benefits over the table, I’ve thus far been unsuccessful in any attempts to change the reporting methodology and I suspect that similar efforts at other companies would encounter similar organizational resistance. Much of what’s stated below is anec-data, but I assume will ring true to anyone who has struggled with getting their proposed operational changes implemented.</p>
<p>As companies scale, it becomes more &amp; more difficult to implement change. On top of that, some industries (including Healthcare, the one I work in) are similarly inertial on an industry level. In this particular case, changing a report’s format may seem small in the grand scheme of things, but this is the same format the executive team has been seeing since 2017! The system executives and individual hospital leaders have a rapport and vernacular built around these monthly reports in this format — updating the format similarly requires that the executives and leaders update their long-held understanding and language built around tabular data.</p>
<p>Tabular data in general shows up in reports across industries. My hunch is that the main driver of this is the widespread integration of Microsoft Excel as the workhorse for most analysts’ tasks. Excel get wide use as a calculator, a data storage system (eek!), and a presentation tool. Most analysts are incredibly comfortable working in Excel and while it is possible to create plots that show both the score and confidence interval, it is far simpler to apply a bit of conditional formatting and submit the raw data as the report itself.</p>
<p>This is not to say that tabular reports have no use — when individual values are important, tabular reports are preferred! If, however, the goal is to understand trends over time or relationships between values, plots are a far better option!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2022,
  author = {Mark Rieke},
  title = {“30 Is Not {Statistical}”},
  date = {2022-04-28},
  url = {https://www.thedatadiary.net/posts/2022-04-28-30-is-not-statistical},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2022" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2022. <span>“<span>‘30 Is Not Statistical’</span>.”</span>
April 28, 2022. <a href="https://www.thedatadiary.net/posts/2022-04-28-30-is-not-statistical">https://www.thedatadiary.net/posts/2022-04-28-30-is-not-statistical</a>.
</div></div></section></div> ]]></description>
  <category>rstats</category>
  <guid>https://www.thedatadiary.net/posts/2022-04-28-30-is-not-statistical/index.html</guid>
  <pubDate>Thu, 28 Apr 2022 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2022-04-28-30-is-not-statistical/pics/table.png" medium="image" type="image/png" height="29" width="144"/>
</item>
<item>
  <title>Impeachment Republicans and Democracy</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2022-04-06-impeachment-republicans-and-democracy/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># setup themes</span></span>
<span id="cb1-4">extrafont<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">loadfonts</span>(<span class="at" style="color: #657422;">device =</span> <span class="st" style="color: #20794D;">"win"</span>)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">theme_set</span>(</span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;">theme_minimal</span>(<span class="at" style="color: #657422;">base_family =</span> <span class="st" style="color: #20794D;">"Roboto Slab"</span>,</span>
<span id="cb1-7">                <span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">13</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-8">    <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>,</span>
<span id="cb1-9">          <span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#F9F9FC"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#F9F9FC"</span>),</span>
<span id="cb1-10">          <span class="at" style="color: #657422;">plot.title =</span> ggtext<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">element_markdown</span>(),</span>
<span id="cb1-11">          <span class="at" style="color: #657422;">plot.subtitle =</span> ggtext<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">element_markdown</span>())</span>
<span id="cb1-12">)</span></code></pre></div>
</details>
</div>
<p>A few months ago, Harrison Lavelle wrote <a href="https://split-ticket.org/2022/01/10/impeachment-republicans-where-are-they-now/">a piece for Split Ticket</a> reviewing the electoral challenges faced by house republicans who voted to impeach Donald Trump for his role in the assault on the capitol. Examining the voting records of these republicans who broke with their colleagues shows, unsurprisingly, that they tend to be more supportive of bills protecting democratic (note — small “d”) norms.</p>
<p>FiveThirtyEight <a href="https://fivethirtyeight.com/features/which-senators-and-representatives-vote-in-favor-of-democracy/">developed a democracy index</a> to evaluate how members of congress vote to protect democratic basics and create a more inclusive democracy (higher scores indicate that the congressman/woman is more supportive of bills protecting/expanding democracy). The linked article is well worth reading and walks through the caveats and limitations of the metric, but, notably, house republicans who voted to impeach Donald Trump are on average more supportive of pro-democracy bills than their colleagues who voted to acquit (on bills through September 1st of last year, the day the article was published).</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># read in democracy scores</span></span>
<span id="cb2-2">comparisons <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"data/democracy_votes.csv"</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;"># impeachment republicans</span></span>
<span id="cb2-6">impeachment_republicans <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Liz Cheney"</span>, </span>
<span id="cb2-8">    <span class="st" style="color: #20794D;">"Anthony Gonzalez"</span>,</span>
<span id="cb2-9">    <span class="st" style="color: #20794D;">"Jaime Herrera Beutler"</span>,</span>
<span id="cb2-10">    <span class="st" style="color: #20794D;">"John Katko"</span>,</span>
<span id="cb2-11">    <span class="st" style="color: #20794D;">"Adam Kinzinger"</span>,</span>
<span id="cb2-12">    <span class="st" style="color: #20794D;">"Peter Meijer"</span>,</span>
<span id="cb2-13">    <span class="st" style="color: #20794D;">"Dan Newhouse"</span>,</span>
<span id="cb2-14">    <span class="st" style="color: #20794D;">"Tom Rice"</span>,</span>
<span id="cb2-15">    <span class="st" style="color: #20794D;">"Fred Upton"</span>,</span>
<span id="cb2-16">    <span class="st" style="color: #20794D;">"David G. Valadao"</span>)</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;"># plot comparisons</span></span>
<span id="cb2-19">comparisons <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-20">  <span class="fu" style="color: #4758AB;">rename_with</span>(str_to_lower) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;">filter</span>(chamber <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"House"</span>,</span>
<span id="cb2-22">         party <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Rep."</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-23">  <span class="fu" style="color: #4758AB;">select</span>(legislator, </span>
<span id="cb2-24">         <span class="at" style="color: #657422;">democracy_score =</span> <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">more expansive</span><span class="st" style="color: #20794D;">`</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-25">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">impeach_vote =</span> <span class="fu" style="color: #4758AB;">if_else</span>(legislator <span class="sc" style="color: #5E5E5E;">%in%</span> impeachment_republicans, <span class="st" style="color: #20794D;">"Impeach"</span>, <span class="st" style="color: #20794D;">"Acquit"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-26">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> impeach_vote,</span>
<span id="cb2-27">             <span class="at" style="color: #657422;">y =</span> democracy_score,</span>
<span id="cb2-28">             <span class="at" style="color: #657422;">color =</span> impeach_vote)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;">geom_boxplot</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-30">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>, </span>
<span id="cb2-31">             <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">4</span>,</span>
<span id="cb2-32">             <span class="at" style="color: #657422;">position =</span> <span class="fu" style="color: #4758AB;">position_jitter</span>(<span class="at" style="color: #657422;">width =</span> <span class="fl" style="color: #AD0000;">0.15</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-33">  <span class="fu" style="color: #4758AB;">scale_color_manual</span>(<span class="at" style="color: #657422;">values =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"#A97684"</span>, <span class="st" style="color: #20794D;">"#76A99B"</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-34">  <span class="fu" style="color: #4758AB;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-35">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"none"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-36">  shadowtext<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">geom_shadowtext</span>(<span class="at" style="color: #657422;">x =</span> <span class="fl" style="color: #AD0000;">1.85</span>,</span>
<span id="cb2-37">                              <span class="at" style="color: #657422;">y =</span> <span class="fl" style="color: #AD0000;">15.7</span>,</span>
<span id="cb2-38">                              <span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"Tom Rice"</span>,</span>
<span id="cb2-39">                              <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb2-40">                              <span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Roboto Slab"</span>,</span>
<span id="cb2-41">                              <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#76A99B"</span>,</span>
<span id="cb2-42">                              <span class="at" style="color: #657422;">bg.color =</span> <span class="st" style="color: #20794D;">"white"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-43">  shadowtext<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">geom_shadowtext</span>(<span class="at" style="color: #657422;">x =</span> <span class="fl" style="color: #AD0000;">1.2</span>,</span>
<span id="cb2-44">                              <span class="at" style="color: #657422;">y =</span> <span class="dv" style="color: #AD0000;">66</span>,</span>
<span id="cb2-45">                              <span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"Brian</span><span class="sc" style="color: #5E5E5E;">\n</span><span class="st" style="color: #20794D;">Fitzpatrick"</span>,</span>
<span id="cb2-46">                              <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb2-47">                              <span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Roboto Slab"</span>,</span>
<span id="cb2-48">                              <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#A97684"</span>,</span>
<span id="cb2-49">                              <span class="at" style="color: #657422;">bg.color =</span> <span class="st" style="color: #20794D;">"white"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-50">  shadowtext<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">geom_shadowtext</span>(<span class="at" style="color: #657422;">x =</span> <span class="fl" style="color: #AD0000;">0.85</span>,</span>
<span id="cb2-51">                              <span class="at" style="color: #657422;">y =</span> <span class="fl" style="color: #AD0000;">57.9</span>,</span>
<span id="cb2-52">                              <span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"Tom Reed"</span>,</span>
<span id="cb2-53">                              <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb2-54">                              <span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Roboto Slab"</span>,</span>
<span id="cb2-55">                              <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"#A97684"</span>,</span>
<span id="cb2-56">                              <span class="at" style="color: #657422;">bg.color =</span> <span class="st" style="color: #20794D;">"white"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-57">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"How do House Republicans who voted to"</span>,</span>
<span id="cb2-58">                     <span class="st" style="color: #20794D;">"&lt;span style=color:'#76A99B'&gt;**impeach**&lt;/span&gt;"</span>,</span>
<span id="cb2-59">                     <span class="st" style="color: #20794D;">"or"</span>,</span>
<span id="cb2-60">                     <span class="st" style="color: #20794D;">"&lt;span style=color:'#A97684'&gt;**acquit**&lt;/span&gt;"</span>,</span>
<span id="cb2-61">                     <span class="st" style="color: #20794D;">"Donald Trump differ?"</span>),</span>
<span id="cb2-62">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Comparing how often representatives take the more inclusive position on voting rights bills"</span>,</span>
<span id="cb2-63">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb2-64">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb2-65">       <span class="at" style="color: #657422;">caption =</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"Plot by @markjrieke</span><span class="sc" style="color: #5E5E5E;">\n</span><span class="st" style="color: #20794D;">"</span>,</span>
<span id="cb2-66">                       <span class="st" style="color: #20794D;">"Data courtesy of @FiveThirtyEight"</span>))</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-04-06-impeachment-republicans-and-democracy/featured.png" class="img-fluid"></p>
<p>There are some outliers: Tom Rice (SC-7) voted to impeach Trump but his votes on (small d) democratic bills are in line with the rest of house republicans whereas Brian Fitzpatrick (PA-1) and Tom Reed (NY-23) voted to acquit but have the highest pro-democracy scores by this ranking (there are other republicans who voted to acquit that have democracy scores similar to their colleagues who voted to impeach, but to avoid cluttering the plot, only the mathematical outliers are shown).</p>
<section id="polling-bites" class="level3">
<h3 class="anchored" data-anchor-id="polling-bites">Polling bites</h3>
<p>There has been very little movement in the generic congressional ballot — republicans are still <em>slightly favored</em> by ~2 points. Biden’s presidential approval rating received a slight bump at the onset of Russia’s invasion of Ukraine, but the marginal gains since then have faded away and he currently sits at a <strong>-12.6%</strong> net approval.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-04-06-impeachment-republicans-and-democracy/png/generic_ballot_current.png" class="img-fluid"></p>
<p><img src="https://www.thedatadiary.net/posts/2022-04-06-impeachment-republicans-and-democracy/png/approval_disapproval_current.png" class="img-fluid"></p>
<p><img src="https://www.thedatadiary.net/posts/2022-04-06-impeachment-republicans-and-democracy/png/net_approval_current.png" class="img-fluid"></p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2022,
  author = {Mark Rieke},
  title = {Impeachment {Republicans} and {Democracy}},
  date = {2022-04-06},
  url = {https://www.thedatadiary.net/posts/2022-04-06-impeachment-republicans-and-democracy},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2022" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2022. <span>“Impeachment Republicans and Democracy.”</span>
April 6, 2022. <a href="https://www.thedatadiary.net/posts/2022-04-06-impeachment-republicans-and-democracy">https://www.thedatadiary.net/posts/2022-04-06-impeachment-republicans-and-democracy</a>.
</div></div></section></div> ]]></description>
  <category>politics</category>
  <guid>https://www.thedatadiary.net/posts/2022-04-06-impeachment-republicans-and-democracy/index.html</guid>
  <pubDate>Wed, 06 Apr 2022 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2022-04-06-impeachment-republicans-and-democracy/featured.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Introducing {workboots}</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># setup themes</span></span>
<span id="cb1-2">extrafont<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">loadfonts</span>(<span class="at" style="color: #657422;">device =</span> <span class="st" style="color: #20794D;">"win"</span>)</span>
<span id="cb1-3">ggplot2<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">theme_set</span>(</span>
<span id="cb1-4">  ggplot2<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">theme_minimal</span>(<span class="at" style="color: #657422;">base_family =</span> <span class="st" style="color: #20794D;">"Roboto Slab"</span>, </span>
<span id="cb1-5">                         <span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">14</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-6">    ggplot2<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>,</span>
<span id="cb1-7">                   <span class="at" style="color: #657422;">plot.background =</span> ggplot2<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"white"</span>))</span>
<span id="cb1-8">)</span></code></pre></div>
</details>
</div>
<p>Sometimes, we want a model that generates a range of possible outcomes around each prediction and may opt for a model that can generate a prediction interval, like a linear model. Other times, we just care about point predictions and may opt to use a more powerful model like XGBoost. But what if we want the best of both worlds: getting a range of predictions while still using a powerful model? That’s where <a href="https://github.com/markjrieke/workboots"><code>{workboots}</code></a> comes to the rescue! <code>{workboots}</code> uses bootstrap resampling to train many models which can be used to generate a range of outcomes — regardless of model type.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots/pics/workboots.png" class="img-fluid"></p>
<section id="installation" class="level1">
<h1>Installation</h1>
<p>Version 0.1.0 of <code>{workboots}</code> is available on <a href="https://cran.r-project.org/web/packages/workboots/index.html">CRAN</a>. Given that the package is still in early development, however, I’d recommend installing the development version from <a href="https://github.com/markjrieke/workboots">github</a>:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># install from CRAN</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"workboots"</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;"># or install the development version</span></span>
<span id="cb2-5">devtools<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">install_github</span>(<span class="st" style="color: #20794D;">"markjrieke/workboots"</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="usage" class="level1">
<h1>Usage</h1>
<p><code>{workboots}</code> builds on top of the <a href="https://www.tidymodels.org/"><code>{tidymodels}</code></a> suite of packages and is intended to be used in conjunction with a <a href="https://workflows.tidymodels.org/">tidymodel workflow</a>. Teaching how to use <code>{tidymodels}</code> is beyond the scope of this post, but some helpful resources are linked at the bottom for further exploration.</p>
<p>We’ll walk through two examples that show the benefit of the package: estimating a linear model’s prediction interval and generating a prediction interval for a boosted tree model.</p>
<section id="estimating-a-prediction-interval" class="level2">
<h2 class="anchored" data-anchor-id="estimating-a-prediction-interval">Estimating a prediction interval</h2>
<p>Let’s get started with a model we know can generate a prediction interval: a basic linear model. In this example, we’ll use the <a href="https://modeldata.tidymodels.org/reference/ames.html">Ames housing dataset</a> to predict a home’s price based on its square footage.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(tidymodels)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;"># setup our data</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;">data</span>(<span class="st" style="color: #20794D;">"ames"</span>)</span>
<span id="cb3-5">ames_mod <span class="ot" style="color: #003B4F;">&lt;-</span> ames <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(First_Flr_SF, Sale_Price)</span></code></pre></div>
</details>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># relationship between square footage and price</span></span>
<span id="cb4-2">ames_mod <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> First_Flr_SF, <span class="at" style="color: #657422;">y =</span> Sale_Price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dollar_format</span>(), <span class="at" style="color: #657422;">trans =</span> <span class="st" style="color: #20794D;">"log10"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">comma_format</span>(), <span class="at" style="color: #657422;">trans =</span> <span class="st" style="color: #20794D;">"log10"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Relationship between Square Feet and Sale Price"</span>,</span>
<span id="cb4-8">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Linear relationship between the log transforms of square footage and price"</span>,</span>
<span id="cb4-9">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb4-10">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots/pics/plot_01.png" class="img-fluid"></p>
<p>We can use a linear model to predict the log transform of <code>Sale_Price</code> based on the log transform of <code>First_Flr_SF</code>. In this example, we’ll train a linear model then plot our predictions against a holdout set with a prediction interval.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># log transform</span></span>
<span id="cb5-2">ames_mod <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb5-3">  ames_mod <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">everything</span>(), log10))</span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;"># split into train/test data</span></span>
<span id="cb5-7"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">918</span>)</span>
<span id="cb5-8">ames_split <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">initial_split</span>(ames_mod)</span>
<span id="cb5-9">ames_train <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">training</span>(ames_split)</span>
<span id="cb5-10">ames_test <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">testing</span>(ames_split)</span></code></pre></div>
</details>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># train a linear model</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">314</span>)</span>
<span id="cb6-3">mod <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">lm</span>(Sale_Price <span class="sc" style="color: #5E5E5E;">~</span> First_Flr_SF, <span class="at" style="color: #657422;">data =</span> ames_train)</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;"># predict on new data with a prediction interval</span></span>
<span id="cb6-6">ames_preds <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb6-7">  mod <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;">predict</span>(ames_test, <span class="at" style="color: #657422;">interval =</span> <span class="st" style="color: #20794D;">"predict"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;">as_tibble</span>()</span></code></pre></div>
</details>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># plot!</span></span>
<span id="cb7-2">ames_preds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-3">  </span>
<span id="cb7-4">  <span class="co" style="color: #5E5E5E;"># re-scale predictions to match the original dataset's scale</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;">bind_cols</span>(ames_test) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">everything</span>(), <span class="sc" style="color: #5E5E5E;">~</span><span class="dv" style="color: #AD0000;">10</span><span class="sc" style="color: #5E5E5E;">^</span>.x)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-7">  </span>
<span id="cb7-8">  <span class="co" style="color: #5E5E5E;"># add geoms</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> First_Flr_SF)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> Sale_Price),</span>
<span id="cb7-11">             <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> fit),</span>
<span id="cb7-13">            <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-14">  <span class="fu" style="color: #4758AB;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">ymin =</span> lwr,</span>
<span id="cb7-15">                  <span class="at" style="color: #657422;">ymax =</span> upr),</span>
<span id="cb7-16">              <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-17">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dollar_format</span>(), <span class="at" style="color: #657422;">trans =</span> <span class="st" style="color: #20794D;">"log10"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-18">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">comma_format</span>(), <span class="at" style="color: #657422;">trans =</span> <span class="st" style="color: #20794D;">"log10"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-19">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Linear Model of Sale Price predicted by Square Footage"</span>,</span>
<span id="cb7-20">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Shaded area represents the 95% prediction interval"</span>,</span>
<span id="cb7-21">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb7-22">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>) </span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots/pics/plot_02.png" class="img-fluid"> With <code>{workboots}</code>, we can approximate the linear model’s prediction interval by passing a workflow built on a linear model to the function <code>predict_boots()</code>.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">library</span>(tidymodels)</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;">library</span>(workboots)</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;"># setup a workflow with a linear model</span></span>
<span id="cb8-5">ames_wf <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;">add_recipe</span>(<span class="fu" style="color: #4758AB;">recipe</span>(Sale_Price <span class="sc" style="color: #5E5E5E;">~</span> First_Flr_SF, <span class="at" style="color: #657422;">data =</span> ames_train)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;">add_model</span>(<span class="fu" style="color: #4758AB;">linear_reg</span>())</span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;"># generate bootstrap predictions on ames_test</span></span>
<span id="cb8-11"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">713</span>)</span>
<span id="cb8-12">ames_preds_boot <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb8-13">  ames_wf <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-14">  <span class="fu" style="color: #4758AB;">predict_boots</span>(</span>
<span id="cb8-15">    <span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">2000</span>,</span>
<span id="cb8-16">    <span class="at" style="color: #657422;">training_data =</span> ames_train,</span>
<span id="cb8-17">    <span class="at" style="color: #657422;">new_data =</span> ames_test</span>
<span id="cb8-18">  )</span></code></pre></div>
</details>
</div>
<p><code>predict_boots()</code> works by creating 2000 <a href="https://rsample.tidymodels.org/reference/bootstraps.html">bootstrap resamples</a> of the training data, fitting a linear model to each resample, then generating 2000 predictions for each home’s price in the holdout set. We can then use <code>summarise_predictions()</code> to generate upper and lower intervals for each prediction.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">ames_preds_boot <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">summarise_predictions</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 733 × 5
   rowid .preds               .pred .pred_lower .pred_upper
   &lt;int&gt; &lt;list&gt;               &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;
 1     1 &lt;tibble [2,000 × 2]&gt;  5.44        5.17        5.71
 2     2 &lt;tibble [2,000 × 2]&gt;  5.27        4.98        5.55
 3     3 &lt;tibble [2,000 × 2]&gt;  5.25        4.97        5.52
 4     4 &lt;tibble [2,000 × 2]&gt;  5.40        5.11        5.67
 5     5 &lt;tibble [2,000 × 2]&gt;  5.44        5.15        5.71
 6     6 &lt;tibble [2,000 × 2]&gt;  5.21        4.93        5.49
 7     7 &lt;tibble [2,000 × 2]&gt;  4.94        4.67        5.22
 8     8 &lt;tibble [2,000 × 2]&gt;  5.13        4.85        5.40
 9     9 &lt;tibble [2,000 × 2]&gt;  5.14        4.87        5.42
10    10 &lt;tibble [2,000 × 2]&gt;  5.41        5.13        5.69
# … with 723 more rows</code></pre>
</div>
</div>
<p>By overlaying the intervals on top of one another, we can see that the prediction interval generated by <code>predict_boots()</code> is a good approximation of the theoretical interval generated by <code>lm()</code>.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">ames_preds_boot <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">summarise_predictions</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">bind_cols</span>(ames_preds) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;">bind_cols</span>(ames_test) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">c</span>(.pred<span class="sc" style="color: #5E5E5E;">:</span>Sale_Price), <span class="sc" style="color: #5E5E5E;">~</span><span class="dv" style="color: #AD0000;">10</span><span class="sc" style="color: #5E5E5E;">^</span>.x)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> First_Flr_SF)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> Sale_Price),</span>
<span id="cb11-8">             <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> fit),</span>
<span id="cb11-10">            <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">ymin =</span> lwr,</span>
<span id="cb11-12">                  <span class="at" style="color: #657422;">ymax =</span> upr),</span>
<span id="cb11-13">              <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-14">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> .pred),</span>
<span id="cb11-15">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>,</span>
<span id="cb11-16">             <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-17">  <span class="fu" style="color: #4758AB;">geom_errorbar</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">ymin =</span> .pred_lower,</span>
<span id="cb11-18">                    <span class="at" style="color: #657422;">ymax =</span> .pred_upper),</span>
<span id="cb11-19">                <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>,</span>
<span id="cb11-20">                <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>,</span>
<span id="cb11-21">                <span class="at" style="color: #657422;">width =</span> <span class="fl" style="color: #AD0000;">0.0125</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-22">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dollar_format</span>(), <span class="at" style="color: #657422;">trans =</span> <span class="st" style="color: #20794D;">"log10"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-23">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">comma_format</span>(), <span class="at" style="color: #657422;">trans =</span> <span class="st" style="color: #20794D;">"log10"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-24">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Linear Model of Sale Price predicted by Square Footage"</span>,</span>
<span id="cb11-25">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Bootstrap prediction interval closely matches theoretical prediction interval"</span>,</span>
<span id="cb11-26">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb11-27">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots/pics/plot_03.png" class="img-fluid"></p>
<p>Both <code>lm()</code> and <code>summarise_predictions()</code> use a 95% prediction interval by default but we can generate other intervals by passing different values to the parameter <code>conf</code>:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">ames_preds_boot <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-2">  </span>
<span id="cb12-3">  <span class="co" style="color: #5E5E5E;"># generate 95% prediction interval</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;">summarise_predictions</span>(<span class="at" style="color: #657422;">conf =</span> <span class="fl" style="color: #AD0000;">0.95</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;">rename</span>(<span class="at" style="color: #657422;">.pred_lower_95 =</span> .pred_lower,</span>
<span id="cb12-6">         <span class="at" style="color: #657422;">.pred_upper_95 =</span> .pred_upper) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>.pred) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-8">  </span>
<span id="cb12-9">  <span class="co" style="color: #5E5E5E;"># generate 80% prediction interval</span></span>
<span id="cb12-10">  <span class="fu" style="color: #4758AB;">summarise_predictions</span>(<span class="at" style="color: #657422;">conf =</span> <span class="fl" style="color: #AD0000;">0.80</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-11">  <span class="fu" style="color: #4758AB;">rename</span>(<span class="at" style="color: #657422;">.pred_lower_80 =</span> .pred_lower,</span>
<span id="cb12-12">         <span class="at" style="color: #657422;">.pred_upper_80 =</span> .pred_upper) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-13">  <span class="fu" style="color: #4758AB;">bind_cols</span>(ames_test) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-14">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">c</span>(.pred_lower_95<span class="sc" style="color: #5E5E5E;">:</span>Sale_Price), <span class="sc" style="color: #5E5E5E;">~</span><span class="dv" style="color: #AD0000;">10</span><span class="sc" style="color: #5E5E5E;">^</span>.x)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-15">  </span>
<span id="cb12-16">  <span class="co" style="color: #5E5E5E;"># plot!</span></span>
<span id="cb12-17">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> First_Flr_SF)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-18">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> Sale_Price),</span>
<span id="cb12-19">             <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-20">  <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> .pred),</span>
<span id="cb12-21">            <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>,</span>
<span id="cb12-22">            <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-23">  <span class="fu" style="color: #4758AB;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">ymin =</span> .pred_lower_95,</span>
<span id="cb12-24">                  <span class="at" style="color: #657422;">ymax =</span> .pred_upper_95),</span>
<span id="cb12-25">              <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>,</span>
<span id="cb12-26">              <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"blue"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-27">  <span class="fu" style="color: #4758AB;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">ymin =</span> .pred_lower_80,</span>
<span id="cb12-28">                  <span class="at" style="color: #657422;">ymax =</span> .pred_upper_80),</span>
<span id="cb12-29">              <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>,</span>
<span id="cb12-30">              <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"blue"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-31">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dollar_format</span>(), <span class="at" style="color: #657422;">trans =</span> <span class="st" style="color: #20794D;">"log10"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-32">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">comma_format</span>(), <span class="at" style="color: #657422;">trans =</span> <span class="st" style="color: #20794D;">"log10"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-33">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Linear Model of Sale Price predicted by Square Footage"</span>,</span>
<span id="cb12-34">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Predictions alongside 95% and 80% bootstrap prediction interval"</span>,</span>
<span id="cb12-35">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb12-36">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots/pics/plot_04.png" class="img-fluid"></p>
<p>As this example shows, <code>{workboots}</code> can approximate linear prediction intervals pretty well! But this isn’t very useful, since we can just generate a linear prediction interval from a linear model directly. The real benefit of <code>{workboots}</code> comes from generating prediction intervals from <em>any</em> model!</p>
</section>
<section id="bootstrap-prediction-intervals-with-non-linear-models" class="level2">
<h2 class="anchored" data-anchor-id="bootstrap-prediction-intervals-with-non-linear-models">Bootstrap prediction intervals with non-linear models</h2>
<p><a href="https://xgboost.readthedocs.io/en/stable/">XGBoost</a> is one of my favorite models. Up until now, however, in situations that require a prediction interval, I’ve had to opt for a simpler model. With <code>{workboots}</code>, that’s no longer an issue! In this example, we’ll use XGBoost and <code>{workboots}</code> to generate predictions of a penguins weight from the <a href="https://modeldata.tidymodels.org/reference/penguins.html">Palmer Penguins dataset</a>.</p>
<p>To get started, let’s build a workflow and train an individual model.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;"># load and prep data</span></span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;">data</span>(<span class="st" style="color: #20794D;">"penguins"</span>)</span>
<span id="cb13-3"></span>
<span id="cb13-4">penguins <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb13-5">  penguins <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;">drop_na</span>()</span>
<span id="cb13-7"></span>
<span id="cb13-8"><span class="co" style="color: #5E5E5E;"># split data into training and testing sets</span></span>
<span id="cb13-9"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">123</span>)</span>
<span id="cb13-10">penguins_split <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">initial_split</span>(penguins)</span>
<span id="cb13-11">penguins_test <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">testing</span>(penguins_split)</span>
<span id="cb13-12">penguins_train <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">training</span>(penguins_split)</span></code></pre></div>
</details>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;"># create a workflow</span></span>
<span id="cb14-2">penguins_wf <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-4">  </span>
<span id="cb14-5">  <span class="co" style="color: #5E5E5E;"># add preprocessing steps</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;">add_recipe</span>(</span>
<span id="cb14-7">    <span class="fu" style="color: #4758AB;">recipe</span>(body_mass_g <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> penguins_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-8">      <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal_predictors</span>()) </span>
<span id="cb14-9">  ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-10">  </span>
<span id="cb14-11">  <span class="co" style="color: #5E5E5E;"># add xgboost model spec</span></span>
<span id="cb14-12">  <span class="fu" style="color: #4758AB;">add_model</span>(</span>
<span id="cb14-13">    <span class="fu" style="color: #4758AB;">boost_tree</span>(<span class="st" style="color: #20794D;">"regression"</span>)</span>
<span id="cb14-14">  )</span>
<span id="cb14-15"></span>
<span id="cb14-16"><span class="co" style="color: #5E5E5E;"># fit to training data &amp; predict on test data</span></span>
<span id="cb14-17"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">234</span>)</span>
<span id="cb14-18">penguins_preds <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb14-19">  penguins_wf <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-20">  <span class="fu" style="color: #4758AB;">fit</span>(penguins_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-21">  <span class="fu" style="color: #4758AB;">predict</span>(penguins_test)</span></code></pre></div>
</details>
</div>
<p>As mentioned above, XGBoost models can only generate point predictions.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">penguins_preds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;">bind_cols</span>(penguins_test) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> body_mass_g,</span>
<span id="cb15-4">             <span class="at" style="color: #657422;">y =</span> .pred)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;">geom_point</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;">geom_abline</span>(<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb15-7">              <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"gray"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-8">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"XGBoost Model of Penguin Weight"</span>,</span>
<span id="cb15-9">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Individual model can only output individual predictions"</span>)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots/pics/plot_05.png" class="img-fluid"></p>
<p>With <code>{workboots}</code>, however, we can generate a prediction interval from our XGBoost model for each penguin’s weight!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;"># create 2000 models from bootstrap resamples and make predictions on the test set</span></span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">345</span>)</span>
<span id="cb16-3">penguins_preds_boot <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb16-4">  penguins_wf <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;">predict_boots</span>(</span>
<span id="cb16-6">    <span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">2000</span>,</span>
<span id="cb16-7">    <span class="at" style="color: #657422;">training_data =</span> penguins_train,</span>
<span id="cb16-8">    <span class="at" style="color: #657422;">new_data =</span> penguins_test</span>
<span id="cb16-9">  )</span>
<span id="cb16-10"></span>
<span id="cb16-11">penguins_preds_boot <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb16-12">  <span class="fu" style="color: #4758AB;">summarise_predictions</span>()</span></code></pre></div>
</details>
</div>
<p>How does our bootstrap model perform?</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">penguins_preds_boot <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;">summarise_predictions</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;">bind_cols</span>(penguins_test) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> body_mass_g,</span>
<span id="cb17-5">             <span class="at" style="color: #657422;">y =</span> .pred,</span>
<span id="cb17-6">             <span class="at" style="color: #657422;">ymin =</span> .pred_lower,</span>
<span id="cb17-7">             <span class="at" style="color: #657422;">ymax =</span> .pred_upper)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb17-8">  <span class="fu" style="color: #4758AB;">geom_abline</span>(<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb17-9">              <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"gray"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb17-10">  <span class="fu" style="color: #4758AB;">geom_errorbar</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>,</span>
<span id="cb17-11">                <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb17-12">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>,</span>
<span id="cb17-13">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb17-14">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"XGBoost Model of Penguin Weight"</span>,</span>
<span id="cb17-15">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Bootstrap models can generate prediction intervals"</span>)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots/pics/plot_06.png" class="img-fluid"></p>
<p>This particular model may be in need of some tuning for better performance, but the important takeaway is that we were able to generate a prediction distribution for the model! This method works with other regression models as well — just create a workflow then let <code>{workboots}</code> take care of the rest!</p>
</section>
</section>
<section id="tidymodel-resources" class="level1">
<h1>Tidymodel Resources</h1>
<ul>
<li><a href="https://www.tidymodels.org/start/">Getting Started with Tidymodels</a></li>
<li><a href="https://www.tmwr.org/">Tidy Modeling with R</a></li>
<li><a href="https://juliasilge.com/blog/">Julia Silge’s Blog</a> provides use cases of tidymodels with weekly <a href="https://github.com/rfordatascience/tidytuesday">#tidytuesday</a> datasets.</li>
</ul>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2022,
  author = {Mark Rieke},
  title = {Introducing \{Workboots\}},
  date = {2022-03-14},
  url = {https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2022" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2022. <span>“Introducing {Workboots}.”</span> March 14,
2022. <a href="https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots">https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots</a>.
</div></div></section></div> ]]></description>
  <category>rstats</category>
  <category>tidymodels</category>
  <category>workboots</category>
  <guid>https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots/index.html</guid>
  <pubDate>Mon, 14 Mar 2022 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2022-03-14-introducing-workboots/featured.png" medium="image" type="image/png" height="166" width="144"/>
</item>
<item>
  <title>The Data Science Hierarchy of Needs</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2022-02-22-the-data-science-hierarchy-of-needs/index.html</link>
  <description><![CDATA[ 




<p>I’ve never built a house (shocking, I know), but from far too much time spent watching HGTV, I understand the basic gist of it. You lay a foundation, setup framing and walls, route mechanical and electrical, then work on final touches like painting and decorating (to be sure, I’m hand-waiving a lot of detail away here). There’s a bit of wiggle room in the order you go about things — you can paint the living room walls before the ones in the bathroom or vice versa — but some steps definitely need to happen before others — you can’t paint either rooms until the walls themselves are actually up!</p>
<p>The same logic applies for data science — there are certain activities that are exceptionally hard to do without the proper infrastructure in place. Sometimes, we’re asked to chase after ~shiny objects~ without the support system to do so, when doing so may actually make our job more difficult in the future!</p>
<p>I recently stumbled across <a href="https://towardsdatascience.com/the-data-science-pyramid-8a018013c490">an article</a> that summarized this really succinctly with the following graphic: <strong>The Data Science Hierarchy of Needs</strong>.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-02-22-the-data-science-hierarchy-of-needs/pics/ds_hierarchy.png" class="img-fluid"></p>
<section id="collect" class="level4">
<h4 class="anchored" data-anchor-id="collect">Collect</h4>
<p>At a baseline, to do any sort of data work you need to actually have data on hand to work with! Whether there’s a formal process for collecting data or you need to gather data from disparate public sources, getting raw data out of the wild and into your system is the first step to being able to do any sort of analysis. In my case, as an analyst with a hospital’s patient satisfaction group, we need to actually send patients surveys.</p>
</section>
<section id="movestore" class="level4">
<h4 class="anchored" data-anchor-id="movestore">Move/Store</h4>
<p>Once you know where your data is coming from, setting up a reliable data flow from the source to your environment is needed. This is where a lot of headache can come from. Gathering data can be difficult but if the data is going to be used once for a one-off analysis, you don’t need to worry too much about repeatability, edge cases, or computing speed. Once you need to gather new data, thinking about infrastructure around new data gathering becomes much more important. A good chunk of the last eight months of my job has been working with our new survey vendor on this piece of the puzzle: standardizing data layouts, catching bugs in the pipeline, and setting up standards for access.</p>
</section>
<section id="exploretransform" class="level4">
<h4 class="anchored" data-anchor-id="exploretransform">Explore/Transform</h4>
<p>With a reliable flow of new/updated data streaming in, you now need to make sure the data is appropriate for general use. Automated anomaly/fraud/bot detection, light wrangling, and removing errant responses can all be considered a part of this single stage. This is necessary to ensure that any analyses you do or models you build are based on what you expect from the underlying data.</p>
</section>
<section id="aggregatelabel" class="level4">
<h4 class="anchored" data-anchor-id="aggregatelabel">Aggregate/Label</h4>
<p>I can’t recall the source, but the following quote about data science has stuck with me: “99% of data science work is counting — sometimes dividing.” A significant portion of my day-to-day work involves the tried-and-trusted <code>group_by() %&gt;% summarise()</code> pipeline. Making counts, percentages, running totals, etc. accessible to stakeholders via a dashboard can likely answer ~80% of the questions an analyst would have to field otherwise. It’s <em>so, so</em> important, however, to have the collection, storage, and preparation stages setup prior to ensure that stakeholders can <em>trust</em> that the data they’re seeing is accurate.</p>
</section>
<section id="learnoptimize" class="level4">
<h4 class="anchored" data-anchor-id="learnoptimize">Learn/Optimize</h4>
<p>If 80% of questions asked can be solved with grouped summaries and 20% require a model, it’s likely that 80% of that remaining 20% can be solved by a simple linear model. For example, “What effect does patient age have on their overall satisfaction?” can be answered with <code>lm(satisfaction_score ~ age)</code>. As relationships become more complex, you can add more terms to the model, or switch model architectures, but — in my own experience — the majority of modeling in practice can be represented by linear models (and, by extension, regularized models via <code>{glmnet}</code>).</p>
</section>
<section id="complex-models" class="level4">
<h4 class="anchored" data-anchor-id="complex-models">Complex Models</h4>
<p>Finally, a small subset of problems may require a more complex or powerful model type. But before you spin your wheels building a neural net or some other wacky architecture, you should first check if something simpler gets you what you need.</p>
</section>
<section id="some-closing-thoughts" class="level4">
<h4 class="anchored" data-anchor-id="some-closing-thoughts">Some Closing Thoughts</h4>
<p>This post is partially meant to be able to share some useful info and partially a reminder to me to look for the simple solution! I have a tendency to start off with something complex then realize that I could save a lot of work if I just switch to something simpler. The three baseline layers upstream of my domain are <em>super important</em> and definitely need oversight from someone with an eye for data engineering.</p>
</section>
<section id="polling-bites" class="level3">
<h3 class="anchored" data-anchor-id="polling-bites">Polling Bites</h3>
<p>The generic congressional ballot is starting to show some movement away from even split as Republicans have slowly climbed to <strong>51.2%</strong> in the polls and Democrats have fallen to <strong>48.8%</strong>.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-02-22-the-data-science-hierarchy-of-needs/pics/generic_ballot_current.png" class="img-fluid"></p>
<p>Biden’s net approval hasn’t shifted significantly since the last post — currently sitting at <strong>10.9%</strong> underwater with <strong>41.8%</strong> approval and <strong>52.7%</strong> disapproval.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-02-22-the-data-science-hierarchy-of-needs/pics/approval_disapproval_current.png" class="img-fluid"></p>
<p><img src="https://www.thedatadiary.net/posts/2022-02-22-the-data-science-hierarchy-of-needs/pics/net_approval_current.png" class="img-fluid"></p>
<p>(p.s., I’ve updated the color palettes here with the <a href="https://github.com/BlakeRMills/MetBrewer"><code>{MetBrewer}</code></a> package, which provides colorblind friendly palettes based on artwork in hte Metropolitan Museum of Art in New York).</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2022,
  author = {Mark Rieke},
  title = {The {Data} {Science} {Hierarchy} of {Needs}},
  date = {2022-02-22},
  url = {https://www.thedatadiary.net/posts/2022-02-22-the-data-science-hierarchy-of-needs},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2022" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2022. <span>“The Data Science Hierarchy of Needs.”</span>
February 22, 2022. <a href="https://www.thedatadiary.net/posts/2022-02-22-the-data-science-hierarchy-of-needs">https://www.thedatadiary.net/posts/2022-02-22-the-data-science-hierarchy-of-needs</a>.
</div></div></section></div> ]]></description>
  <category>rstats</category>
  <guid>https://www.thedatadiary.net/posts/2022-02-22-the-data-science-hierarchy-of-needs/index.html</guid>
  <pubDate>Tue, 22 Feb 2022 06:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2022-02-22-the-data-science-hierarchy-of-needs/featured.png" medium="image" type="image/png" height="124" width="144"/>
</item>
<item>
  <title>Pull Yourself Up by Your Bootstraps</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(tidymodels)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(MetBrewer)</span>
<span id="cb1-4"></span>
<span id="cb1-5">extrafont<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">loadfonts</span>(<span class="at" style="color: #657422;">device =</span> <span class="st" style="color: #20794D;">"win"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">theme_set</span>(<span class="fu" style="color: #4758AB;">theme_minimal</span>(<span class="at" style="color: #657422;">base_family =</span> <span class="st" style="color: #20794D;">"Roboto Slab"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-8">            <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"white"</span>)))</span></code></pre></div>
</details>
</div>
<div class="alert-warning">
<p><strong>Note (3/14/22): This article was written prior to the release of the <a href="https://github.com/markjrieke/workboots">{workboots}</a> package. Since the release of that package, I’ve discovered some errors with the methodology described here and would recommend instead referencing the <a href="https://thedatadiary.net/posts/2022-03-14-introducing-workboots">post associated with the release</a>.</strong></p>
</div>
<p>Statistical modeling sometimes presents conflicting goals. Oftentimes, building a model involves a mix of objectives that don’t necessarily mesh well together: super-accurate point predictions, explainability, fast performance, or an expression of confidence in the prediction. In my work as an analyst, I generally am focused on how explainable the model is while being able to express a confidence interval around each prediction. For that, simple linear models do the trick. If, however, I want to regularize via <code>{glmnet}</code> (which — with good reason — <a href="https://stats.stackexchange.com/questions/224796/why-are-confidence-intervals-and-p-values-not-reported-as-default-for-penalized">doesn’t provide confidence intervals</a>) or use a non-linear model like <code>{xgboost}</code>, I have to drop the confidence interval around predictions. Or so I had previously thought! As it turns out, building a series of models from bootstrap resamples provides an alternative method of generating a confidence interval around a prediction.</p>
<section id="setting-a-baseline-with-penguins" class="level3">
<h3 class="anchored" data-anchor-id="setting-a-baseline-with-penguins">Setting a baseline with penguins</h3>
<p>First, let’s build out a baseline linear model with the Palmer Penguins dataset. This dataset contains information on 344 penguins across three species types and three islands. For this example, we’ll use the penguin information to predict <code>body_mass_g</code>.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># load the data in from the tidytuesdayR package</span></span>
<span id="cb2-2">penguins_src <span class="ot" style="color: #003B4F;">&lt;-</span> tidytuesdayR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tt_load</span>(<span class="dv" style="color: #AD0000;">2020</span>, <span class="at" style="color: #657422;">week =</span> <span class="dv" style="color: #AD0000;">31</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
    Downloading file 1 of 2: `penguins.csv`
    Downloading file 2 of 2: `penguins_raw.csv`</code></pre>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># extract out the penguins dataset</span></span>
<span id="cb4-2">penguins <span class="ot" style="color: #003B4F;">&lt;-</span> penguins_src<span class="sc" style="color: #5E5E5E;">$</span>penguins</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">rm</span>(penguins_src)</span>
<span id="cb4-4"></span>
<span id="cb4-5">penguins</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 344 × 8
   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year
   &lt;chr&gt;   &lt;chr&gt;              &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt;
 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007
 2 Adelie  Torgersen           39.5          17.4        186    3800 fema…  2007
 3 Adelie  Torgersen           40.3          18          195    3250 fema…  2007
 4 Adelie  Torgersen           NA            NA           NA      NA &lt;NA&gt;   2007
 5 Adelie  Torgersen           36.7          19.3        193    3450 fema…  2007
 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007
 7 Adelie  Torgersen           38.9          17.8        181    3625 fema…  2007
 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007
 9 Adelie  Torgersen           34.1          18.1        193    3475 &lt;NA&gt;   2007
10 Adelie  Torgersen           42            20.2        190    4250 &lt;NA&gt;   2007
# … with 334 more rows, and abbreviated variable names ¹​flipper_length_mm,
#   ²​body_mass_g</code></pre>
</div>
</div>
<p>We’ll need to do some lite preprocessing before we start modeling — it looks like there are some <code>NAs</code> in <code>body_mass_g</code> and in <code>sex</code>. If I were creating a more serious model, I might keep the rows with <code>NAs</code> for <code>sex</code>, but since there are so few and this is an explainer, I’ll just filter them out.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># remove NA from body_mass_g and sex</span></span>
<span id="cb6-2">penguins <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb6-3">  penguins <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="sc" style="color: #5E5E5E;">!</span><span class="fu" style="color: #4758AB;">is.na</span>(body_mass_g),</span>
<span id="cb6-5">         <span class="sc" style="color: #5E5E5E;">!</span><span class="fu" style="color: #4758AB;">is.na</span>(sex))</span>
<span id="cb6-6"></span>
<span id="cb6-7">penguins</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 333 × 8
   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year
   &lt;chr&gt;   &lt;chr&gt;              &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt;
 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007
 2 Adelie  Torgersen           39.5          17.4        186    3800 fema…  2007
 3 Adelie  Torgersen           40.3          18          195    3250 fema…  2007
 4 Adelie  Torgersen           36.7          19.3        193    3450 fema…  2007
 5 Adelie  Torgersen           39.3          20.6        190    3650 male   2007
 6 Adelie  Torgersen           38.9          17.8        181    3625 fema…  2007
 7 Adelie  Torgersen           39.2          19.6        195    4675 male   2007
 8 Adelie  Torgersen           41.1          17.6        182    3200 fema…  2007
 9 Adelie  Torgersen           38.6          21.2        191    3800 male   2007
10 Adelie  Torgersen           34.6          21.1        198    4400 male   2007
# … with 323 more rows, and abbreviated variable names ¹​flipper_length_mm,
#   ²​body_mass_g</code></pre>
</div>
</div>
<p>It’s always good practice to explore the dataset prior to fitting a model, so let’s jump into some good ol’ fashioned EDA.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;"># how are species/island related to body mass?</span></span>
<span id="cb8-2">penguins <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> species,</span>
<span id="cb8-4">             <span class="at" style="color: #657422;">y =</span> body_mass_g,</span>
<span id="cb8-5">             <span class="at" style="color: #657422;">color =</span> species)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>,</span>
<span id="cb8-8">             <span class="at" style="color: #657422;">position =</span> <span class="fu" style="color: #4758AB;">position_jitter</span>()) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>island)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/plot_01.png" class="img-fluid"></p>
<p>Interesting! It looks like the Gentoo and Chinstrap species are only found on the Biscoe and Dream islands, respectively, whereas the Adelie species can be found on all three islands. At first glance, there’s not a meaningful difference that Island has on the weight of the Adelie penguins, so I think we’re safe to toss out the <code>island</code> feature and just keep <code>species</code>.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># how does sex relate to body mass?</span></span>
<span id="cb9-2">penguins <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> sex,</span>
<span id="cb9-4">             <span class="at" style="color: #657422;">y =</span> body_mass_g,</span>
<span id="cb9-5">             <span class="at" style="color: #657422;">color =</span> sex)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>,</span>
<span id="cb9-8">             <span class="at" style="color: #657422;">position =</span> <span class="fu" style="color: #4758AB;">position_jitter</span>())</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/plot_02.png" class="img-fluid"></p>
<p>Unsurprisingly, male penguins are typically heavier than female penguins.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># are penguins getting heavier or lighter as years progress?</span></span>
<span id="cb10-2">penguins <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">year =</span> <span class="fu" style="color: #4758AB;">as.character</span>(year)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> year,</span>
<span id="cb10-5">             <span class="at" style="color: #657422;">y =</span> body_mass_g)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-7">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>,</span>
<span id="cb10-8">             <span class="at" style="color: #657422;">position =</span> <span class="fu" style="color: #4758AB;">position_jitter</span>())</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/plot_03.png" class="img-fluid"></p>
<p>It doesn’t look like there is significant signal being drawn from <code>year</code>, so we’ll toss that out as well.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;"># how do other body measurements compare with the total body mass?</span></span>
<span id="cb11-2">penguins <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">select</span>(bill_length_mm<span class="sc" style="color: #5E5E5E;">:</span>body_mass_g) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="fu" style="color: #4758AB;">ends_with</span>(<span class="st" style="color: #20794D;">"mm"</span>),</span>
<span id="cb11-5">               <span class="at" style="color: #657422;">names_to =</span> <span class="st" style="color: #20794D;">"measurement"</span>,</span>
<span id="cb11-6">               <span class="at" style="color: #657422;">values_to =</span> <span class="st" style="color: #20794D;">"value"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> value,</span>
<span id="cb11-8">             <span class="at" style="color: #657422;">y =</span> body_mass_g,</span>
<span id="cb11-9">             <span class="at" style="color: #657422;">color =</span> measurement)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-10">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>measurement, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free_x"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-12">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"lm"</span>,</span>
<span id="cb11-13">              <span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/plot_04.png" class="img-fluid"></p>
<p>For bill and flipper length, there’s a pretty clear relationship, but it looks like bill depth has a <em>classic</em> case of <a href="https://en.wikipedia.org/wiki/Simpson%27s_paradox">Simpson’s paradox</a>. Let’s explore that further to find a meaningful interaction to apply.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;"># which feature interacts with bill depth to produce simpson's pardox?</span></span>
<span id="cb12-2">penguins <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> bill_depth_mm,</span>
<span id="cb12-4">             <span class="at" style="color: #657422;">y =</span> body_mass_g,</span>
<span id="cb12-5">             <span class="at" style="color: #657422;">color =</span> species)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"lm"</span>,</span>
<span id="cb12-8">              <span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/plot_05.png" class="img-fluid"></p>
<p>So, very clearly, the Gentoo species has a very different relationship between bill depth and body mass than the Adelie/Chinstrap species. We’ll add this as an interactive feature to the model.</p>
<p>With all that completed, let’s (finally) setup and build the baseline linear model with confidence intervals around the prediction!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;"># remove features</span></span>
<span id="cb13-2">penguins <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb13-3">  penguins <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>island, <span class="sc" style="color: #5E5E5E;">-</span>year)</span>
<span id="cb13-5"></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;"># split into testing and training datasets</span></span>
<span id="cb13-7"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">123</span>)</span>
<span id="cb13-8">penguins_split <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">initial_split</span>(penguins)</span>
<span id="cb13-9">penguins_test <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">testing</span>(penguins_split)</span>
<span id="cb13-10">penguins_train <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">training</span>(penguins_split)</span>
<span id="cb13-11"></span>
<span id="cb13-12"><span class="co" style="color: #5E5E5E;"># setup a pre-processing recipe</span></span>
<span id="cb13-13">penguins_rec <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb13-14">  <span class="fu" style="color: #4758AB;">recipe</span>(body_mass_g <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> penguins_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-15">  <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal</span>()) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb13-16">  <span class="fu" style="color: #4758AB;">step_interact</span>(<span class="sc" style="color: #5E5E5E;">~</span><span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"species"</span>)<span class="sc" style="color: #5E5E5E;">:</span>bill_depth_mm)</span>
<span id="cb13-17"></span>
<span id="cb13-18"><span class="co" style="color: #5E5E5E;"># fit a workflow</span></span>
<span id="cb13-19">penguins_lm <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb13-20">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-21">  <span class="fu" style="color: #4758AB;">add_recipe</span>(penguins_rec) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-22">  <span class="fu" style="color: #4758AB;">add_model</span>(<span class="fu" style="color: #4758AB;">linear_reg</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">set_engine</span>(<span class="st" style="color: #20794D;">"lm"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-23">  <span class="fu" style="color: #4758AB;">fit</span>(penguins_train)</span></code></pre></div>
</details>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;"># predict on training data with confidence intervals</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;">bind_cols</span>(penguins_lm <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">predict</span>(penguins_train),</span>
<span id="cb14-3">          penguins_lm <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">predict</span>(penguins_train, <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"conf_int"</span>, <span class="at" style="color: #657422;">level =</span> <span class="fl" style="color: #AD0000;">0.95</span>),</span>
<span id="cb14-4">          penguins_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> body_mass_g,</span>
<span id="cb14-6">             <span class="at" style="color: #657422;">y =</span> .pred)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;">geom_segment</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> body_mass_g,</span>
<span id="cb14-9">                   <span class="at" style="color: #657422;">xend =</span> body_mass_g,</span>
<span id="cb14-10">                   <span class="at" style="color: #657422;">y =</span> .pred_lower,</span>
<span id="cb14-11">                   <span class="at" style="color: #657422;">yend =</span> .pred_upper),</span>
<span id="cb14-12">               <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-13">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Predicting the Palmer Penguins - Training"</span>,</span>
<span id="cb14-14">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Linear model predicting a penguin's weight in grams"</span>,</span>
<span id="cb14-15">       <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Actual weight (g)"</span>,</span>
<span id="cb14-16">       <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Predicted weight (g)"</span>,</span>
<span id="cb14-17">       <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Errorbars represent the a 95% confidence interval"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-18">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/plot_06.png" class="img-fluid"></p>
<p>This model does generally okay, but the confidence interval around each prediction is pretty <a href="https://mc-stan.org/rstanarm/articles/rstanarm.html">clearly too confident</a>! Let’s solve this with bootstrapping.</p>
</section>
<section id="whats-a-bootstrap" class="level3">
<h3 class="anchored" data-anchor-id="whats-a-bootstrap">What’s a bootstrap?</h3>
<p>Before progressing any further, it’s probably important to define what exactly a bootstrap is/what bootstrapping is. Bootstrapping is a resampling method that lets us take one dataset and turn it into many datasets. Bootstrapping accomplishes this by repeatedly pulling a random row from the source dataset and, importantly, bootstrapping allows for rows to be repeated! Let’s look at an example for a bit more clarity.</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: right;">rowid</th>
<th style="text-align: right;">x1</th>
<th style="text-align: right;">x2</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: right;">0.8</td>
<td style="text-align: right;">104</td>
</tr>
<tr class="even">
<td style="text-align: right;">2</td>
<td style="text-align: right;">0.7</td>
<td style="text-align: right;">102</td>
</tr>
<tr class="odd">
<td style="text-align: right;">3</td>
<td style="text-align: right;">0.9</td>
<td style="text-align: right;">88</td>
</tr>
<tr class="even">
<td style="text-align: right;">4</td>
<td style="text-align: right;">0.4</td>
<td style="text-align: right;">124</td>
</tr>
<tr class="odd">
<td style="text-align: right;">5</td>
<td style="text-align: right;">0.3</td>
<td style="text-align: right;">79</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Let’s say we want to make bootstrap resamples of this dataset. We’ll draw five random rows from the dataset and, sometimes, we’ll have the same row show up in our new bootstrapped dataset multiple times:</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: right;">rowid</th>
<th style="text-align: right;">x1</th>
<th style="text-align: right;">x2</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: right;">0.8</td>
<td style="text-align: right;">104</td>
</tr>
<tr class="even">
<td style="text-align: right;">3</td>
<td style="text-align: right;">0.9</td>
<td style="text-align: right;">88</td>
</tr>
<tr class="odd">
<td style="text-align: right;">4</td>
<td style="text-align: right;">0.4</td>
<td style="text-align: right;">124</td>
</tr>
<tr class="even">
<td style="text-align: right;">4</td>
<td style="text-align: right;">0.4</td>
<td style="text-align: right;">124</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2</td>
<td style="text-align: right;">0.7</td>
<td style="text-align: right;">102</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Another bootstrap dataset might look like this:</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: right;">rowid</th>
<th style="text-align: right;">x1</th>
<th style="text-align: right;">x2</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">2</td>
<td style="text-align: right;">0.7</td>
<td style="text-align: right;">102</td>
</tr>
<tr class="even">
<td style="text-align: right;">3</td>
<td style="text-align: right;">0.9</td>
<td style="text-align: right;">88</td>
</tr>
<tr class="odd">
<td style="text-align: right;">5</td>
<td style="text-align: right;">0.3</td>
<td style="text-align: right;">79</td>
</tr>
<tr class="even">
<td style="text-align: right;">3</td>
<td style="text-align: right;">0.9</td>
<td style="text-align: right;">88</td>
</tr>
<tr class="odd">
<td style="text-align: right;">5</td>
<td style="text-align: right;">0.3</td>
<td style="text-align: right;">79</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Bootstrap datasets allow us to create many datasets from the original dataset and evaluate models across these bootstraps. Models that are well informed will give similar outputs across each dataset, despite of the randomness within each dataset, whereas less confident models will have a wider variation across the bootstrapped datasets.</p>
</section>
<section id="generating-some-confident-penguins" class="level3">
<h3 class="anchored" data-anchor-id="generating-some-confident-penguins">Generating some confident penguins</h3>
<p>Let’s say we want to use <code>{xgboost}</code> to predict penguin weight and we’ll use bootstrapping to generate a confidence interval. Firstly, we’ll create the bootstrap datasets from our training set.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">penguins_boot <span class="ot" style="color: #003B4F;">&lt;-</span> penguins_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">bootstraps</span>()</span>
<span id="cb15-2"></span>
<span id="cb15-3">penguins_boot</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># Bootstrap sampling 
# A tibble: 25 × 2
   splits           id         
   &lt;list&gt;           &lt;chr&gt;      
 1 &lt;split [249/92]&gt; Bootstrap01
 2 &lt;split [249/90]&gt; Bootstrap02
 3 &lt;split [249/91]&gt; Bootstrap03
 4 &lt;split [249/87]&gt; Bootstrap04
 5 &lt;split [249/98]&gt; Bootstrap05
 6 &lt;split [249/84]&gt; Bootstrap06
 7 &lt;split [249/91]&gt; Bootstrap07
 8 &lt;split [249/95]&gt; Bootstrap08
 9 &lt;split [249/94]&gt; Bootstrap09
10 &lt;split [249/86]&gt; Bootstrap10
# … with 15 more rows</code></pre>
</div>
</div>
<p>By default, the <code>bootstraps()</code> function will create 25 bootstrap datasets, but we could theoretically create as many as we want. Now that we have our bootstraps, let’s create a function that will fit a model to each of the bootstraps and save to disk. We’ll use the default parameters for our <code>{xgboost}</code> model.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;"># define a basic xgboost model</span></span>
<span id="cb17-2">penguins_xgb <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;">boost_tree</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;">set_mode</span>(<span class="st" style="color: #20794D;">"regression"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;">set_engine</span>(<span class="st" style="color: #20794D;">"xgboost"</span>)</span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;"># function that will fit a model and save to a folder</span></span>
<span id="cb17-8">fit_bootstrap <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(index) {</span>
<span id="cb17-9">  </span>
<span id="cb17-10">  <span class="co" style="color: #5E5E5E;"># pull out individual bootstrap to fit</span></span>
<span id="cb17-11">  xgb_boot <span class="ot" style="color: #003B4F;">&lt;-</span> penguins_boot<span class="sc" style="color: #5E5E5E;">$</span>splits[[index]] <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">training</span>()</span>
<span id="cb17-12">  </span>
<span id="cb17-13">  <span class="co" style="color: #5E5E5E;"># fit to a workflow</span></span>
<span id="cb17-14">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-15">    <span class="fu" style="color: #4758AB;">add_recipe</span>(penguins_rec) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-16">    <span class="fu" style="color: #4758AB;">add_model</span>(penguins_xgb) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-17">    <span class="fu" style="color: #4758AB;">fit</span>(xgb_boot) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-18">    <span class="fu" style="color: #4758AB;">write_rds</span>(<span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"models/model_"</span>, index, <span class="st" style="color: #20794D;">".rds"</span>))</span>
<span id="cb17-19">  </span>
<span id="cb17-20">}</span></code></pre></div>
</details>
</div>
<p>This function will create a new model for each bootstrap, so we’ll end up with 25 separate models. Let’s fit!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;"># fit to 25 bootstrapped datasets</span></span>
<span id="cb18-2"><span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">25</span>) {</span>
<span id="cb18-3">  </span>
<span id="cb18-4">  <span class="fu" style="color: #4758AB;">fit_bootstrap</span>(i)</span>
<span id="cb18-5">  </span>
<span id="cb18-6">}</span></code></pre></div>
</details>
</div>
<p>Now let’s define a function that will predict based on these 25 bootstrapped models, then predict on our training data.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">predict_bootstrap <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(new_data, index){</span>
<span id="cb19-2">  </span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;">read_rds</span>(<span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"models/model_"</span>, index, <span class="st" style="color: #20794D;">".rds"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb19-4">    <span class="fu" style="color: #4758AB;">predict</span>(new_data) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb19-5">    <span class="fu" style="color: #4758AB;">rename</span>(<span class="sc" style="color: #5E5E5E;">!!</span><span class="fu" style="color: #4758AB;">sym</span>(<span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"pred_"</span>, index)) <span class="sc" style="color: #5E5E5E;">:</span><span class="er" style="color: #AD0000;">=</span> .pred)</span>
<span id="cb19-6">  </span>
<span id="cb19-7">}</span>
<span id="cb19-8"></span>
<span id="cb19-9"><span class="co" style="color: #5E5E5E;"># predict!</span></span>
<span id="cb19-10">training_preds <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb19-11">  <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">25</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb19-12">  <span class="fu" style="color: #4758AB;">map_dfc</span>(<span class="sc" style="color: #5E5E5E;">~</span><span class="fu" style="color: #4758AB;">predict_bootstrap</span>(penguins_train, .x))</span>
<span id="cb19-13"></span>
<span id="cb19-14">training_preds</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 249 × 25
   pred_1 pred_2 pred_3 pred_4 pred_5 pred_6 pred_7 pred_8 pred_9 pred_10
    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;
 1  5552.  5638.  5555.  5703.  5726.  5783.  5404.  5566.  5493.   5547.
 2  3470.  3340.  3334.  3350.  3311.  3303.  3315.  3421.  3692.   3436.
 3  5309.  5274.  5241.  5286.  5206.  5084.  5506.  5531.  5274.   5309.
 4  4160.  4013.  3988.  4111.  4075.  4073.  4284.  4050.  4033.   4033.
 5  4003.  3931.  4096.  3968.  4008.  3918.  3941.  4093.  3941.   3880.
 6  3967.  4039.  4095.  4047.  4021.  4055.  3980.  4115.  4067.   4084.
 7  4647.  4551.  4750.  4555.  4690.  4396.  4235.  4686.  4764.   4659.
 8  5240.  5288.  5291.  5276.  5308.  5508.  5570.  5375.  5340.   5268.
 9  4138.  4111.  4106.  4236.  4135.  4219.  4218.  4211.  4160.   4071.
10  4728.  4723.  4715.  4823.  4765.  4727.  4836.  4777.  4765.   4633.
# … with 239 more rows, and 15 more variables: pred_11 &lt;dbl&gt;, pred_12 &lt;dbl&gt;,
#   pred_13 &lt;dbl&gt;, pred_14 &lt;dbl&gt;, pred_15 &lt;dbl&gt;, pred_16 &lt;dbl&gt;, pred_17 &lt;dbl&gt;,
#   pred_18 &lt;dbl&gt;, pred_19 &lt;dbl&gt;, pred_20 &lt;dbl&gt;, pred_21 &lt;dbl&gt;, pred_22 &lt;dbl&gt;,
#   pred_23 &lt;dbl&gt;, pred_24 &lt;dbl&gt;, pred_25 &lt;dbl&gt;</code></pre>
</div>
</div>
<p>Now we have a column of predictions for each model — we can summarise our point prediction for each row with the average across all models and set the confidence interval based on the standard deviation of the predictions.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">training_preds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;">bind_cols</span>(penguins_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;">rowid_to_column</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-4">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"pred_"</span>),</span>
<span id="cb21-5">               <span class="at" style="color: #657422;">names_to =</span> <span class="st" style="color: #20794D;">"model"</span>,</span>
<span id="cb21-6">               <span class="at" style="color: #657422;">values_to =</span> <span class="st" style="color: #20794D;">".pred"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-7">  <span class="fu" style="color: #4758AB;">group_by</span>(rowid) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-8">  <span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">body_mass_g =</span> <span class="fu" style="color: #4758AB;">max</span>(body_mass_g),</span>
<span id="cb21-9">            <span class="at" style="color: #657422;">.pred_mean =</span> <span class="fu" style="color: #4758AB;">mean</span>(.pred),</span>
<span id="cb21-10">            <span class="at" style="color: #657422;">std_dev =</span> <span class="fu" style="color: #4758AB;">sd</span>(.pred)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-11">  riekelib<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">normal_interval</span>(.pred_mean, std_dev) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-12">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> body_mass_g,</span>
<span id="cb21-13">             <span class="at" style="color: #657422;">y =</span> .pred_mean)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb21-14">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb21-15">  <span class="fu" style="color: #4758AB;">geom_segment</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> body_mass_g, </span>
<span id="cb21-16">                   <span class="at" style="color: #657422;">xend =</span> body_mass_g,</span>
<span id="cb21-17">                   <span class="at" style="color: #657422;">y =</span> ci_lower,</span>
<span id="cb21-18">                   <span class="at" style="color: #657422;">yend =</span> ci_upper),</span>
<span id="cb21-19">               <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb21-20">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Predicting the Palmer Penguins - Training"</span>,</span>
<span id="cb21-21">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"XGBoost model predicting a penguin's weight in grams"</span>,</span>
<span id="cb21-22">       <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Actual weight (g)"</span>,</span>
<span id="cb21-23">       <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Predicted weight (g)"</span>,</span>
<span id="cb21-24">       <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Errorbars represent the a 95% confidence interval"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb21-25">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/plot_07.png" class="img-fluid"></p>
<p>And just like that, we’ve trained a series of models with <code>{xgboost}</code> that let us apply a confidence interval around a point prediction! Now that we’ve done so on the training set, let’s look at performance on the test set.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">25</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;">map_dfc</span>(<span class="sc" style="color: #5E5E5E;">~</span><span class="fu" style="color: #4758AB;">predict_bootstrap</span>(penguins_test, .x)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb22-3">  <span class="fu" style="color: #4758AB;">bind_cols</span>(penguins_test) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;">rowid_to_column</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb22-5">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"pred_"</span>),</span>
<span id="cb22-6">               <span class="at" style="color: #657422;">names_to =</span> <span class="st" style="color: #20794D;">"model"</span>,</span>
<span id="cb22-7">               <span class="at" style="color: #657422;">values_to =</span> <span class="st" style="color: #20794D;">".pred"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb22-8">  <span class="fu" style="color: #4758AB;">group_by</span>(rowid) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb22-9">  <span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">body_mass_g =</span> <span class="fu" style="color: #4758AB;">max</span>(body_mass_g),</span>
<span id="cb22-10">            <span class="at" style="color: #657422;">.pred_mean =</span> <span class="fu" style="color: #4758AB;">mean</span>(.pred),</span>
<span id="cb22-11">            <span class="at" style="color: #657422;">std_dev =</span> <span class="fu" style="color: #4758AB;">sd</span>(.pred)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb22-12">  riekelib<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">normal_interval</span>(.pred_mean, std_dev) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb22-13">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> body_mass_g,</span>
<span id="cb22-14">             <span class="at" style="color: #657422;">y =</span> .pred_mean)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb22-15">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb22-16">  <span class="fu" style="color: #4758AB;">geom_segment</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> body_mass_g, </span>
<span id="cb22-17">                   <span class="at" style="color: #657422;">xend =</span> body_mass_g,</span>
<span id="cb22-18">                   <span class="at" style="color: #657422;">y =</span> ci_lower,</span>
<span id="cb22-19">                   <span class="at" style="color: #657422;">yend =</span> ci_upper),</span>
<span id="cb22-20">               <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb22-21">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Predicting the Palmer Penguins - Testing"</span>,</span>
<span id="cb22-22">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"XGBoost model predicting a penguin's weight in grams"</span>,</span>
<span id="cb22-23">       <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Actual weight (g)"</span>,</span>
<span id="cb22-24">       <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Predicted weight (g)"</span>,</span>
<span id="cb22-25">       <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Errorbars represent the a 95% confidence interval"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb22-26">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>)</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/plot_08.png" class="img-fluid"></p>
<p>The performance on the test data is slightly less accurate than on the training data, but that is to be expected. Importantly, we’ve used bootstrap resampling to generate a confidence interval from a model that otherwise normally returns a simple point prediction.</p>
</section>
<section id="some-noteworthy-caveats" class="level3">
<h3 class="anchored" data-anchor-id="some-noteworthy-caveats">Some noteworthy caveats</h3>
<p>The prediction interval above is all well and good, but it comes with some <em>hefty</em> caveats. Firstly, the confidence interval in the Testing plot is generated from the mean and standard deviation from each prediction. This assumes that the predictions are distributed normally, which may not necessarily be the case.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">training_preds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;">slice_head</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb23-3">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"pred"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb23-4">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> value)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb23-5">  <span class="fu" style="color: #4758AB;">geom_density</span>()</span></code></pre></div>
</details>
</div>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/plot_09.png" class="img-fluid"></p>
<p>This density plot for one of the predictions shows that there’s definitely some non-normal behavior! There’s a few ways of addressing this.</p>
<ol type="1">
<li>Create many, many, more bootstraps and models so that the prediction distribution approaches normality (with only 25 points, we really shouldn’t even expect normality from this example).</li>
<li>Report out the actual values of the percentiles in the distribution (e.g., the 2.5% percentile is below X, 97.5% is above Y, and the mean is at Z).</li>
<li>Report out the actual distribution as the result.</li>
</ol>
<p>Ideally, you should do all three.</p>
<p>The second major caveat is that this is not one model, but a whole host of models and these take up a large amount of disk space. In this example, our 25 models take up 25 times more space than our original model and it takes some time to read in, fit, and wrangle the results. We can trade disk space for computation time by writing a function that fits and predicts without saving a model, but again, that’s a tradeoff between speed and space. For linear models, it may be a better route to have STAN simulate thousands of results via <code>{rstanarm}</code> or <code>{brms}</code>, but for non-linear models, boostrapping is the best way to go for now!</p>
</section>
<section id="polling-bites" class="level3">
<h3 class="anchored" data-anchor-id="polling-bites">Polling Bites</h3>
<p>Currently, the Generic Ballot is holding steady with a slight sliver more Americans wanting Republicans in Congress than Democrats (<strong>50.7%</strong> to <strong>49.3%</strong>, respectively). Joe Biden’s net approval continues to slide, currently sitting at <strong>-11.4%</strong> (<strong>41.8%</strong> approve, <strong>53.1%</strong> disapprove).</p>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/generic_ballot_current.png" class="img-fluid"></p>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/approval_disapproval_current.png" class="img-fluid"></p>
<p><img src="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/pics/net_approval_current.png" class="img-fluid"></p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2022,
  author = {Mark Rieke},
  title = {Pull {Yourself} {Up} by {Your} {Bootstraps}},
  date = {2022-02-08},
  url = {https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2022" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2022. <span>“Pull Yourself Up by Your Bootstraps.”</span>
February 8, 2022. <a href="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps">https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps</a>.
</div></div></section></div> ]]></description>
  <category>rstats</category>
  <category>tidymodels</category>
  <guid>https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/index.html</guid>
  <pubDate>Tue, 08 Feb 2022 06:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2022-02-08-pull-yourself-up-by-your-bootstraps/featured.png" medium="image" type="image/png" height="83" width="144"/>
</item>
<item>
  <title>How Popular is Joe Biden?</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2022-01-26-how-popular-is-joe-biden/index.html</link>
  <description><![CDATA[ 




<p>While the sitting president’s party tends to House lose seats in the midterm elections, the president’s approval rating can help inform us of the <a href="https://fivethirtyeight.com/features/some-early-clues-about-how-the-midterms-will-go/">magnitude of that loss</a>. In general, the more unpopular the president, the more seats his party tends to lose. As a part of my long-term goal of <a href="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/">building a midterm election model</a>, I put together a model for estimating Biden’s approval, disapproval, and net approval based on <a href="https://projects.fivethirtyeight.com/biden-approval-rating/">polls collected by FiveThirtyEight</a>.</p>
<p>The methodology to build the approval model is <em>very similar</em> to the <a href="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/">Generic Congressional Ballot</a> model — both weight polls by recency, sample size, methodology, pollster, and survey population — so I won’t rehash the details again. If you’re so inclined, you can <a href="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/">read the methodology</a> from the previous post or <a href="https://github.com/markjrieke/2022-midterm-forecasts/blob/main/scripts/approval_trends_weighting.R">explore the script</a>, but we’ll keep this short and sweet and just explore the results!</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-26-how-popular-is-joe-biden/pics/approval_disapproval_current.png" class="img-fluid"></p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-26-how-popular-is-joe-biden/pics/net_approval_current.png" class="img-fluid"></p>
<p>As of today, Joe Biden’s job approval is fairly underwater — and <a href="https://www.cnn.com/2021/11/13/politics/midterms-democrats-biden-analysis/index.html">history says it’s unlikely to improve as the midterms approach</a>. Interestingly, the generic congressional ballot still shows that the country is about even-split on who they’d like to see in congress. As with the president’s approval, however, <a href="https://twitter.com/geoffreyvs/status/1438509217107701768">historical precedent implies a continuous slide away from the president’s party</a>.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-26-how-popular-is-joe-biden/pics/generic_ballot_current.png" class="img-fluid"></p>
<p>Despite this precedent, politics today are far more polarized than previous midterm cycles, and <a href="https://gelliottmorris.substack.com/p/is-joe-biden-actually-that-unpopular">modeling that adjusts for this partisanship may imply a lesser midterm shellacking than history would otherwise suggest</a>. While Biden would certainly prefer for his approval to be higher, it may not necessarily spell doom for democrats in the midterms (though, to be sure, the strong prior still that they will lose ground this cycle — the question now is how much).</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2022,
  author = {Mark Rieke},
  title = {How {Popular} Is {Joe} {Biden?}},
  date = {2022-01-26},
  url = {https://www.thedatadiary.net/posts/2022-01-26-how-popular-is-joe-biden},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2022" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2022. <span>“How Popular Is Joe Biden?”</span> January 26,
2022. <a href="https://www.thedatadiary.net/posts/2022-01-26-how-popular-is-joe-biden">https://www.thedatadiary.net/posts/2022-01-26-how-popular-is-joe-biden</a>.
</div></div></section></div> ]]></description>
  <category>politics</category>
  <guid>https://www.thedatadiary.net/posts/2022-01-26-how-popular-is-joe-biden/index.html</guid>
  <pubDate>Wed, 26 Jan 2022 06:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2022-01-26-how-popular-is-joe-biden/featured.png" medium="image" type="image/png" height="97" width="144"/>
</item>
<item>
  <title>The Data Diary: Year in Review</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/index.html</link>
  <description><![CDATA[ 




<p>In the year since I started this blog, there’s been a lot that’s happened: I learned to use R, picked up the basics of machine learning, and moved into a new job/industry. I spend a lot of time thinking about what’s coming down the pipeline and how much further I have to go on projects that I have planned, but it’s worthwhile every now and then to take a look back and see just how far I’ve come.</p>
<section id="some-accomplishments-im-proud-of" class="level1">
<h1>Some accomplishments I’m proud of</h1>
<section id="learning-r" class="level2">
<h2 class="anchored" data-anchor-id="learning-r">Learning R</h2>
<p>A year ago, I couldn’t write a lick of R code — I lived and breathed Excel, and was a bit afraid of the transition from a GUI to an IDE. Now, I’d consider myself pretty well-versed in the language and am <em>so glad</em> I made the switch. Having moved to R, I realized how restrictive Excel was — R (or any other analytics-focused programming language) allows for the freedom of expression needed for any sort of serious analysis. <a href="https://www.youtube.com/watch?v=PURtmHwk_-0">This talk by Hadley Wickham</a> was instrumental in pushing me to pick up R and is well worth a watch if you have the time.</p>
<div class="quarto-video ratio ratio-16x9"><iframe src="https://www.youtube.com/embed/PURtmHwk_-0" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
<section id="completing-stanfords-machine-learning-course" class="level2">
<h2 class="anchored" data-anchor-id="completing-stanfords-machine-learning-course">Completing Stanford’s Machine Learning course</h2>
<p>When I started learning R, I was most interested in getting to the point where I’d be able to implement machine learning models (this specifically came from reading <a href="https://projects.economist.com/us-2020-forecast/president/how-this-works">the documentation</a> for <a href="https://github.com/TheEconomist/us-potus-model">The Economist’s POTUS model</a> and wanting to understand what was going on under-the-hood). <a href="https://www.coursera.org/learn/machine-learning?">Stanford’s online Machine Learning course</a> was a thorough, technical introduction to the basics of machine learning. It doesn’t cover every model type, but gives a great foundation for <em>how to understand</em> new models by requiring that you write the models yourself (this was very useful and practical, but you won’t catch me using MATLAB anytime soon!).</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/coursera_ml_cert.png" class="img-fluid"></p>
</section>
<section id="committing-to-ropensci" class="level2">
<h2 class="anchored" data-anchor-id="committing-to-ropensci">Committing to rOpenSci</h2>
<p><a href="https://ropensci.org/">rOpenSci</a> is a non-profit initiative committed to creating and maintaining a variety of open-source R packages. For work, I use one of their packages, <a href="https://docs.ropensci.org/qualtRics/">the qualtRics package</a>, almost daily for extracting survey responses from Qualtrics’ API. I added a small function, <a href="https://docs.ropensci.org/qualtRics/reference/fetch_id.html"><code>fetch_id()</code></a>, that allows you to pull in survey responses based on the survey’s name, rather than looking up the miscellaneous string of numbers that constitute the <code>survey_id</code>. It’s a small helper function, but working on it taught me a lot about documentation, testing, package development, and contributing to open-source software.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(qualtRics)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">all_surveys</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;">fetch_id</span>(<span class="st" style="color: #20794D;">"Mark's Example Survey"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;">fetch_survey</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-7">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
  |                                                                            
  |                                                                      |   0%
  |                                                                            
  |======================================================================| 100%</code></pre>
</div>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 6%">
<col style="width: 6%">
<col style="width: 5%">
<col style="width: 3%">
<col style="width: 3%">
<col style="width: 7%">
<col style="width: 3%">
<col style="width: 6%">
<col style="width: 6%">
<col style="width: 6%">
<col style="width: 6%">
<col style="width: 5%">
<col style="width: 6%">
<col style="width: 5%">
<col style="width: 6%">
<col style="width: 6%">
<col style="width: 4%">
<col style="width: 5%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">StartDate</th>
<th style="text-align: left;">EndDate</th>
<th style="text-align: left;">Status</th>
<th style="text-align: left;">IPAddress</th>
<th style="text-align: right;">Progress</th>
<th style="text-align: right;">Duration (in seconds)</th>
<th style="text-align: left;">Finished</th>
<th style="text-align: left;">RecordedDate</th>
<th style="text-align: left;">ResponseId</th>
<th style="text-align: left;">RecipientLastName</th>
<th style="text-align: left;">RecipientFirstName</th>
<th style="text-align: left;">RecipientEmail</th>
<th style="text-align: left;">ExternalReference</th>
<th style="text-align: right;">LocationLatitude</th>
<th style="text-align: right;">LocationLongitude</th>
<th style="text-align: left;">DistributionChannel</th>
<th style="text-align: left;">UserLanguage</th>
<th style="text-align: left;">Q1</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">2022-01-12 09:20:31</td>
<td style="text-align: left;">2022-01-12 09:20:38</td>
<td style="text-align: left;">Survey Preview</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">100</td>
<td style="text-align: right;">7</td>
<td style="text-align: left;">TRUE</td>
<td style="text-align: left;">2022-01-12 09:20:40</td>
<td style="text-align: left;">R_XFVjzAh4MalrLmF</td>
<td style="text-align: left;">NA</td>
<td style="text-align: left;">NA</td>
<td style="text-align: left;">NA</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">29.73351</td>
<td style="text-align: right;">-95.5564</td>
<td style="text-align: left;">preview</td>
<td style="text-align: left;">EN</td>
<td style="text-align: left;">Strongly agree</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="putting-together-a-developer-package" class="level2">
<h2 class="anchored" data-anchor-id="putting-together-a-developer-package">Putting together a developer package</h2>
<p>At some point this past year, I found myself either re-writing the same chunks of code repeatedly or re-defining functions across every project. After a lengthy period of hesitation, I finally picked up the <a href="https://r-pkgs.org/">R Packages</a> book by Hadley Wickham and Jenny Bryan and put together my own personal package, <a href="https://github.com/markjrieke/riekelib"><code>{riekelib}</code></a>. It’s just a collection of small helper functions that I use regularly for both personal and professional projects, but it’s really helped speed up workflows, since I can just load the library rather than re-write code or functions! Here are a few examples:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(riekelib)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;"># beta_interval() gives lower &amp; upper bounds of a beta distribution's confidence interval </span></span>
<span id="cb3-4">tibble<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tibble</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">85</span>, <span class="dv" style="color: #AD0000;">100</span>),</span>
<span id="cb3-5">               <span class="at" style="color: #657422;">beta =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">15</span>, <span class="dv" style="color: #AD0000;">500</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;">beta_interval</span>(alpha, beta) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-7">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: right;">alpha</th>
<th style="text-align: right;">beta</th>
<th style="text-align: right;">ci_lower</th>
<th style="text-align: right;">ci_upper</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">85</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">0.7741265</td>
<td style="text-align: right;">0.9126452</td>
</tr>
<tr class="even">
<td style="text-align: right;">100</td>
<td style="text-align: right;">500</td>
<td style="text-align: right;">0.1379480</td>
<td style="text-align: right;">0.1974895</td>
</tr>
</tbody>
</table>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># percent() returns the percentage each value or combination of values appear in a tibble</span></span>
<span id="cb4-2">iris <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-3">  tibble<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;">percent</span>(Species) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-5">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">Species</th>
<th style="text-align: right;">pct</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">setosa</td>
<td style="text-align: right;">0.3333333</td>
</tr>
<tr class="even">
<td style="text-align: left;">versicolor</td>
<td style="text-align: right;">0.3333333</td>
</tr>
<tr class="odd">
<td style="text-align: left;">virginica</td>
<td style="text-align: right;">0.3333333</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
</section>
<section id="plots-across-the-year" class="level1">
<h1>Plots across the year</h1>
<p>Possibly the most visually-engaging way to track growth throughout the past year is to look back on how different plots have evolved. Here’s a walkthrough of some choice plots that I’ve made throughout the year.</p>
<section id="baby-steps" class="level2">
<h2 class="anchored" data-anchor-id="baby-steps"><a href="https://www.thedatadiary.net/posts/2021-01-10-baby-steps/">Baby Steps</a></h2>
<p>The first plot I ever created in R, made with base R’s <code>plot()</code> function, compares speed &amp; distance from the <code>cars</code> dataset. There’s not really anything visually compelling here, but it gives the starting point.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/baby_steps.png" class="img-fluid"></p>
</section>
<section id="r-ggplot2-and-plotly" class="level2">
<h2 class="anchored" data-anchor-id="r-ggplot2-and-plotly"><a href="https://www.thedatadiary.net/posts/2021-01-17-r-ggplot2-plotly/">R, ggplot2, and plotly</a></h2>
<p>This next plot shows my first attempt at creating a <code>ggplot</code>. I remember struggling <em>a lot</em> with this when trying to learn the ins and outs of putting together and formatting the plot, but that struggle was well worth it. I learned not only the basics of how to put together a plot with <code>ggplot</code>, but also, more importantly, how to search and troubleshoot issues. I also like that I was able to explore a topic visually with this plot: while the winner of the presidential election overperforms in the electoral college relative to the popular vote, republican candidates consistently have a slightly stronger electoral college overperformance due to small-state bias.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/r_ggplot2_plotly.png" class="img-fluid"></p>
</section>
<section id="kind-of-projecting-the-2020-election" class="level2">
<h2 class="anchored" data-anchor-id="kind-of-projecting-the-2020-election"><a href="https://www.thedatadiary.net/posts/2021-02-21-kind-of-projecting-the-2020-election/">(Kind of) Projecting the 2020 Election</a></h2>
<p>I started playing around with custom themes, and even setup my own <a href="https://github.com/markjrieke/thedatadiary/blob/main/dd_theme_elements/dd_theme_elements.R">theme elements</a> so that I could reference them easily. This was the first time I broke away from the default theme for <code>ggplot</code>. Additionally, this was the first time I used any sort of statistical methods to make a projection. The projection itself is pretty bad/underconfident, but the methodology was sound.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/projecting_2020_election.png" class="img-fluid"></p>
</section>
<section id="doug-collins-saved-raphael-warnocks-senate-bid" class="level2">
<h2 class="anchored" data-anchor-id="doug-collins-saved-raphael-warnocks-senate-bid"><a href="https://www.thedatadiary.net/posts/2021-02-28-doug-collins-saved-raphael-warnock-s-senate-bid/">Doug Collins Saved Raphael Warnock’s Senate Bid</a></h2>
<p>Of all the posts I wrote in 2021, this may be the one I’m most proud of. Firstly, I learned a lot of new techniques needed to create maps and animations in R, but I also made a data-backed point: Raphael Warnock, one of the current Democratic senators from Georgia, likely won his election because Republican voters split their ticket between Kelly Loeffler and Doug Collins.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/ga_sen_01.png" class="img-fluid"> <img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/ga_sen_02.png" class="img-fluid"> <img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/ga_sen_03.gif" class="img-fluid"></p>
</section>
<section id="artwork" class="level2">
<h2 class="anchored" data-anchor-id="artwork"><a href="https://www.thedatadiary.net/posts/2021-03-07-artwork/">aRtwork!</a></h2>
<p>This next one is just fun, but I used R to make some artwork! I liked it so much, that I ended up making this my site header.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/artwork.png" class="img-fluid"></p>
</section>
<section id="tidymodels-and-the-titanic" class="level2">
<h2 class="anchored" data-anchor-id="tidymodels-and-the-titanic"><a href="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/">Tidymodels and the Titanic</a></h2>
<p>I spent a lot of time this past year learning how to implement machine learning methods, but eventually got to the point where I feel confident building and troubleshooting models with the tidymodel framework. I had an “aha” moment when working on a classifier for everyone’s favorite dataset, the <a href="https://www.kaggle.com/c/titanic">Titanic survival dataset</a>, and everything <em>finally</em> clicked. The model wasn’t great, but being able to quickly build and iterate was game-changing.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/titanic.png" class="img-fluid"></p>
</section>
<section id="diamonds-are-forever-feature-engineering-with-the-diamonds-dataset" class="level2">
<h2 class="anchored" data-anchor-id="diamonds-are-forever-feature-engineering-with-the-diamonds-dataset"><a href="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/">Diamonds are Forever: Feature Engineering with the Diamonds Dataset</a></h2>
<p>With some machine learning under my belt, I spent some time practicing feature engineering with the <a href="https://ggplot2.tidyverse.org/reference/diamonds.html">diamonds dataset</a>. From the variable importance plot, I found that some of the engineered features were among the most important for predicting a diamond’s price!</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/diamonds_01.png" class="img-fluid"> <img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/diamonds_02.png" class="img-fluid"></p>
</section>
<section id="do-voters-want-democrats-or-republicans-in-congress" class="level2">
<h2 class="anchored" data-anchor-id="do-voters-want-democrats-or-republicans-in-congress"><a href="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/">Do Voters Want Democrats or Republicans in Congress?</a></h2>
<p>Most recently, I created a <a href="https://github.com/markjrieke/2022-midterm-forecasts/blob/main/scripts/generic_ballot_weighting.R">congressional ballot aggregator</a> that weights polls by pollster, recency, sample size, and methodology. This was a huge effort to create a custom regression methodology, and I’m very happy with how it turned out! As of today, voters are just about even-split between Democrats and Republicans in the upcoming 2022 midterms.</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/generic_ballot.png" class="img-fluid"></p>
</section>
</section>
<section id="plans-for-2022" class="level1">
<h1>Plans for 2022</h1>
<p>I think I’ve come a long way in 2021 and I hope that in 2023, I can look back on 2022 and see a similar level of growth throughout the year. Here are a few things I plan on working on this year:</p>
<ul>
<li><strong>Writing</strong>: I’ve spent a lot of time in 2021 working on technical skills, but haven’t really taken time to work on my writing. This will be an important focus for me in 2022, since technical information is useless if I’m not able to communicate it well.</li>
<li><strong>Bringing ML projects to the office</strong>: In my current job, we’ve been spending the majority of the last six months focusing on troubleshooting the errors and getting over the speed-bumps involved with changing our primary survey vendor. We haven’t had the bandwidth to work on higher level/higher value projects, but should be able to do so in the upcoming year. Some projects I’m excited to work on this year include:
<ul>
<li>Variable importance in predicting positive sentiment in surveys;</li>
<li>Patient segmentation with k-means clustering;</li>
<li>Shiny App - “How confident am I?” - for educating our non-technical counterparts on confidence intervals vs.&nbsp;point estimates;</li>
<li>Using NLP for predicting positive sentiment from patient comments;</li>
<li>Topic modeling from comments for easier comment segmentation.</li>
</ul></li>
<li><strong>Natural Language Processing</strong>: As alluded to above, I’d like to work with text data for predictive analysis this year — there’s a lot of valuable insight that can be drawn from text data once I understand how to extract it!</li>
<li><strong>Enrolling in a Master’s of D.S. program</strong>: While I’ve been able to pick up a lot of knowledge from free/low-cost resources online (as well as spending countless hours on StackOverflow), I believe it’s time to further my formal education by pursuing a Master’s of Data Science part-time. Enrolling in a master’s program should help improve both my technical and non-technical skills, as well as formalize my transition from engineering to data science with a degree.</li>
<li><strong>Forecasting the 2022 Midterms</strong>: A long-term goal since starting this blog was to learn how to and ultimately deploy a forecast model for the 2022 midterms. I believe I’m well on my way, and hope to be able to publish midterm forecast models for the House, Senate, and Gubernatorial races sometime in the summer this year.</li>
</ul>
<p>All-in-all, I’ve got a lot on my plate for 2022, but I’m confident that I’ll be able to tackle the challenges that come my way this year! My schedule is in a good place — full but manageable. As a preview of the next post I have scheduled, here’s a model I built to estimate Biden’s approval:</p>
<p><img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/biden_01.png" class="img-fluid"> <img src="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/pics/biden_02.png" class="img-fluid"></p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2022,
  author = {Mark Rieke},
  title = {The {Data} {Diary:} {Year} in {Review}},
  date = {2022-01-12},
  url = {https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2022" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2022. <span>“The Data Diary: Year in Review.”</span> January
12, 2022. <a href="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review">https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <guid>https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/index.html</guid>
  <pubDate>Wed, 12 Jan 2022 06:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2022-01-12-the-data-diary-year-in-review/icon.png" medium="image" type="image/png" height="132" width="144"/>
</item>
<item>
  <title>Do Voters Want Democrats or Republicans in Congress?</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/index.html</link>
  <description><![CDATA[ 




<p>The 2022 midterms are still quite a ways away, however, in order to have a forecast ready in time, I need to start working on the model well in advance! One of the features I plan on using in the House Forecast is the <a href="https://www.pewresearch.org/politics/2002/10/01/why-the-generic-ballot-test/">generic congressional ballot</a> average. Generic ballot polls ask respondents whether they intend to vote for either the Republican or Democratic candidate for the U.S. House of Representatives in their district. FiveThirtyEight provides a <a href="https://projects.fivethirtyeight.com/congress-generic-ballot-polls/">daily updating polling average</a>, but in order to project beyond their current day’s average, I needed to build my own poll aggregator! Thankfully, they also are kind enough to provide the <a href="https://github.com/fivethirtyeight/data/tree/master/polls">underlying polling data</a> as well.</p>
<p>In this post, I’ll walk through the steps taken to build the generic ballot aggregator and explore the results.</p>
<section id="the-gameplan" class="level1">
<h1>The Gameplan</h1>
<p>FiveThirtyEight’s data only goes back for two election cycles, which doesn’t provide enough data to build a poll aggregator from scratch. However, because they also provide their <a href="https://projects.fivethirtyeight.com/generic-ballot-data/generic_ballot.csv">historical trendline</a>, I can build a poll aggregator that fits the polling results to their historical trend.</p>
<p>In addition to the topline result, each poll in FiveThirtyEight’s repository includes quite a bit of additional meta-information about the poll: the pollster, sample size, survey methodology, and recipient population. Some pollsters, methodologies, and populations tend to be more accurate than others, so I’d be remiss to not include these features in the polling model. To incorporate all of this information, each feature will be weighted according to how well it fits FiveThirtyEight’s historical average. I’m sweeping a lot of programmatic detail under the rug here, but in general, features that fit FiveThirtyEight’s trendline well will have a higher weight and features that don’t fit the trendline so well will have a lower weight. Finally, since we know that some pollsters tend to favor one party, we’ll also create a “pollster offset” feature to shift each poll slightly and account for this partisan lean.</p>
<p>Before digging any further, it may be beneficial to explore the polling repository a bit. Here’s a sample of the polling data used for the aggregator:</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(riekelib)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(lubridate)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">123</span>)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"https://github.com/markjrieke/electiondata/raw/main/data/polls/src/fte/generic_ballot_polls_historical.csv"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">end_date =</span> <span class="fu" style="color: #4758AB;">as_date</span>(end_date)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;">filter</span>(end_date <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="fu" style="color: #4758AB;">ymd</span>(<span class="st" style="color: #20794D;">"2021-01-01"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;">select</span>(cycle, display_name, sample_size, population, methodology, end_date, dem, rep) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;">slice_sample</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">10</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;">rename</span>(<span class="at" style="color: #657422;">pollster =</span> display_name) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-12">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 7%">
<col style="width: 20%">
<col style="width: 15%">
<col style="width: 14%">
<col style="width: 15%">
<col style="width: 14%">
<col style="width: 6%">
<col style="width: 6%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: right;">cycle</th>
<th style="text-align: left;">pollster</th>
<th style="text-align: right;">sample_size</th>
<th style="text-align: left;">population</th>
<th style="text-align: left;">methodology</th>
<th style="text-align: left;">end_date</th>
<th style="text-align: right;">dem</th>
<th style="text-align: right;">rep</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">2018</td>
<td style="text-align: left;">HarrisX</td>
<td style="text-align: right;">3861</td>
<td style="text-align: left;">lv</td>
<td style="text-align: left;">Online</td>
<td style="text-align: left;">2011-02-18</td>
<td style="text-align: right;">48.0</td>
<td style="text-align: right;">42.0</td>
</tr>
<tr class="even">
<td style="text-align: right;">2018</td>
<td style="text-align: left;">SurveyMonkey</td>
<td style="text-align: right;">9532</td>
<td style="text-align: left;">a</td>
<td style="text-align: left;">Online</td>
<td style="text-align: left;">2010-07-18</td>
<td style="text-align: right;">43.0</td>
<td style="text-align: right;">42.0</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2020</td>
<td style="text-align: left;">YouGov</td>
<td style="text-align: right;">1200</td>
<td style="text-align: left;">rv</td>
<td style="text-align: left;">Online</td>
<td style="text-align: left;">2012-03-19</td>
<td style="text-align: right;">47.0</td>
<td style="text-align: right;">41.0</td>
</tr>
<tr class="even">
<td style="text-align: right;">2018</td>
<td style="text-align: left;">Ipsos</td>
<td style="text-align: right;">731</td>
<td style="text-align: left;">lv</td>
<td style="text-align: left;">Online</td>
<td style="text-align: left;">2009-06-18</td>
<td style="text-align: right;">49.9</td>
<td style="text-align: right;">38.6</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2020</td>
<td style="text-align: left;">HarrisX</td>
<td style="text-align: right;">3000</td>
<td style="text-align: left;">rv</td>
<td style="text-align: left;">Online</td>
<td style="text-align: left;">2010-07-19</td>
<td style="text-align: right;">43.0</td>
<td style="text-align: right;">36.0</td>
</tr>
<tr class="even">
<td style="text-align: right;">2018</td>
<td style="text-align: left;">Ipsos</td>
<td style="text-align: right;">2383</td>
<td style="text-align: left;">a</td>
<td style="text-align: left;">Online</td>
<td style="text-align: left;">2009-01-17</td>
<td style="text-align: right;">36.8</td>
<td style="text-align: right;">31.3</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2018</td>
<td style="text-align: left;">Ipsos</td>
<td style="text-align: right;">663</td>
<td style="text-align: left;">lv</td>
<td style="text-align: left;">Online</td>
<td style="text-align: left;">2006-05-17</td>
<td style="text-align: right;">38.7</td>
<td style="text-align: right;">32.6</td>
</tr>
<tr class="even">
<td style="text-align: right;">2018</td>
<td style="text-align: left;">Morning Consult</td>
<td style="text-align: right;">1992</td>
<td style="text-align: left;">rv</td>
<td style="text-align: left;">Online</td>
<td style="text-align: left;">2005-05-18</td>
<td style="text-align: right;">42.0</td>
<td style="text-align: right;">35.0</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2018</td>
<td style="text-align: left;">Ipsos</td>
<td style="text-align: right;">1689</td>
<td style="text-align: left;">rv</td>
<td style="text-align: left;">Online</td>
<td style="text-align: left;">2007-03-18</td>
<td style="text-align: right;">41.4</td>
<td style="text-align: right;">36.5</td>
</tr>
<tr class="even">
<td style="text-align: right;">2018</td>
<td style="text-align: left;">Ipsos</td>
<td style="text-align: right;">1907</td>
<td style="text-align: left;">a</td>
<td style="text-align: left;">Online</td>
<td style="text-align: left;">2004-02-18</td>
<td style="text-align: right;">38.0</td>
<td style="text-align: right;">30.3</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>The following pollsters conducted enough polls to warrant their own category - all other pollsters will be lumped together under the banner of “Other Pollster:”</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"https://github.com/markjrieke/electiondata/raw/main/data/polls/src/fte/generic_ballot_polls_historical.csv"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">end_date =</span> <span class="fu" style="color: #4758AB;">as_date</span>(end_date)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;">select</span>(display_name) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;">rename</span>(<span class="at" style="color: #657422;">pollster =</span> display_name) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;">percent</span>(pollster, <span class="at" style="color: #657422;">.keep_n =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;">filter</span>(pct <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="fl" style="color: #AD0000;">0.01</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(pct)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>pct) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-9">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">pollster</th>
<th style="text-align: right;">n</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Ipsos</td>
<td style="text-align: right;">1239</td>
</tr>
<tr class="even">
<td style="text-align: left;">HarrisX</td>
<td style="text-align: right;">426</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Morning Consult</td>
<td style="text-align: right;">305</td>
</tr>
<tr class="even">
<td style="text-align: left;">YouGov</td>
<td style="text-align: right;">195</td>
</tr>
<tr class="odd">
<td style="text-align: left;">USC Dornsife</td>
<td style="text-align: right;">71</td>
</tr>
<tr class="even">
<td style="text-align: left;">The Winston Group</td>
<td style="text-align: right;">44</td>
</tr>
<tr class="odd">
<td style="text-align: left;">McLaughlin &amp; Associates</td>
<td style="text-align: right;">34</td>
</tr>
<tr class="even">
<td style="text-align: left;">Firehouse Strategies/Øptimus</td>
<td style="text-align: right;">32</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Rasmussen Reports/Pulse Opinion Research</td>
<td style="text-align: right;">30</td>
</tr>
<tr class="even">
<td style="text-align: left;">Quinnipiac University</td>
<td style="text-align: right;">28</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Here is a bit of expanded detail on the survey population categories:</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"https://github.com/markjrieke/electiondata/raw/main/data/polls/src/fte/generic_ballot_polls_historical.csv"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">select</span>(population) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;">percent</span>(population, <span class="at" style="color: #657422;">.keep_n =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(pct)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>pct) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;">bind_cols</span>(<span class="fu" style="color: #4758AB;">tibble</span>(<span class="at" style="color: #657422;">population_full =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Registered Voters"</span>,</span>
<span id="cb3-7">                                       <span class="st" style="color: #20794D;">"Likely Voters"</span>,</span>
<span id="cb3-8">                                       <span class="st" style="color: #20794D;">"Adults"</span>, </span>
<span id="cb3-9">                                       <span class="st" style="color: #20794D;">"Voters"</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;">relocate</span>(population_full, <span class="at" style="color: #657422;">.after =</span> population) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-11">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">population</th>
<th style="text-align: left;">population_full</th>
<th style="text-align: right;">n</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">rv</td>
<td style="text-align: left;">Registered Voters</td>
<td style="text-align: right;">1510</td>
</tr>
<tr class="even">
<td style="text-align: left;">lv</td>
<td style="text-align: left;">Likely Voters</td>
<td style="text-align: right;">619</td>
</tr>
<tr class="odd">
<td style="text-align: left;">a</td>
<td style="text-align: left;">Adults</td>
<td style="text-align: right;">602</td>
</tr>
<tr class="even">
<td style="text-align: left;">v</td>
<td style="text-align: left;">Voters</td>
<td style="text-align: right;">2</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Finally, the top survey methodologies considered are shown below. Similar to pollsters, methodologies that are not used enough are lumped into an “Other Methodology” category:</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"https://github.com/markjrieke/electiondata/raw/main/data/polls/src/fte/generic_ballot_polls_historical.csv"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">select</span>(methodology) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">percent</span>(methodology, <span class="at" style="color: #657422;">.keep_n =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;">filter</span>(pct <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="fl" style="color: #AD0000;">0.01</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">methodology =</span> <span class="fu" style="color: #4758AB;">replace_na</span>(methodology, <span class="st" style="color: #20794D;">"Unknown"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(pct)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>pct) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-8">  knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">methodology</th>
<th style="text-align: right;">n</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Online</td>
<td style="text-align: right;">2425</td>
</tr>
<tr class="even">
<td style="text-align: left;">Live Phone</td>
<td style="text-align: right;">194</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Unknown</td>
<td style="text-align: right;">62</td>
</tr>
<tr class="even">
<td style="text-align: left;">IVR/Online</td>
<td style="text-align: right;">44</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>The general plan of attack was to fit the polls to the trendline, measure the error, update the weights and offsets slightly, and repeat until the error is below an acceptable threshold. As time progresses, we make smaller and smaller updates to the weights and offsets we hone in on optimal values for minimizing error.</p>
</section>
<section id="exploring-the-results" class="level1">
<h1>Exploring the Results</h1>
<p>First and foremost, I’m pleased to report that the model fit the historical data fairly well. The model’s trendline (in blue) reasonably matches FiveThirtyEight’s historical trendline (in red):</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/final_fit.png" class="img-fluid"></p>
<p>As expected, as the model trains the weights and offsets, the <code>rmse</code> continues to shrink, and levels off just after 150 training rounds:</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/rmse_tracker.png" class="img-fluid"></p>
<p>Some pollsters are better at fitting the trendline: YouGov polls end up with the highest weight in the model whereas Morning Consult polls are downweighted.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/pollster_weights.png" class="img-fluid"></p>
<p>What are the partisan leanings of each pollster? Each pollster offset is shown below - pollsters at the top are <em>generally</em> more conservative leaning pollsters near the bottom are <em>generally</em> more liberal leaning. Or rather, pollsters near the top fit the trend better when we adjust their results to favor democrats, and pollsters near the bottom fit better when adjusted in favor of republicans.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/pollster_offsets.png" class="img-fluid"></p>
<p>Some pollsters have fairly significant offsets! It’s reassuring to note, however, that these pollsters are downweighted and don’t make up the majority of polls recorded. The five pollsters with the most number of generic ballot polls conducted tend to fall fairly close to 0-offset.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/pollster_weights_summary_size.png" class="img-fluid"></p>
<p>Although <a href="https://www.nytimes.com/2019/07/02/upshot/online-polls-analyzing-reliability.html">live phone polling has become more and more difficult</a> in recent years, it still ended up being the top-weighted method for the generic ballot poll.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/methodology_weights.png" class="img-fluid"></p>
<p>Finally, surveying a population of registered voters turned out to be best for matching polls to the trendline, whereas the “voters” population was filtered away entirely (though that may be because there were only two polls conducted with this population).</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/population_weights.png" class="img-fluid"></p>
</section>
<section id="fitting-to-new-2022-data" class="level1">
<h1>Fitting to New 2022 Data</h1>
<p>This exploration of how the model fits to the training data is useful, but how well does this model fit to new data? As it turns out, fairly well! When fit to data it wasn’t trained on, the model’s trendline (in blue) closely follows the target trendline (in red).</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/fit_2022_comparison.png" class="img-fluid"></p>
<p>This also gives us the ability to project <em>beyond</em> the current average! As we get further and further away from the current day, our confidence interval around the current average widens out.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/fit_2022_ed.png" class="img-fluid"></p>
<p>This behavior looks great! One area of concern, however, is the area on the left - on days where we already have data, we’re <em>way</em> too confident in our estimate! On some days, the confidence interval only spans 0.5%, which simply isn’t realistic.</p>
<p>To deal with this, we’ll create a new feature, <code>downweight</code>, that we can train to widen our confidence interval to something more credible.</p>
</section>
<section id="one-more-round-of-training" class="level1">
<h1>One More Round of Training</h1>
<p>Similar to training the generic ballot average, we can train the <code>downweight</code> feature to match the model’s confidence interval to FiveThirtyEight’s confidence interval. The trained result isn’t a perfect fit, but this does give us a mathematically sound, consistent way to construct a more realistic confidence interval. Here’s how the model’s confidence interval compares to the training set:</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/ci_fit_historical.png" class="img-fluid"></p>
<p>On new data, the model similarly provides an okay-enough fit for our purposes. The model may find it difficult to recreate FiveThirtyEight’s confidence interval due to differences in model construction. <a href="https://fivethirtyeight.com/features/how-were-tracking-joe-bidens-approval-rating/">According to FiveThirtyEight’s documentation</a> on other polling averages, it looks like they use an ensemble of <a href="https://en.wikipedia.org/wiki/Local_regression">LOESS models</a>, whereas I generate a single <a href="https://en.wikipedia.org/wiki/Beta_distribution">beta distribution</a>. Without getting too far into the weeds, the stack of LOESS models results in a confidence interval that is less prone to quick growth.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/ci_fit_current.png" class="img-fluid"></p>
</section>
<section id="wrapping-it-all-up" class="level1">
<h1>Wrapping It All Up</h1>
<p>Now that we’ve defined a model, we can finally answer the question in the title: do voters want Democrats or Republicans in congress? According to this model, voters are as even split as you can get!</p>
<p><img src="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/pics/generic_ballot_current.png" class="img-fluid"></p>
<p>Even if there was a leader in the polls, the generic ballot’s predictive power this far out from the house elections is, to a first approximation, effectively useless. As we get closer to the election day, however, the polling model will become more and more useful. Additionally, the methods I used to generate the polling average can be replicated (with slight modifications) for other polling averages that will feed into the model, so stay tuned for more!</p>
</section>
<section id="some-programming-notes" class="level1">
<h1>Some Programming Notes</h1>
<p>I’ve skipped over quite a bit of programming detail. If you’re so inclined, you can read through the <a href="https://github.com/markjrieke/electiondata/blob/main/scripts/generic_ballot_weighting.R">script to build the model and generate plots</a>. There’s a <em>lot</em> going on there, but I’d like to highlight a few packages that were instrumental for putting this together:</p>
<ul>
<li><a href="https://cran.r-project.org/web/packages/doParallel/index.html"><code>doParallel</code></a>: I frequently use <code>doParallel</code>, which uses multiple cores running in parallel to speed up processes. Most of the time, loading <code>doParallel</code> is just done for convenience’s sake, but it was absolutely necessary for this project — even with parallel processing, each round of model training was lengthy.</li>
<li><a href="https://furrr.futureverse.org/"><code>furrr</code></a>: the goal of <code>furrr</code> is to combine <code>purrr</code>’s family of mapping functions with <code>future</code>’s parallel processing capabilities. Replacing my <code>purrr::map()</code> functions with <code>furrr::future_map()</code> functions literally cut training time in half.</li>
<li><a href="https://github.com/GuangchuangYu/shadowtext"><code>shadowtext</code></a>: <code>shadowtext</code> is a small, niche package that allows you to add colored borders to <code>geom_text()</code> objects in a ggplot. It’s not visible in today’s chart because there’s 100% overlap between democrats &amp; republicans, but there’s a white border around the text in front of the trendline that just looks nice.</li>
</ul>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2021,
  author = {Mark Rieke},
  title = {Do {Voters} {Want} {Democrats} or {Republicans} in
    {Congress?}},
  date = {2021-12-14},
  url = {https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2021" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2021. <span>“Do Voters Want Democrats or Republicans in
Congress?”</span> December 14, 2021. <a href="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress">https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress</a>.
</div></div></section></div> ]]></description>
  <category>politics</category>
  <guid>https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/index.html</guid>
  <pubDate>Tue, 14 Dec 2021 06:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2021-12-14-do-voters-want-democrats-or-republicans-in-congress/featured.png" medium="image" type="image/png" height="94" width="144"/>
</item>
<item>
  <title>Technical Books!</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2021-11-28-technical-books/index.html</link>
  <description><![CDATA[ 




<p>Happy (belated) Thanksgiving! This year, my family drove down to Houston for the holiday &amp; I hosted Thanksgiving for the first time. We played lots of games and ate well - my fridge is <em>still</em> stocked full of leftovers. Knowing we’d be busy with hosting, I planned ahead and scheduled a lighter post - this week, I thought I’d highlight some technical books that I’ve either referenced for modeling work, have been recommended to me, or I’ve heard about and would like to read:</p>
<ul>
<li><strong><a href="https://web.stanford.edu/~hastie/ElemStatLearn/printings/ESLII_print12_toc.pdf">The Elements of Statistical Learning</a></strong> is referenced as the Bible of Machine Learning by <a href="https://www.youtube.com/channel/UCtYLUTtgS3k1Fg4y5tAhLbw">Josh Starmer</a> and provides a robust and deeply technical foundation for a wide array of machine learning models. It’s considered a must-have among both machine learning theorists, who look for new model structures, and practitioners (like myself!).</li>
<li><strong><a href="https://web.stanford.edu/~hastie/ISLR2/ISLRv2_website.pdf">An Introduction to Statistical Learning with Applications in R</a></strong> is a companion to <em>The Elements of Statistical Learning</em>. <em>An Introduction to Statistical Learning</em> arose as a broader and less technical treatment of the key topics discussed in <em>The Elements of Statistical Learning</em>. Each section also includes learning-lab lessons walking through the implementation of the statistical learning method from that chapter (<a href="https://www.emilhvitfeldt.com/">Emil Hvitfeldt</a> is also working on a <a href="https://emilhvitfeldt.github.io/ISLR-tidymodels-labs/">companion site</a> for completing the labs with tidymodels).</li>
<li><strong><a href="https://www.tmwr.org/index.html">Tidy Modeling with R</a></strong> is a guide to using the tidymodel framework and has been an excellent reference in both personal and professional projects.</li>
<li><strong><a href="https://www.tidytextmining.com/">Text Mining with R: a Tidy Approach</a></strong> serves as an introduction to text mining and other methods for dealing with unstructured, non-rectangular data. In my current role as a Consumer Experience Analyst, I have to interact with unstructured data (in the form of patient comments) daily - this book, along with the <a href="https://juliasilge.github.io/tidytext/">tidytext</a> package, have been incredibly useful for analyzing and visualizing text data.</li>
<li><strong><a href="https://smltar.com/preface.html">Supervised Machine Learning for Text Analysis in R</a></strong> picks up where <em>Text Mining with R</em> left off by exploring (as the title suggests) supervised machine learning methods with text data. While I haven’t done extensive text modeling, this is one area that I’d like to explore further in 2022.</li>
<li><strong><a href="http://www.feat.engineering/">Feature Engineering and Selection: A Practical Approach for Predictive Models</a></strong> is a guidebook offering methods for feature engineering (transforming and creating new predictor variables to improve predictive model performance). While I’ve utilized some basic feature engineering in some of my work, I’m interested in adding more robust tools to my feature-engineering toolkit!</li>
<li><strong><a href="https://drob.gumroad.com/l/empirical-bayes">Introduction to Empirical Bayes</a></strong> is <a href="http://varianceexplained.org/about/">David Robinson’s</a> book coalescing a series of blog posts on Bayesian estimation, credible intervals, A/B testing, mixed models, and a host of other methods, all through the example of baseball batting averages.</li>
<li><strong><a href="https://jnolis.com/book/">Build a Career in Data Science</a></strong> is, as the name suggests, a book about building a career in data science. I generally feel that most career-help books are too broad to be useful or offer non-novel information for those in the industry the book is written for. Given, however, that I don’t have an academic or professional background in the field and that I’d like to eventually move from analytics to data science, I’d like to add this to the collection to pick up on some best practices.</li>
</ul>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2021,
  author = {Mark Rieke},
  title = {Technical {Books!}},
  date = {2021-11-28},
  url = {https://www.thedatadiary.net/posts/2021-11-28-technical-books},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2021" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2021. <span>“Technical Books!”</span> November 28, 2021. <a href="https://www.thedatadiary.net/posts/2021-11-28-technical-books">https://www.thedatadiary.net/posts/2021-11-28-technical-books</a>.
</div></div></section></div> ]]></description>
  <category>rstats</category>
  <guid>https://www.thedatadiary.net/posts/2021-11-28-technical-books/index.html</guid>
  <pubDate>Sun, 28 Nov 2021 06:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2021-11-28-technical-books/icon.png" medium="image" type="image/png" height="132" width="144"/>
</item>
<item>
  <title>Diamonds are Forever</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index.html</link>
  <description><![CDATA[ 




<p>Are y’all ready for some charts?? This week, I did a bit of machine learning practice with the <a href="https://ggplot2.tidyverse.org/reference/diamonds.html"><code>diamonds dataset</code></a>. This dataset is interesting and good for practice for a few reasons:</p>
<ul>
<li>there are lots of observations (50,000+);</li>
<li>it includes a mix of numeric and categorical variables;</li>
<li>there are some data oddities to deal with (log scales, interactions, non-linear relations)</li>
</ul>
<p>I’ll be doing a bit of feature engineering prior to fitting an tuning a linear model that predicts the each diamond’s <code>price</code> with the <a href="https://glmnet.stanford.edu/index.html"><code>glmnet</code></a> package. This will give a good end-to-end glimpse into the data exploration and model fitting process! Before we get into that, let’s load some packages and get a preview of the dataset.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(tidymodels)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(vip)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">theme_set</span>(<span class="fu" style="color: #4758AB;">theme_minimal</span>())</span>
<span id="cb1-6"></span>
<span id="cb1-7">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;">slice_head</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 × 10
   carat cut       color clarity depth table price     x     y     z
   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;
 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43
 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31
 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31
 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63
 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75
 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48
 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47
 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53
 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49
10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39</code></pre>
</div>
</div>
<p>Since we’re predicting price, let’s look at its distribution first.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>We’re definitely gonna want to apply a transformation to the price when modeling - let’s look at the distribution on a log-10 scale.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;">scale_x_log10</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>That’s a lot more evenly distributed, if not perfect. That’s a fine starting point, so now we’ll look through the rest of the data.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> carat)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> cut,</span>
<span id="cb6-3">             <span class="at" style="color: #657422;">y =</span> price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;">geom_boxplot</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-2.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">count</span>(cut) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> cut,</span>
<span id="cb7-4">             <span class="at" style="color: #657422;">y =</span> n)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;">geom_col</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-3.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> color,</span>
<span id="cb8-3">             <span class="at" style="color: #657422;">y =</span> price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;">geom_boxplot</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-4.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">count</span>(color) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> color,</span>
<span id="cb9-4">             <span class="at" style="color: #657422;">y =</span> n)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;">geom_col</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-5.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> clarity,</span>
<span id="cb10-3">             <span class="at" style="color: #657422;">y =</span> price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;">geom_boxplot</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-6.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">count</span>(clarity) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> clarity,</span>
<span id="cb11-4">             <span class="at" style="color: #657422;">y =</span> n)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;">geom_col</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-7.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> depth)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-8.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> table)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>() </span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-9.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> x)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-10.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> y)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>() </span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-11.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> z)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-4-12.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>It looks like there may be a good opportunity to try out a few normalization and resampling techniques, but before we get into any of that, let’s build a baseline linear model.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;"># splits</span></span>
<span id="cb17-2">diamonds_split <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">initial_split</span>(diamonds)</span>
<span id="cb17-3">diamonds_train <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">training</span>(diamonds_split)</span>
<span id="cb17-4">diamonds_test <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">testing</span>(diamonds_split)</span>
<span id="cb17-5"></span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;"># resamples (don't want to use testing data!)</span></span>
<span id="cb17-7">diamonds_folds <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">vfold_cv</span>(diamonds_train)</span>
<span id="cb17-8"></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;"># model spec</span></span>
<span id="cb17-10">mod01 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb17-11">  <span class="fu" style="color: #4758AB;">linear_reg</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-12">  <span class="fu" style="color: #4758AB;">set_engine</span>(<span class="st" style="color: #20794D;">"lm"</span>)</span>
<span id="cb17-13"></span>
<span id="cb17-14"><span class="co" style="color: #5E5E5E;"># recipe</span></span>
<span id="cb17-15">rec01 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb17-16">  <span class="fu" style="color: #4758AB;">recipe</span>(price <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-17">  <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal_predictors</span>())</span>
<span id="cb17-18"></span>
<span id="cb17-19"><span class="co" style="color: #5E5E5E;"># controls</span></span>
<span id="cb17-20">ctrl_preds <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb17-21">  <span class="fu" style="color: #4758AB;">control_resamples</span>(<span class="at" style="color: #657422;">save_pred =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb17-22"></span>
<span id="cb17-23"><span class="co" style="color: #5E5E5E;"># create a wf</span></span>
<span id="cb17-24">wf01 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb17-25">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-26">  <span class="fu" style="color: #4758AB;">add_model</span>(mod01) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-27">  <span class="fu" style="color: #4758AB;">add_recipe</span>(rec01)</span>
<span id="cb17-28"></span>
<span id="cb17-29"><span class="co" style="color: #5E5E5E;"># parallel processing</span></span>
<span id="cb17-30">doParallel<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">registerDoParallel</span>()</span>
<span id="cb17-31"></span>
<span id="cb17-32"><span class="co" style="color: #5E5E5E;"># fit</span></span>
<span id="cb17-33">rs01 <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb17-34">  <span class="fu" style="color: #4758AB;">fit_resamples</span>(</span>
<span id="cb17-35">    wf01,</span>
<span id="cb17-36">    diamonds_folds,</span>
<span id="cb17-37">    <span class="at" style="color: #657422;">control =</span> ctrl_preds</span>
<span id="cb17-38">  )</span>
<span id="cb17-39"></span>
<span id="cb17-40"><span class="co" style="color: #5E5E5E;"># metrics!</span></span>
<span id="cb17-41"><span class="fu" style="color: #4758AB;">collect_metrics</span>(rs01)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 6
  .metric .estimator     mean     n std_err .config             
  &lt;chr&gt;   &lt;chr&gt;         &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               
1 rmse    standard   1135.       10 8.10    Preprocessor1_Model1
2 rsq     standard      0.919    10 0.00129 Preprocessor1_Model1</code></pre>
</div>
</div>
<p>And right off the bat, we can see a fairly high value for <code>rsq</code>! However, <code>rsq</code> doesn’t tell the whole story, so we should check our predictions and residuals plots.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;">augment</span>(rs01) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> price,</span>
<span id="cb19-3">             <span class="at" style="color: #657422;">y =</span> .pred)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-4">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.01</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;">geom_abline</span>(<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb19-6">              <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">0.1</span>,</span>
<span id="cb19-7">              <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>This is <em>definitely</em> not what we want to see! It looks like there’s an odd curve/structure to the graph and we’re actually predicting quite a few negative values. The residuals plot doesn’t look too great either.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;">augment</span>(rs01) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> price,</span>
<span id="cb20-3">             <span class="at" style="color: #657422;">y =</span> .resid)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb20-4">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.01</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb20-5">  <span class="fu" style="color: #4758AB;">geom_hline</span>(<span class="at" style="color: #657422;">yintercept =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb20-6">             <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb20-7">             <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>,</span>
<span id="cb20-8">             <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">0.1</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>What we’d like to see is a 0-correlation plot with errors normally distributed; what we’re seeing instead, however, is a ton of structure.</p>
<p>That being said, that’s okay! we expected this first pass to be pretty rough! And the price is <em>clearly</em> on a log-10 scale. To make apples-apples comparisons with models going forward, I’ll retrain this basic linear model to predict the <code>log10(price)</code>. This’ll involve a bit of data re-manipulation!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="co" style="color: #5E5E5E;"># log transform price</span></span>
<span id="cb21-2">diamonds_model <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb21-3">  diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">price =</span> <span class="fu" style="color: #4758AB;">log10</span>(price),</span>
<span id="cb21-5">         <span class="fu" style="color: #4758AB;">across</span>(cut<span class="sc" style="color: #5E5E5E;">:</span>clarity, as.character))</span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="co" style="color: #5E5E5E;"># bad practice copy + paste lol</span></span>
<span id="cb21-8"></span>
<span id="cb21-9"><span class="co" style="color: #5E5E5E;"># splits</span></span>
<span id="cb21-10"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">999</span>)</span>
<span id="cb21-11">diamonds_split <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">initial_split</span>(diamonds_model)</span>
<span id="cb21-12">diamonds_train <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">training</span>(diamonds_split)</span>
<span id="cb21-13">diamonds_test <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">testing</span>(diamonds_split)</span>
<span id="cb21-14"></span>
<span id="cb21-15"><span class="co" style="color: #5E5E5E;"># resamples (don't want to use testing data!)</span></span>
<span id="cb21-16"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">888</span>)</span>
<span id="cb21-17">diamonds_folds <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">vfold_cv</span>(diamonds_train)</span>
<span id="cb21-18"></span>
<span id="cb21-19"><span class="co" style="color: #5E5E5E;"># model spec</span></span>
<span id="cb21-20">mod01 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb21-21">  <span class="fu" style="color: #4758AB;">linear_reg</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-22">  <span class="fu" style="color: #4758AB;">set_engine</span>(<span class="st" style="color: #20794D;">"lm"</span>)</span>
<span id="cb21-23"></span>
<span id="cb21-24"><span class="co" style="color: #5E5E5E;"># recipe</span></span>
<span id="cb21-25">rec01 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb21-26">  <span class="fu" style="color: #4758AB;">recipe</span>(price <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-27">  <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal_predictors</span>())</span>
<span id="cb21-28"></span>
<span id="cb21-29"><span class="co" style="color: #5E5E5E;"># controls</span></span>
<span id="cb21-30">ctrl_preds <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb21-31">  <span class="fu" style="color: #4758AB;">control_resamples</span>(<span class="at" style="color: #657422;">save_pred =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb21-32"></span>
<span id="cb21-33"><span class="co" style="color: #5E5E5E;"># create a wf</span></span>
<span id="cb21-34">wf01 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb21-35">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-36">  <span class="fu" style="color: #4758AB;">add_model</span>(mod01) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb21-37">  <span class="fu" style="color: #4758AB;">add_recipe</span>(rec01)</span>
<span id="cb21-38"></span>
<span id="cb21-39"><span class="co" style="color: #5E5E5E;"># parallel processing</span></span>
<span id="cb21-40">doParallel<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">registerDoParallel</span>()</span>
<span id="cb21-41"></span>
<span id="cb21-42"><span class="co" style="color: #5E5E5E;"># fit</span></span>
<span id="cb21-43"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">777</span>)</span>
<span id="cb21-44">rs01 <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb21-45">  <span class="fu" style="color: #4758AB;">fit_resamples</span>(</span>
<span id="cb21-46">    wf01,</span>
<span id="cb21-47">    diamonds_folds,</span>
<span id="cb21-48">    <span class="at" style="color: #657422;">control =</span> ctrl_preds</span>
<span id="cb21-49">  )</span>
<span id="cb21-50"></span>
<span id="cb21-51"><span class="co" style="color: #5E5E5E;"># metrics!</span></span>
<span id="cb21-52"><span class="fu" style="color: #4758AB;">collect_metrics</span>(rs01)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 6
  .metric .estimator   mean     n std_err .config             
  &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               
1 rmse    standard   0.0793    10 0.00557 Preprocessor1_Model1
2 rsq     standard   0.966     10 0.00494 Preprocessor1_Model1</code></pre>
</div>
</div>
<p>And wow, that <em>one</em> transformation increased our <code>rsq</code> to 0.96! Again, that’s not the whole story, and we’re going to be evaluating models based on the <code>rmse</code>. Let’s look at how our prediction map has updated:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">rs01 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;">augment</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb23-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> price,</span>
<span id="cb23-4">             <span class="at" style="color: #657422;">y =</span> .pred)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb23-5">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.01</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb23-6">  <span class="fu" style="color: #4758AB;">geom_abline</span>(<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb23-7">              <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">0.1</span>,</span>
<span id="cb23-8">              <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>) </span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Now <em>that</em> is a much better starting place to be at! Let’s look at our coefficients</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">666</span>) <span class="co" style="color: #5E5E5E;"># :thedevilisalive:</span></span>
<span id="cb24-2">wf01 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb24-3">  <span class="fu" style="color: #4758AB;">fit</span>(diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb24-4">  <span class="fu" style="color: #4758AB;">pull_workflow_fit</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb24-5">  vip<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">vi</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb24-6">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Variable =</span> <span class="fu" style="color: #4758AB;">fct_reorder</span>(Variable, Importance)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb24-7">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Variable,</span>
<span id="cb24-8">             <span class="at" style="color: #657422;">y =</span> Importance,</span>
<span id="cb24-9">             <span class="at" style="color: #657422;">fill =</span> Sign)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb24-10">  <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb24-11">  <span class="fu" style="color: #4758AB;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb24-12">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb24-13">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb24-14">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb24-15">       <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Diamonds are forever"</span>,</span>
<span id="cb24-16">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Variable importance plot of a basic linear regression predicting diamond price"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Another way of looking at it:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">666</span>)</span>
<span id="cb25-2">wf01 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb25-3">  <span class="fu" style="color: #4758AB;">fit</span>(diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb25-4">  <span class="fu" style="color: #4758AB;">pull_workflow_fit</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb25-5">  vip<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">vi</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb25-6">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Importance =</span> <span class="fu" style="color: #4758AB;">if_else</span>(Sign <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"NEG"</span>, Importance <span class="sc" style="color: #5E5E5E;">*</span> <span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>, Importance),</span>
<span id="cb25-7">         <span class="at" style="color: #657422;">Variable =</span> <span class="fu" style="color: #4758AB;">fct_reorder</span>(Variable, Importance)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb25-8">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Variable,</span>
<span id="cb25-9">             <span class="at" style="color: #657422;">y =</span> Importance,</span>
<span id="cb25-10">             <span class="at" style="color: #657422;">fill =</span> Sign)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb25-11">  <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb25-12">  <span class="fu" style="color: #4758AB;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb25-13">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Diamonds are forever"</span>,</span>
<span id="cb25-14">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Variable importance plot of a basic linear regression predicting diamond price"</span>,</span>
<span id="cb25-15">       <span class="at" style="color: #657422;">x =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb25-16">       <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb25-17">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>This is a good, but definitely improvable, starting point. We can likely decrease our overall error with a bit of feature engineering and drop unimportant features by tuning a regularized model. There are some oddities in this initial model that will need to be improved upon; for one, we can definitively say that the <code>carat</code> feature ought to be <em>positively</em> associated with price</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb26-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> carat,</span>
<span id="cb26-3">             <span class="at" style="color: #657422;">y =</span> price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb26-4">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.01</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb26-5">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"A clear positive (albeit nonlinear) relationship between `carat` and `price`"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb26-6">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Another few things that are interesting to note in this plot! It looks like there are clusterings of carat ratings around round-ish numbers. My hypothesis here is that carat ratings tend to get rounded up to the next size. There’s also a clear abscence of diamonds priced at $1,500 (~3.17 on the log10 scale). I suppose there is some industry-specific reason to avoid a diamond price of $,1500?</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb27-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> carat,</span>
<span id="cb27-3">             <span class="at" style="color: #657422;">y =</span> price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb27-4">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.01</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb27-5">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"A clear positive (albeit nonlinear) relationship between `carat` and `price`"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb27-6">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title.position =</span> <span class="st" style="color: #20794D;">"plot"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb27-7">  <span class="fu" style="color: #4758AB;">geom_hline</span>(<span class="at" style="color: #657422;">yintercept =</span> <span class="fu" style="color: #4758AB;">log10</span>(<span class="dv" style="color: #AD0000;">1500</span>),</span>
<span id="cb27-8">             <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb27-9">             <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">0.9</span>,</span>
<span id="cb27-10">             <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>How to address all these things? With some feature engineering! Firstly, let’s add some recipe steps to balance classes &amp; normalize continuous variables.</p>
<p>But before I get into <em>that</em>, I’ll save the resample metrics so that we can compare models!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">metrics <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">collect_metrics</span>(rs01) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">model =</span> <span class="st" style="color: #20794D;">"model01"</span>)</span>
<span id="cb28-2"></span>
<span id="cb28-3">metrics</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 7
  .metric .estimator   mean     n std_err .config              model  
  &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;  
1 rmse    standard   0.0793    10 0.00557 Preprocessor1_Model1 model01
2 rsq     standard   0.966     10 0.00494 Preprocessor1_Model1 model01</code></pre>
</div>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="co" style="color: #5E5E5E;"># spec will be the same as model01</span></span>
<span id="cb30-2">mod02 <span class="ot" style="color: #003B4F;">&lt;-</span> mod01</span>
<span id="cb30-3"></span>
<span id="cb30-4"><span class="co" style="color: #5E5E5E;"># recipe!</span></span>
<span id="cb30-5">rec02 <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb30-6">  <span class="fu" style="color: #4758AB;">recipe</span>(price <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb30-7">  <span class="fu" style="color: #4758AB;">step_other</span>(cut, color, clarity) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb30-8">  <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal_predictors</span>(), <span class="sc" style="color: #5E5E5E;">-</span>cut) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb30-9">  </span>
<span id="cb30-10">  <span class="co" style="color: #5E5E5E;"># use smote resampling to balance classes</span></span>
<span id="cb30-11">  themis<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">step_smote</span>(cut) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb30-12">    </span>
<span id="cb30-13">  <span class="co" style="color: #5E5E5E;"># normalize continuous vars</span></span>
<span id="cb30-14">  bestNormalize<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">step_best_normalize</span>(carat, depth, table, x, y, z)</span></code></pre></div>
</details>
</div>
<p>Let’s <a href="https://recipes.tidymodels.org/reference/bake.html">bake</a> our recipe to verify that everything looks up-to-snuff in the preprocessed dataset.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">baked_rec02 <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb31-2">  rec02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb31-3">  <span class="fu" style="color: #4758AB;">prep</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb31-4">  <span class="fu" style="color: #4758AB;">bake</span>(<span class="at" style="color: #657422;">new_data =</span> <span class="cn" style="color: #8f5902;">NULL</span>)</span>
<span id="cb31-5"></span>
<span id="cb31-6">baked_rec02</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 80,495 × 20
     carat cut        depth  table       x       y      z price color_E color_F
     &lt;dbl&gt; &lt;fct&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;
 1 -0.706  Premium    0.138 -0.760 -0.709  -0.738  -0.695  3.01       0       1
 2  0.356  Very Good  0.570  0.835  0.342   0.251   0.344  3.63       0       0
 3  0.214  Premium   -0.308  0.835  0.293   0.263   0.166  3.58       0       0
 4 -1.08   other      1.04  -0.310 -1.30   -1.40   -0.995  2.70       0       0
 5 -0.641  Ideal     -0.602 -0.760 -0.595  -0.560  -0.622  2.97       0       0
 6 -0.0759 Premium   -0.602  0.494 -0.0349 -0.0460 -0.114  3.38       0       0
 7 -0.149  Premium   -1.16   0.103 -0.0565 -0.0842 -0.246  3.44       1       0
 8  0.170  Very Good -0.371  0.494  0.178   0.313   0.130  3.56       0       1
 9 -0.736  Ideal     -0.110 -0.760 -0.709  -0.738  -0.723  3.09       0       0
10  0.782  Ideal     -0.602 -0.310  0.819   0.846   0.732  4.02       0       0
# … with 80,485 more rows, and 10 more variables: color_G &lt;dbl&gt;, color_H &lt;dbl&gt;,
#   color_I &lt;dbl&gt;, color_J &lt;dbl&gt;, clarity_SI2 &lt;dbl&gt;, clarity_VS1 &lt;dbl&gt;,
#   clarity_VS2 &lt;dbl&gt;, clarity_VVS1 &lt;dbl&gt;, clarity_VVS2 &lt;dbl&gt;,
#   clarity_other &lt;dbl&gt;</code></pre>
</div>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">baked_rec02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb33-2">  <span class="fu" style="color: #4758AB;">count</span>(cut) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb33-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> cut,</span>
<span id="cb33-4">             <span class="at" style="color: #657422;">y =</span> n)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb33-5">  <span class="fu" style="color: #4758AB;">geom_col</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1">baked_rec02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb34-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> carat)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb34-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-17-2.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1">baked_rec02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb35-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> depth)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb35-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-17-3.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">baked_rec02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb36-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> table)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb36-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-17-4.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">baked_rec02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb37-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> x)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb37-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-17-5.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1">baked_rec02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb38-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> y)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb38-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>() </span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-17-6.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">baked_rec02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb39-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> z)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb39-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-17-7.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Everything looks alright with the exception of the <code>table</code> predictor. I wonder if there are a lot of repeated values in the <code>table</code> variable - that may be why we’re seeing a “chunky” histogram. Let’s check</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1">baked_rec02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb40-2">  <span class="fu" style="color: #4758AB;">count</span>(table) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb40-3">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(n))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10,406 × 2
    table     n
    &lt;dbl&gt; &lt;int&gt;
 1  0.103 12167
 2 -0.310 11408
 3 -0.760 11031
 4  0.494  9406
 5 -1.28   6726
 6  0.835  6165
 7  1.15   3810
 8 -1.85   2789
 9  1.42   2182
10  1.64    972
# … with 10,396 more rows</code></pre>
</div>
</div>
<p>Ooh - okay yeah that’s definitely the issue! I’m not <em>quite</em> sure how to deal with it, so we’re just going to ignore for now! Let’s add a new model &amp; see how it compares against the baseline transformed model.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1">wf02 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb42-2">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb42-3">  <span class="fu" style="color: #4758AB;">add_model</span>(mod02) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb42-4">  <span class="fu" style="color: #4758AB;">add_recipe</span>(rec02)</span>
<span id="cb42-5"></span>
<span id="cb42-6"><span class="co" style="color: #5E5E5E;"># stop parallel to avoid error!</span></span>
<span id="cb42-7"><span class="co" style="color: #5E5E5E;"># need to replace with PSOCK clusters</span></span>
<span id="cb42-8"><span class="co" style="color: #5E5E5E;"># see github issue here: https://github.com/tidymodels/recipes/issues/847</span></span>
<span id="cb42-9">foreach<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">registerDoSEQ</span>()</span>
<span id="cb42-10"></span>
<span id="cb42-11"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">666</span>) <span class="co" style="color: #5E5E5E;"># spoopy</span></span>
<span id="cb42-12">rs02 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb42-13">  <span class="fu" style="color: #4758AB;">fit_resamples</span>(</span>
<span id="cb42-14">    wf02,</span>
<span id="cb42-15">    diamonds_folds,</span>
<span id="cb42-16">    <span class="at" style="color: #657422;">control =</span> ctrl_preds</span>
<span id="cb42-17">  )</span>
<span id="cb42-18"></span>
<span id="cb42-19"><span class="fu" style="color: #4758AB;">collect_metrics</span>(rs02)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 6
  .metric .estimator  mean     n std_err .config             
  &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               
1 rmse    standard   0.115    10 0.00143 Preprocessor1_Model1
2 rsq     standard   0.932    10 0.00161 Preprocessor1_Model1</code></pre>
</div>
</div>
<p>Oof - that’s actually slightly worse than our baseline model!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1">rs02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb44-2">  <span class="fu" style="color: #4758AB;">augment</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb44-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> price,</span>
<span id="cb44-4">             <span class="at" style="color: #657422;">y =</span> .pred)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb44-5">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.01</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb44-6">  <span class="fu" style="color: #4758AB;">geom_abline</span>(<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb44-7">              <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">0.1</span>,</span>
<span id="cb44-8">              <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>) </span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>It looks like we’ve introduced structure into the residual plot!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1">rs02 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb45-2">  <span class="fu" style="color: #4758AB;">augment</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb45-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> price,</span>
<span id="cb45-4">             <span class="at" style="color: #657422;">y =</span> .resid)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb45-5">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.01</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb45-6">  <span class="fu" style="color: #4758AB;">geom_hline</span>(<span class="at" style="color: #657422;">yintercept =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb45-7">             <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb45-8">             <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">0.1</span>,</span>
<span id="cb45-9">             <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Yeah that’s fairly wonky! I’m wondering if it’s due to the SMOTE upsampling method we introduced? To counteract, I’ll build &amp; train new models after each set of recipe steps (e.g., resampling, normalizing, interactions) to buil up a better performing model one step at a time.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1">metrics <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb46-2">  metrics <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb46-3">  <span class="fu" style="color: #4758AB;">bind_rows</span>(<span class="fu" style="color: #4758AB;">collect_metrics</span>(rs02) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">model =</span> <span class="st" style="color: #20794D;">"model02"</span>))</span></code></pre></div>
</details>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb47-1"><span class="co" style="color: #5E5E5E;"># same model spec</span></span>
<span id="cb47-2">mod03 <span class="ot" style="color: #003B4F;">&lt;-</span> mod02</span>
<span id="cb47-3"></span>
<span id="cb47-4"><span class="co" style="color: #5E5E5E;"># rebuild rec+wf &amp; retrain</span></span>
<span id="cb47-5">rec03 <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb47-6">  <span class="fu" style="color: #4758AB;">recipe</span>(price <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb47-7">  <span class="fu" style="color: #4758AB;">step_other</span>(cut, color, clarity) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb47-8">  <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal_predictors</span>(), <span class="sc" style="color: #5E5E5E;">-</span>cut) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb47-9">  themis<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">step_smote</span>(cut)</span>
<span id="cb47-10"></span>
<span id="cb47-11">wf03 <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb47-12">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb47-13">  <span class="fu" style="color: #4758AB;">add_model</span>(mod03) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb47-14">  <span class="fu" style="color: #4758AB;">add_recipe</span>(rec03)</span>
<span id="cb47-15"></span>
<span id="cb47-16"><span class="co" style="color: #5E5E5E;"># do paralllel</span></span>
<span id="cb47-17">doParallel<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">registerDoParallel</span>()</span>
<span id="cb47-18"></span>
<span id="cb47-19"><span class="co" style="color: #5E5E5E;"># refit!</span></span>
<span id="cb47-20"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">123</span>)</span>
<span id="cb47-21">rs03 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb47-22">  <span class="fu" style="color: #4758AB;">fit_resamples</span>(</span>
<span id="cb47-23">    wf03,</span>
<span id="cb47-24">    diamonds_folds,</span>
<span id="cb47-25">    <span class="at" style="color: #657422;">control =</span> ctrl_preds</span>
<span id="cb47-26">  )</span>
<span id="cb47-27"></span>
<span id="cb47-28"><span class="fu" style="color: #4758AB;">collect_metrics</span>(rs03)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 6
  .metric .estimator   mean     n std_err .config             
  &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               
1 rmse    standard   0.0918    10 0.00502 Preprocessor1_Model1
2 rsq     standard   0.956     10 0.00502 Preprocessor1_Model1</code></pre>
</div>
</div>
<p>Interesting! Improved relative to <code>rs02</code>, but still not as good as our first model! Let’s try using <code>step_downsample()</code> to balance classes &amp; see how we fare.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1"><span class="co" style="color: #5E5E5E;"># cleanup some large-ish items eating up memory</span></span>
<span id="cb49-2"><span class="fu" style="color: #4758AB;">rm</span>(mod01, mod02, rec01, rec02, wf01, wf02, rs01, rs02)</span>
<span id="cb49-3"></span>
<span id="cb49-4"><span class="co" style="color: #5E5E5E;"># save metrics</span></span>
<span id="cb49-5">metrics <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb49-6">  metrics <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb49-7">  <span class="fu" style="color: #4758AB;">bind_rows</span>(<span class="fu" style="color: #4758AB;">collect_metrics</span>(rs03) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">model =</span> <span class="st" style="color: #20794D;">"model03"</span>))</span>
<span id="cb49-8"></span>
<span id="cb49-9"><span class="co" style="color: #5E5E5E;"># new mod</span></span>
<span id="cb49-10">mod04 <span class="ot" style="color: #003B4F;">&lt;-</span> mod03</span>
<span id="cb49-11"></span>
<span id="cb49-12"><span class="co" style="color: #5E5E5E;"># new rec</span></span>
<span id="cb49-13">rec04 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb49-14">  <span class="fu" style="color: #4758AB;">recipe</span>(price <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb49-15">  <span class="fu" style="color: #4758AB;">step_other</span>(cut, color, clarity) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb49-16">  <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal_predictors</span>(), <span class="sc" style="color: #5E5E5E;">-</span>cut) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb49-17">  themis<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">step_downsample</span>(cut)</span>
<span id="cb49-18"></span>
<span id="cb49-19">wf04 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb49-20">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb49-21">  <span class="fu" style="color: #4758AB;">add_model</span>(mod04) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb49-22">  <span class="fu" style="color: #4758AB;">add_recipe</span>(rec04) </span>
<span id="cb49-23"></span>
<span id="cb49-24"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">456</span>) </span>
<span id="cb49-25">rs04 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb49-26">  <span class="fu" style="color: #4758AB;">fit_resamples</span>(</span>
<span id="cb49-27">    wf04,</span>
<span id="cb49-28">    diamonds_folds,</span>
<span id="cb49-29">    <span class="at" style="color: #657422;">control =</span> ctrl_preds</span>
<span id="cb49-30">  )</span>
<span id="cb49-31"></span>
<span id="cb49-32"><span class="fu" style="color: #4758AB;">collect_metrics</span>(rs04)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 6
  .metric .estimator  mean     n std_err .config             
  &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               
1 rmse    standard   0.113    10  0.0120 Preprocessor1_Model1
2 rsq     standard   0.930    10  0.0153 Preprocessor1_Model1</code></pre>
</div>
</div>
<p>Wow - still a bit worse! I’ll try upsampling &amp; if there is no improvement, we’ll move on without resampling!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1">metrics <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb51-2">  metrics <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb51-3">  <span class="fu" style="color: #4758AB;">bind_rows</span>(<span class="fu" style="color: #4758AB;">collect_metrics</span>(rs04) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">model =</span> <span class="st" style="color: #20794D;">"model04"</span>))</span>
<span id="cb51-4"></span>
<span id="cb51-5">mod05 <span class="ot" style="color: #003B4F;">&lt;-</span> mod04</span>
<span id="cb51-6"></span>
<span id="cb51-7">rec05 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb51-8">  <span class="fu" style="color: #4758AB;">recipe</span>(price <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb51-9">  <span class="fu" style="color: #4758AB;">step_other</span>(cut, color, clarity) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb51-10">  <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal_predictors</span>(), <span class="sc" style="color: #5E5E5E;">-</span>cut) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb51-11">  themis<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">step_upsample</span>(cut)</span>
<span id="cb51-12"></span>
<span id="cb51-13">wf05 <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb51-14">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb51-15">  <span class="fu" style="color: #4758AB;">add_model</span>(mod05) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb51-16">  <span class="fu" style="color: #4758AB;">add_recipe</span>(rec05) </span>
<span id="cb51-17"></span>
<span id="cb51-18"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">789</span>)</span>
<span id="cb51-19">rs05 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb51-20">  <span class="fu" style="color: #4758AB;">fit_resamples</span>(</span>
<span id="cb51-21">    wf05,</span>
<span id="cb51-22">    diamonds_folds,</span>
<span id="cb51-23">    <span class="at" style="color: #657422;">control =</span> ctrl_preds</span>
<span id="cb51-24">  )</span>
<span id="cb51-25"></span>
<span id="cb51-26"><span class="fu" style="color: #4758AB;">collect_metrics</span>(rs05)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 6
  .metric .estimator  mean     n std_err .config             
  &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               
1 rmse    standard   0.101    10 0.00486 Preprocessor1_Model1
2 rsq     standard   0.946    10 0.00527 Preprocessor1_Model1</code></pre>
</div>
</div>
<p>Okay - resampling gets stricken off our list of recipe steps! Let’s look at how the models compare so far</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb53-1">metrics <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb53-2">  metrics <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb53-3">  <span class="fu" style="color: #4758AB;">bind_rows</span>(<span class="fu" style="color: #4758AB;">collect_metrics</span>(rs05) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">model =</span> <span class="st" style="color: #20794D;">"model05"</span>))</span>
<span id="cb53-4"></span>
<span id="cb53-5">metrics <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb53-6">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> model)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb53-7">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> mean)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb53-8">  <span class="fu" style="color: #4758AB;">geom_errorbar</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">ymin =</span> mean <span class="sc" style="color: #5E5E5E;">-</span> std_err,</span>
<span id="cb53-9">                    <span class="at" style="color: #657422;">ymax =</span> mean <span class="sc" style="color: #5E5E5E;">+</span> std_err)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb53-10">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>.metric, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free_y"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-26-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>The first simple linear model was the best as measured by both metrics! Let’s see if we can improve with some normalization of the continuous vars.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1"><span class="fu" style="color: #4758AB;">rm</span>(mod03, mod04, rec03, rec04, rs03, rs04, wf03, wf04)</span>
<span id="cb54-2"></span>
<span id="cb54-3">mod06 <span class="ot" style="color: #003B4F;">&lt;-</span> mod05</span>
<span id="cb54-4"></span>
<span id="cb54-5">rec06 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb54-6">  <span class="fu" style="color: #4758AB;">recipe</span>(price <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb54-7">  <span class="fu" style="color: #4758AB;">step_other</span>(cut, color, clarity) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb54-8">  bestNormalize<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">step_best_normalize</span>(<span class="fu" style="color: #4758AB;">all_numeric_predictors</span>()) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb54-9">  <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal_predictors</span>())</span>
<span id="cb54-10"></span>
<span id="cb54-11">wf06 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb54-12">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb54-13">  <span class="fu" style="color: #4758AB;">add_model</span>(mod06) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb54-14">  <span class="fu" style="color: #4758AB;">add_recipe</span>(rec06)</span>
<span id="cb54-15"></span>
<span id="cb54-16">foreach<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">registerDoSEQ</span>()</span>
<span id="cb54-17"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">101112</span>)</span>
<span id="cb54-18">rs06 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb54-19">  <span class="fu" style="color: #4758AB;">fit_resamples</span>(</span>
<span id="cb54-20">    wf06,</span>
<span id="cb54-21">    diamonds_folds,</span>
<span id="cb54-22">    <span class="at" style="color: #657422;">control =</span> ctrl_preds</span>
<span id="cb54-23">  )</span>
<span id="cb54-24"></span>
<span id="cb54-25"><span class="fu" style="color: #4758AB;">collect_metrics</span>(rs06)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 6
  .metric .estimator  mean     n std_err .config             
  &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               
1 rmse    standard   0.127    10 0.00115 Preprocessor1_Model1
2 rsq     standard   0.916    10 0.00136 Preprocessor1_Model1</code></pre>
</div>
</div>
<p>Well - that was quite a bit for no improvement! I guess that normalizing the continuous vars in this case isn’t helping. Moving on to adding some interactions - first let’s explore potential interactions a bit.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1">metrics <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb56-2">  metrics <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb56-3">  <span class="fu" style="color: #4758AB;">bind_rows</span>(<span class="fu" style="color: #4758AB;">collect_metrics</span>(rs06) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">model =</span> <span class="st" style="color: #20794D;">"model06"</span>))</span>
<span id="cb56-4"></span>
<span id="cb56-5">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb56-6">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> carat,</span>
<span id="cb56-7">             <span class="at" style="color: #657422;">y =</span> price,</span>
<span id="cb56-8">             <span class="at" style="color: #657422;">color =</span> cut)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb56-9">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb56-10">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"lm"</span>, <span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-28-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb57-1"><span class="fu" style="color: #4758AB;">library</span>(splines)</span>
<span id="cb57-2">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb57-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> carat,</span>
<span id="cb57-4">             <span class="at" style="color: #657422;">y =</span> price,</span>
<span id="cb57-5">             <span class="at" style="color: #657422;">color =</span> cut)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb57-6">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb57-7">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> lm,</span>
<span id="cb57-8">              <span class="at" style="color: #657422;">formula =</span> y <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">ns</span>(x, <span class="at" style="color: #657422;">df =</span> <span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb57-9">              <span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb57-10">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>cut, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-29-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>5 spline terms might not be sufficient here - capturing the lower bound well but <em>really</em> not doing well with the higher carat diamonds.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb58-1">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb58-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> carat,</span>
<span id="cb58-3">             <span class="at" style="color: #657422;">y =</span> price,</span>
<span id="cb58-4">             <span class="at" style="color: #657422;">color =</span> cut)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb58-5">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb58-6">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> lm,</span>
<span id="cb58-7">              <span class="at" style="color: #657422;">formula =</span> y <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">ns</span>(x, <span class="at" style="color: #657422;">df =</span> <span class="dv" style="color: #AD0000;">10</span>),</span>
<span id="cb58-8">              <span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb58-9">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>cut, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-30-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Hmmmm, 10 might be too many. It looks lie we’ll just lose a bit of confidence for the Premium &amp; Very Good diamonds at higher carats. Relative to the total number, I’m not too concerned.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb59-1">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb59-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> carat,</span>
<span id="cb59-3">             <span class="at" style="color: #657422;">y =</span> price,</span>
<span id="cb59-4">             <span class="at" style="color: #657422;">color =</span> cut)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb59-5">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb59-6">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> lm,</span>
<span id="cb59-7">              <span class="at" style="color: #657422;">formula =</span> y <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">ns</span>(x, <span class="at" style="color: #657422;">df =</span> <span class="dv" style="color: #AD0000;">7</span>),</span>
<span id="cb59-8">              <span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb59-9">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>cut, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-31-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>7 terms feels like the best we’re going to do here - I think this is tuneable, but we’ll leave as is (now &amp; in the final model).</p>
<p>Next, we’ll look at creating interactions between the <code>color</code> and <code>carat</code> variables:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb60-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> carat, </span>
<span id="cb60-3">             <span class="at" style="color: #657422;">y =</span> price,</span>
<span id="cb60-4">             <span class="at" style="color: #657422;">color =</span> color)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb60-5">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb60-6">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> lm, </span>
<span id="cb60-7">              <span class="at" style="color: #657422;">formula =</span> y <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">ns</span>(x, <span class="at" style="color: #657422;">df =</span> <span class="dv" style="color: #AD0000;">15</span>),</span>
<span id="cb60-8">              <span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb60-9">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>color)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-32-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Adding interactive spline terms with <code>df</code> of 15 seems to add some useful information!</p>
<p>We have three shape parameters, <code>x</code>, <code>y</code>, and <code>z</code> - I wonder if creating a stand-in for volume by multiplying them all together will provide any useful information?</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb61-1">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb61-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">volume_param =</span> x <span class="sc" style="color: #5E5E5E;">*</span> y <span class="sc" style="color: #5E5E5E;">*</span> z) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb61-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> volume_param,</span>
<span id="cb61-4">             <span class="at" style="color: #657422;">y =</span> price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb61-5">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-33-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Ooh, looks like we’re getting some good info here, but we may want to use <code>log10</code> to scale this back.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb62-1">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb62-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">volume_param =</span> <span class="fu" style="color: #4758AB;">log10</span>(x <span class="sc" style="color: #5E5E5E;">*</span> y <span class="sc" style="color: #5E5E5E;">*</span> z)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb62-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> volume_param, </span>
<span id="cb62-4">             <span class="at" style="color: #657422;">y =</span> price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb62-5">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-34-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Let’s see if this ought to interact with any other paramaters:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb63-1">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb63-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">volume_param =</span> <span class="fu" style="color: #4758AB;">log10</span>(x <span class="sc" style="color: #5E5E5E;">*</span> y <span class="sc" style="color: #5E5E5E;">*</span> z)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb63-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> volume_param, </span>
<span id="cb63-4">             <span class="at" style="color: #657422;">y =</span> price,</span>
<span id="cb63-5">             <span class="at" style="color: #657422;">color =</span> cut)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb63-6">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb63-7">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"lm"</span>, <span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-35-1.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb64-1">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb64-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">volume_param =</span> <span class="fu" style="color: #4758AB;">log10</span>(x <span class="sc" style="color: #5E5E5E;">*</span> y <span class="sc" style="color: #5E5E5E;">*</span> z)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb64-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> volume_param, </span>
<span id="cb64-4">             <span class="at" style="color: #657422;">y =</span> price,</span>
<span id="cb64-5">             <span class="at" style="color: #657422;">color =</span> color)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb64-6">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb64-7">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"lm"</span>, <span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-35-2.png" class="img-fluid" width="2100"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb65-1">diamonds_train <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb65-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">volume_param =</span> <span class="fu" style="color: #4758AB;">log10</span>(x <span class="sc" style="color: #5E5E5E;">*</span> y <span class="sc" style="color: #5E5E5E;">*</span> z)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb65-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> volume_param, </span>
<span id="cb65-4">             <span class="at" style="color: #657422;">y =</span> price,</span>
<span id="cb65-5">             <span class="at" style="color: #657422;">color =</span> clarity)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb65-6">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb65-7">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"lm"</span>, <span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-35-3.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Hmm, it doesn’t really look like we’re capturing too great of interactions, so I’ll leave out for now. It looks like the <em>size</em> of the rock is more important than anything else! I could continue to dig further, but I’ll stop there. I’m likely getting diminishing returns, &amp; I’d like to get back into modeling!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb66-1">mod07 <span class="ot" style="color: #003B4F;">&lt;-</span> mod06</span>
<span id="cb66-2"></span>
<span id="cb66-3">rec07 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb66-4">  <span class="fu" style="color: #4758AB;">recipe</span>(price <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb66-5">  <span class="fu" style="color: #4758AB;">step_other</span>(cut, color, clarity) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb66-6">  <span class="fu" style="color: #4758AB;">step_dummy</span>(<span class="fu" style="color: #4758AB;">all_nominal_predictors</span>()) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb66-7">  <span class="fu" style="color: #4758AB;">step_interact</span>(<span class="sc" style="color: #5E5E5E;">~</span>carat<span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"cut_"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb66-8">  <span class="fu" style="color: #4758AB;">step_interact</span>(<span class="sc" style="color: #5E5E5E;">~</span>carat<span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"color_"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb66-9">  <span class="fu" style="color: #4758AB;">step_mutate_at</span>(<span class="fu" style="color: #4758AB;">c</span>(x, y, z),</span>
<span id="cb66-10">                 <span class="at" style="color: #657422;">fn =</span> <span class="sc" style="color: #5E5E5E;">~</span><span class="fu" style="color: #4758AB;">if_else</span>(.x <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="fu" style="color: #4758AB;">mean</span>(.x), .x)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb66-11">  <span class="fu" style="color: #4758AB;">step_mutate</span>(<span class="at" style="color: #657422;">volume_param =</span> <span class="fu" style="color: #4758AB;">log10</span>(x <span class="sc" style="color: #5E5E5E;">*</span> y <span class="sc" style="color: #5E5E5E;">*</span> z)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb66-12">  <span class="fu" style="color: #4758AB;">step_ns</span>(<span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"carat_x_cut"</span>), <span class="at" style="color: #657422;">deg_free =</span> <span class="dv" style="color: #AD0000;">7</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb66-13">  <span class="fu" style="color: #4758AB;">step_ns</span>(<span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"carat_x_color"</span>), <span class="at" style="color: #657422;">deg_free =</span> <span class="dv" style="color: #AD0000;">15</span>) </span>
<span id="cb66-14"></span>
<span id="cb66-15">rec07</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Recipe

Inputs:

      role #variables
   outcome          1
 predictor          9

Operations:

Collapsing factor levels for cut, color, clarity
Dummy variables from all_nominal_predictors()
Interactions with carat:starts_with("cut_")
Interactions with carat:starts_with("color_")
Variable mutation for c(x, y, z)
Variable mutation for log10(x * y * z)
Natural splines on starts_with("carat_x_cut")
Natural splines on starts_with("carat_x_color")</code></pre>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb68-1">wf07 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb68-2">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb68-3">  <span class="fu" style="color: #4758AB;">add_model</span>(mod07) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb68-4">  <span class="fu" style="color: #4758AB;">add_recipe</span>(rec07)</span>
<span id="cb68-5"></span>
<span id="cb68-6">doParallel<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">registerDoParallel</span>()</span>
<span id="cb68-7"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">9876</span>)</span>
<span id="cb68-8">rs07 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb68-9">  <span class="fu" style="color: #4758AB;">fit_resamples</span>(</span>
<span id="cb68-10">    wf07,</span>
<span id="cb68-11">    diamonds_folds,</span>
<span id="cb68-12">    <span class="at" style="color: #657422;">control =</span> ctrl_preds</span>
<span id="cb68-13">  )</span></code></pre></div>
</details>
</div>
<p>This is definitely going to <em>way</em> overfit our data:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb69-1">rs07 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb69-2">  <span class="fu" style="color: #4758AB;">collect_metrics</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 6
  .metric .estimator   mean     n std_err .config             
  &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               
1 rmse    standard   0.0750    10 0.00377 Preprocessor1_Model1
2 rsq     standard   0.970     10 0.00342 Preprocessor1_Model1</code></pre>
</div>
</div>
<p>Well we (finally) made a modes improvement! Let’s see how the predictions/residuals plot:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb71-1">rs07 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb71-2">  <span class="fu" style="color: #4758AB;">augment</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb71-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> price,</span>
<span id="cb71-4">             <span class="at" style="color: #657422;">y =</span> .pred)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb71-5">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb71-6">  <span class="fu" style="color: #4758AB;">geom_abline</span>(<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb71-7">              <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>,</span>
<span id="cb71-8">              <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">0.5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-38-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>That’s pretty good! We do have one value that’s <strong><em>way</em></strong> off, so let’s see if regulization can help. This will require setting a new baseline model, and we’ll tune our way to the best regularizaion parameters.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb72-1">metrics <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb72-2">  rs07 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb72-3">  <span class="fu" style="color: #4758AB;">collect_metrics</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb72-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">model =</span> <span class="st" style="color: #20794D;">"model07"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb72-5">  <span class="fu" style="color: #4758AB;">bind_rows</span>(metrics)</span>
<span id="cb72-6"></span>
<span id="cb72-7"><span class="co" style="color: #5E5E5E;"># add normalization step</span></span>
<span id="cb72-8">rec08 <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb72-9">  rec07 <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb72-10">  <span class="fu" style="color: #4758AB;">step_zv</span>(<span class="fu" style="color: #4758AB;">all_numeric_predictors</span>()) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb72-11">  <span class="fu" style="color: #4758AB;">step_normalize</span>(<span class="fu" style="color: #4758AB;">all_numeric_predictors</span>(),</span>
<span id="cb72-12">                 <span class="sc" style="color: #5E5E5E;">-</span>cut_Ideal, <span class="sc" style="color: #5E5E5E;">-</span>cut_Premium, <span class="sc" style="color: #5E5E5E;">-</span>cut_Very.Good, <span class="sc" style="color: #5E5E5E;">-</span>cut_other,</span>
<span id="cb72-13">                 <span class="sc" style="color: #5E5E5E;">-</span>color_E, <span class="sc" style="color: #5E5E5E;">-</span>color_F, <span class="sc" style="color: #5E5E5E;">-</span>color_G, <span class="sc" style="color: #5E5E5E;">-</span>color_H, <span class="sc" style="color: #5E5E5E;">-</span>color_I, <span class="sc" style="color: #5E5E5E;">-</span>color_J,</span>
<span id="cb72-14">                 <span class="sc" style="color: #5E5E5E;">-</span>clarity_SI2, <span class="sc" style="color: #5E5E5E;">-</span>clarity_VS1, <span class="sc" style="color: #5E5E5E;">-</span>clarity_VS2, <span class="sc" style="color: #5E5E5E;">-</span>clarity_VVS1, <span class="sc" style="color: #5E5E5E;">-</span>clarity_VVS2, <span class="sc" style="color: #5E5E5E;">-</span>clarity_other)</span>
<span id="cb72-15"></span>
<span id="cb72-16"><span class="fu" style="color: #4758AB;">rm</span>(mod05, mod06, mod07, rec05, rec06, rec07, wf05, wf06, wf07, rs05, rs06, rs07)</span>
<span id="cb72-17"></span>
<span id="cb72-18">mod08 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb72-19">  <span class="fu" style="color: #4758AB;">linear_reg</span>(<span class="at" style="color: #657422;">penalty =</span> <span class="fu" style="color: #4758AB;">tune</span>(), <span class="at" style="color: #657422;">mixture =</span> <span class="fu" style="color: #4758AB;">tune</span>()) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb72-20">  <span class="fu" style="color: #4758AB;">set_engine</span>(<span class="st" style="color: #20794D;">"glmnet"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb72-21">  <span class="fu" style="color: #4758AB;">set_mode</span>(<span class="st" style="color: #20794D;">"regression"</span>) </span>
<span id="cb72-22"></span>
<span id="cb72-23">wf08 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb72-24">  <span class="fu" style="color: #4758AB;">workflow</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb72-25">  <span class="fu" style="color: #4758AB;">add_model</span>(mod08) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb72-26">  <span class="fu" style="color: #4758AB;">add_recipe</span>(rec08)</span>
<span id="cb72-27"></span>
<span id="cb72-28">diamonds_grid <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb72-29">  <span class="fu" style="color: #4758AB;">grid_regular</span>(<span class="fu" style="color: #4758AB;">penalty</span>(), <span class="fu" style="color: #4758AB;">mixture</span>(), <span class="at" style="color: #657422;">levels =</span> <span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb72-30"></span>
<span id="cb72-31">doParallel<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">registerDoParallel</span>()</span>
<span id="cb72-32"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">5831</span>)</span>
<span id="cb72-33">rs08 <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb72-34">  <span class="fu" style="color: #4758AB;">tune_grid</span>(</span>
<span id="cb72-35">    wf08,</span>
<span id="cb72-36">    <span class="at" style="color: #657422;">resamples =</span> diamonds_folds,</span>
<span id="cb72-37">    <span class="at" style="color: #657422;">control =</span> ctrl_preds,</span>
<span id="cb72-38">    <span class="at" style="color: #657422;">grid =</span> diamonds_grid</span>
<span id="cb72-39">  )</span></code></pre></div>
</details>
</div>
<p>Some notes but let’s explore our results…</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb73-1">rs08 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb73-2">  <span class="fu" style="color: #4758AB;">collect_metrics</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb73-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> penalty,</span>
<span id="cb73-4">             <span class="at" style="color: #657422;">y =</span> mean,</span>
<span id="cb73-5">             <span class="at" style="color: #657422;">color =</span> <span class="fu" style="color: #4758AB;">as.character</span>(mixture))) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb73-6">  <span class="fu" style="color: #4758AB;">geom_point</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb73-7">  <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.75</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb73-8">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>.metric, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb73-9">  <span class="fu" style="color: #4758AB;">scale_x_log10</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-40-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>Looks like we were performing pretty well with the unregularized model, oddly enough! Let’s select the best and finalize our workflow.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb74-1">best_metrics <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb74-2">  rs08 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb74-3">  <span class="fu" style="color: #4758AB;">select_best</span>(<span class="st" style="color: #20794D;">"rmse"</span>)</span>
<span id="cb74-4"></span>
<span id="cb74-5">wf_final <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb74-6">  <span class="fu" style="color: #4758AB;">finalize_workflow</span>(wf08, best_metrics)</span>
<span id="cb74-7"></span>
<span id="cb74-8"><span class="fu" style="color: #4758AB;">rm</span>(mod08, rec07, rec08, rs08, wf08)</span>
<span id="cb74-9"></span>
<span id="cb74-10"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">333</span>)</span>
<span id="cb74-11">final_fit <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb74-12">  wf_final <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb74-13">  <span class="fu" style="color: #4758AB;">fit</span>(diamonds_train)</span>
<span id="cb74-14"></span>
<span id="cb74-15">final_fit <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb74-16">  <span class="fu" style="color: #4758AB;">predict</span>(diamonds_test) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb74-17">  <span class="fu" style="color: #4758AB;">bind_cols</span>(diamonds_test) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb74-18">  <span class="fu" style="color: #4758AB;">select</span>(price, .pred) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb74-19">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> price, </span>
<span id="cb74-20">             <span class="at" style="color: #657422;">y =</span> .pred)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb74-21">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb74-22">  <span class="fu" style="color: #4758AB;">geom_abline</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>,</span>
<span id="cb74-23">              <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>,</span>
<span id="cb74-24">              <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">0.5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-41-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>What are the most important variables in this regularized model?</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb75-1">final_fit <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb75-2">  <span class="fu" style="color: #4758AB;">pull_workflow_fit</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb75-3">  <span class="fu" style="color: #4758AB;">vi</span>(<span class="at" style="color: #657422;">lambda =</span> best_metrics<span class="sc" style="color: #5E5E5E;">$</span>penalty) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb75-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Variable =</span> <span class="fu" style="color: #4758AB;">fct_reorder</span>(Variable, Importance)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb75-5">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Variable,</span>
<span id="cb75-6">             <span class="at" style="color: #657422;">y =</span> Importance, </span>
<span id="cb75-7">             <span class="at" style="color: #657422;">fill =</span> Sign)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb75-8">  <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb75-9">  <span class="fu" style="color: #4758AB;">coord_flip</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-42-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>As expected, most of our terms get regularized away, which is what we want! Our chart is a little unreadable; let’s plot just the most important variables in a few ways:</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb76-1">final_fit <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb76-2">  <span class="fu" style="color: #4758AB;">pull_workflow_fit</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb76-3">  <span class="fu" style="color: #4758AB;">vi</span>(<span class="at" style="color: #657422;">lambda =</span> best_metrics<span class="sc" style="color: #5E5E5E;">$</span>penalty) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb76-4">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(Importance)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb76-5">  <span class="fu" style="color: #4758AB;">slice_head</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">10</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb76-6">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Variable =</span> <span class="fu" style="color: #4758AB;">fct_reorder</span>(Variable, Importance)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb76-7">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Variable,</span>
<span id="cb76-8">             <span class="at" style="color: #657422;">y =</span> Importance,</span>
<span id="cb76-9">             <span class="at" style="color: #657422;">fill =</span> Sign)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb76-10">  <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb76-11">  <span class="fu" style="color: #4758AB;">coord_flip</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-43-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb77-1">final_fit <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb77-2">  <span class="fu" style="color: #4758AB;">pull_workflow_fit</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb77-3">  <span class="fu" style="color: #4758AB;">vi</span>(<span class="at" style="color: #657422;">lambda =</span> best_metrics<span class="sc" style="color: #5E5E5E;">$</span>penalty) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb77-4">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(Importance)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb77-5">  <span class="fu" style="color: #4758AB;">slice_head</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">10</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb77-6">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Importance =</span> <span class="fu" style="color: #4758AB;">if_else</span>(Sign <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"NEG"</span>, <span class="sc" style="color: #5E5E5E;">-</span>Importance, Importance),</span>
<span id="cb77-7">         <span class="at" style="color: #657422;">Variable =</span> <span class="fu" style="color: #4758AB;">fct_reorder</span>(Variable, Importance)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb77-8">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Variable,</span>
<span id="cb77-9">             <span class="at" style="color: #657422;">y =</span> Importance,</span>
<span id="cb77-10">             <span class="at" style="color: #657422;">fill =</span> Sign)) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb77-11">  <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb77-12">  <span class="fu" style="color: #4758AB;">coord_flip</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-44-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>And look at that! Our most important variable was one that came from feature engineering! The size of the rock had the biggest impact on price.</p>
<p>We’ve gone through a lot of steps, so it may be good to look back on what was done:</p>
<ul>
<li>Explored our dataset via some simple exploratory data analysis;</li>
<li>Fit a simple linear model to predict the log-transform of price;</li>
<li>Attempted (and failed) to improve upon the simple model with fancier normalization and resampling techniques;</li>
<li>Explored the dataset further to find meaningful interactions and potential new features;</li>
<li>Fit a new model with feature engineering;</li>
<li>Tuned regularization parameters on our model with feature engineering to arrive at the final model.</li>
</ul>
<p>Our models’ performances, ranked from best to worst, show that the final tuned model did indeed perform the best on the test dataset!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb78-1">final_preds <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb78-2">  final_fit <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-3">  <span class="fu" style="color: #4758AB;">predict</span>(diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-4">  <span class="fu" style="color: #4758AB;">bind_cols</span>(diamonds_train) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-5">  <span class="fu" style="color: #4758AB;">select</span>(price, .pred)</span>
<span id="cb78-6"></span>
<span id="cb78-7"><span class="fu" style="color: #4758AB;">bind_rows</span>(final_preds <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">rmse</span>(price, .pred),</span>
<span id="cb78-8">          final_preds <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">rsq</span>(price, .pred)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-9">  <span class="fu" style="color: #4758AB;">rename</span>(<span class="at" style="color: #657422;">mean =</span> .estimate) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-10">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>.estimator) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-11">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">model =</span> <span class="st" style="color: #20794D;">"model_final"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-12">  <span class="fu" style="color: #4758AB;">bind_rows</span>(metrics <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(.metric, mean, model)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-13">  <span class="fu" style="color: #4758AB;">pivot_wider</span>(<span class="at" style="color: #657422;">names_from =</span> .metric,</span>
<span id="cb78-14">              <span class="at" style="color: #657422;">values_from =</span> mean) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-15">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">model =</span> <span class="fu" style="color: #4758AB;">fct_reorder</span>(model, <span class="fu" style="color: #4758AB;">desc</span>(rmse))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-16">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(rmse<span class="sc" style="color: #5E5E5E;">:</span>rsq,</span>
<span id="cb78-17">               <span class="at" style="color: #657422;">names_to =</span> <span class="st" style="color: #20794D;">"metric"</span>,</span>
<span id="cb78-18">               <span class="at" style="color: #657422;">values_to =</span> <span class="st" style="color: #20794D;">"value"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb78-19">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> model,</span>
<span id="cb78-20">             <span class="at" style="color: #657422;">y =</span> value)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb78-21">  <span class="fu" style="color: #4758AB;">geom_point</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb78-22">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>metric, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb78-23">  <span class="fu" style="color: #4758AB;">coord_flip</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index_files/figure-html/unnamed-chunk-45-1.png" class="img-fluid" width="2100"></p>
</div>
</div>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2021,
  author = {Mark Rieke},
  title = {Diamonds Are {Forever}},
  date = {2021-11-14},
  url = {https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2021" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2021. <span>“Diamonds Are Forever.”</span> November 14,
2021. <a href="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset">https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset</a>.
</div></div></section></div> ]]></description>
  <category>tidymodels</category>
  <guid>https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/index.html</guid>
  <pubDate>Sun, 14 Nov 2021 06:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2021-11-14-diamonds-are-forever-feature-engineering-with-the-diamonds-dataset/featured.png" medium="image" type="image/png" height="90" width="144"/>
</item>
<item>
  <title>Election Night: Some Closing Thoughts on the VA Governor Race</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2021-11-02-election-night-some-closing-thoughts-on-the-va-governor-race/index.html</link>
  <description><![CDATA[ 




<p>A few weeks ago I had <a href="https://www.thedatadiary.net/blog/2021-10-19-polling-average-of-the-va-governor-s-race-using-purrr-map-functions/">written about the VA Governor’s race</a> before going on vacation - in that time it seems as though Terry McAuliffe’s campaign had lost a lot of steam and Youngkin made up a lot of ground in the final weeks of the campaign. At the time of this writing, it seems overwhelmingly likely that Glenn Youngkin will become the next governor of Virginia. To avoid some of the <a href="https://twitter.com/rp_griffin/status/1455696452915802122">galaxy-brain takes that will inevitabely wind up twitter</a>, I thought I’d distract myself by following up on my previous post.</p>
<p>Firstly, I should share the updated polling average. A few weeks ago, McAullife appeared to have a sizeable lead in the polls:</p>
<p></p><div id="tweet-25877"></div><script>tweet={"url":"https:\/\/twitter.com\/markjrieke\/status\/1444454926399254535","author_name":"Mark Rieke","author_url":"https:\/\/twitter.com\/markjrieke","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EFiveThirtyEight&#39;s poll tracker for the VA governor race (\u003Ca href=\"https:\/\/t.co\/HKVw7RcsJN\"\u003Ehttps:\/\/t.co\/HKVw7RcsJN\u003C\/a\u003E) shows the moving averages - as a weekend coding project, I revamped with a weighted avg., 95% CI, and win probability based on an election day distribution\uD83D\uDCC8 \u003Ca href=\"https:\/\/t.co\/hM6vzLUZnM\"\u003Epic.twitter.com\/hM6vzLUZnM\u003C\/a\u003E\u003C\/p\u003E&mdash; Mark Rieke (@markjrieke) \u003Ca href=\"https:\/\/twitter.com\/markjrieke\/status\/1444454926399254535?ref_src=twsrc%5Etfw\"\u003EOctober 3, 2021\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-25877").innerHTML = tweet["html"];</script><p></p>
<p>However, as of election day, the race had significantly tightened to effectively a coin-toss:</p>
<p></p><div id="tweet-46263"></div><script>tweet={"url":"https:\/\/twitter.com\/markjrieke\/status\/1455164731749175304","author_name":"Mark Rieke","author_url":"https:\/\/twitter.com\/markjrieke","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EFinal update - p_win ~ 55% McAuliffe; again, the win probability is just the portion of the polling avg. distribution above 50% for each candidate. For *actual* models, go check out the work by \u003Ca href=\"https:\/\/twitter.com\/lxeagle17?ref_src=twsrc%5Etfw\"\u003E@lxeagle17\u003C\/a\u003E\/\u003Ca href=\"https:\/\/twitter.com\/Thorongil16?ref_src=twsrc%5Etfw\"\u003E@Thorongil16\u003C\/a\u003E or \u003Ca href=\"https:\/\/twitter.com\/jhkersting?ref_src=twsrc%5Etfw\"\u003E@jhkersting\u003C\/a\u003E, among others \u003Ca href=\"https:\/\/t.co\/W9bDf1OumZ\"\u003Epic.twitter.com\/W9bDf1OumZ\u003C\/a\u003E\u003C\/p\u003E&mdash; Mark Rieke (@markjrieke) \u003Ca href=\"https:\/\/twitter.com\/markjrieke\/status\/1455164731749175304?ref_src=twsrc%5Etfw\"\u003ENovember 1, 2021\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-46263").innerHTML = tweet["html"];</script><p></p>
<p>As I mention in the above tweet, the win probability isn’t a true forecast, just the portion of each candidate’s election day distribution <em>above 50%</em>. That being said, actual forecasts similarly had the race down to a near 50-50 split as of this morning:</p>
<p></p><div id="tweet-44175"></div><script>tweet={"url":"https:\/\/twitter.com\/gelliottmorris\/status\/1454130028149620737","author_name":"G. Elliott Morris","author_url":"https:\/\/twitter.com\/gelliottmorris","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003ESpecial for Twitter: Updated VA polling trends with the new Fox and Post\/GMU polls \u003Ca href=\"https:\/\/t.co\/hLNa3pFCpR\"\u003Ehttps:\/\/t.co\/hLNa3pFCpR\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/6cz0JXa0xm\"\u003Epic.twitter.com\/6cz0JXa0xm\u003C\/a\u003E\u003C\/p\u003E&mdash; G. Elliott Morris (@gelliottmorris) \u003Ca href=\"https:\/\/twitter.com\/gelliottmorris\/status\/1454130028149620737?ref_src=twsrc%5Etfw\"\u003EOctober 29, 2021\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-44175").innerHTML = tweet["html"];</script><p></p>
<p></p><div id="tweet-50356"></div><script>tweet={"url":"https:\/\/twitter.com\/jhkersting\/status\/1455545666999042056","author_name":"Jack Kersting","author_url":"https:\/\/twitter.com\/jhkersting","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/hashtag\/FINAL?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#FINAL\u003C\/a\u003E Virginia Gov. Projection.\u003Ca href=\"https:\/\/twitter.com\/GlennYoungkin?ref_src=twsrc%5Etfw\"\u003E@GlennYoungkin\u003C\/a\u003E is ever so slightly favored in this tossup for the governorship.\u003Cbr\u003E\u003Cbr\u003EFull Projection&gt;&gt;\u003Ca href=\"https:\/\/t.co\/PcM2qSjUYK\"\u003Ehttps:\/\/t.co\/PcM2qSjUYK\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/NGCirjkkG4\"\u003Epic.twitter.com\/NGCirjkkG4\u003C\/a\u003E\u003C\/p\u003E&mdash; Jack Kersting (@jhkersting) \u003Ca href=\"https:\/\/twitter.com\/jhkersting\/status\/1455545666999042056?ref_src=twsrc%5Etfw\"\u003ENovember 2, 2021\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-50356").innerHTML = tweet["html"];</script><p></p>
<p>Even the model most confident in McAuliffe built by <a href="https://twitter.com/lxeagle17">Lakshya Jain</a> and <a href="https://twitter.com/Thorongil16">Thorongil</a> had dropped McAuliffe’s win probability from ~85% to 67% over the course of a few weeks:</p>
<p></p><div id="tweet-15485"></div><script>tweet={"url":"https:\/\/twitter.com\/lxeagle17\/status\/1455544487149592576","author_name":"Lakshya Jain","author_url":"https:\/\/twitter.com\/lxeagle17","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\uD83D\uDEA8FINAL \u003Ca href=\"https:\/\/twitter.com\/hashtag\/VAGov?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#VAGov\u003C\/a\u003E FORECAST\uD83D\uDEA8\u003Cbr\u003E\u003Cbr\u003EAt the end of a long campaign, here&#39;s where the model made by me and \u003Ca href=\"https:\/\/twitter.com\/Thorongil16?ref_src=twsrc%5Etfw\"\u003E@Thorongil16\u003C\/a\u003E stands. The race is rated as Lean Democratic, with a forecasted margin of D+3.6 and a win probability of 67%. An interactive map is over at \u003Ca href=\"https:\/\/t.co\/Kmvj6sRElC\"\u003Ehttps:\/\/t.co\/Kmvj6sRElC\u003C\/a\u003E. \u003Ca href=\"https:\/\/t.co\/kuaJc82HML\"\u003Epic.twitter.com\/kuaJc82HML\u003C\/a\u003E\u003C\/p\u003E&mdash; Lakshya Jain (@lxeagle17) \u003Ca href=\"https:\/\/twitter.com\/lxeagle17\/status\/1455544487149592576?ref_src=twsrc%5Etfw\"\u003ENovember 2, 2021\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-15485").innerHTML = tweet["html"];</script><p></p>
<p>While I definitely plan on utilizing a more scientific poll-weighting methodology in the future, I do find it interesting that even a simple averaging method can produce relatively accurate results in line with the majority of other forecasters.</p>
<p>Regarding post-hoc analysis of <em>why</em> McAuliffe lost, I won’t dredge up any of my own (partially because it’d be irresponsible &amp; pundit-y to do so without referencing any data and partially because it’s getting late &amp; I’m a bit tired), but I’ll point out a few tweets from <a href="https://twitter.com/Nate_Cohn">Nate Cohn</a> that show that the results appear to show a near uniform shift across precincts and different voting groups. This would suggest that McAuliffe’s loss is tied more closely to the national environment, rather than shifts amongst specific groups/counties.</p>
<p></p><div id="tweet-83781"></div><script>tweet={"url":"https:\/\/twitter.com\/Nate_Cohn\/status\/1455693099062153217","author_name":"Nate Cohn","author_url":"https:\/\/twitter.com\/Nate_Cohn","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EUpdate at nearly 1500 precincts: Youngkin is still on track for victory, running a ahead of what he needs across basically every dimension worth looking at.\u003Cbr\u003EBut it&#39;s worth noting just how close things are to &#39;expectations,&#39; which is simply shifting the 2020 result to the right \u003Ca href=\"https:\/\/t.co\/Mbe3pg7NFB\"\u003Epic.twitter.com\/Mbe3pg7NFB\u003C\/a\u003E\u003C\/p\u003E&mdash; Nate Cohn (@Nate_Cohn) \u003Ca href=\"https:\/\/twitter.com\/Nate_Cohn\/status\/1455693099062153217?ref_src=twsrc%5Etfw\"\u003ENovember 3, 2021\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-83781").innerHTML = tweet["html"];</script><p></p>
<p></p><div id="tweet-75300"></div><script>tweet={"url":"https:\/\/twitter.com\/Nate_Cohn\/status\/1455717564772986884","author_name":"Nate Cohn","author_url":"https:\/\/twitter.com\/Nate_Cohn","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EAnd btw, if you&#39;re doing pundit things I&#39;d look at that red column. McAuliffe fell short of expectations--a more-or-less uniform shift--by basically the same amount, just about everywhere\u003C\/p\u003E&mdash; Nate Cohn (@Nate_Cohn) \u003Ca href=\"https:\/\/twitter.com\/Nate_Cohn\/status\/1455717564772986884?ref_src=twsrc%5Etfw\"\u003ENovember 3, 2021\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-75300").innerHTML = tweet["html"];</script><p></p>
<p>This won’t stop the networks from ascribing the win/loss to very specific campaign issues (I’ve already seen quite a few folks ascribe Youngkin’s win to education, race, suburban-reversion, etc., without any evidence to back up such claims). Until there are deep dives into data regarding the election, I’d treat any comments from pundits with a hefty grain of salt.</p>
<section id="some-closing-thoughts" class="level3">
<h3 class="anchored" data-anchor-id="some-closing-thoughts">Some closing thoughts</h3>
<p>That’s all for me today! I’ll be back in a few weeks with some non-political content, looking at a machine learning model predicting the price of a diamond in the <a href="https://ggplot2.tidyverse.org/reference/diamonds.html">diamonds dataset</a>.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2021,
  author = {Mark Rieke},
  title = {Election {Night:} {Some} {Closing} {Thoughts} on the {VA}
    {Governor} {Race}},
  date = {2021-11-02},
  url = {https://www.thedatadiary.net/posts/2021-11-02-election-night-some-closing-thoughts-on-the-va-governor-race},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2021" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2021. <span>“Election Night: Some Closing Thoughts on the VA
Governor Race.”</span> November 2, 2021. <a href="https://www.thedatadiary.net/posts/2021-11-02-election-night-some-closing-thoughts-on-the-va-governor-race">https://www.thedatadiary.net/posts/2021-11-02-election-night-some-closing-thoughts-on-the-va-governor-race</a>.
</div></div></section></div> ]]></description>
  <category>politics</category>
  <guid>https://www.thedatadiary.net/posts/2021-11-02-election-night-some-closing-thoughts-on-the-va-governor-race/index.html</guid>
  <pubDate>Tue, 02 Nov 2021 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2021-11-02-election-night-some-closing-thoughts-on-the-va-governor-race/featured.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Polling Average of the VA Governor’s Race using purrr::map functions</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2021-10-19-polling-average-of-the-va-governor-s-race-using-purrr-map-functions/index.html</link>
  <description><![CDATA[ 




<p>Rolling poll averages can be misleading in the absence of errorbars or an expected distribution of outcomes. FiveThirtyEight is currently <a href="https://projects.fivethirtyeight.com/polls/governor/virginia/">tracking polls of Virginia’s Governor race</a> slated for early November, and has kindly made their polls <a href="https://projects.fivethirtyeight.com/polls-page/data/governor_polls.csv">available to the public</a>. Their current polling average, however, looks to be a simple rolling average and doesn’t include a confidence interval. I’ve attempted to improve upon their tracker here by providing a weighted polling average and a 95% confidence interval.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-10-19-polling-average-of-the-va-governor-s-race-using-purrr-map-functions/pics/race_results_2021-10-19.png" class="img-fluid"></p>
<section id="how-this-works" class="level1">
<h1>How this works</h1>
<p>Since we’re only considering the top candidates from each party, we’ll look at each candidate’s two-party voteshare of each poll. To get the two-party voteshare, third party or other minor candidates are removed from each poll and each candidate’s percentage is recalculated as if they were the only two options on the ballot (in practice, this only removes a tiny amount of undecideds and third party voters). Then, the daily polling average is calculated by weighting each poll by sample size and recency. Using <a href="https://en.wikipedia.org/wiki/Bayes%27_theorem">Bayes’ theorem</a> and a weak <a href="https://en.wikipedia.org/wiki/Continuous_uniform_distribution">uniform prior</a>, we can use the same method recalculate the polling average and confidence interval for each day between today and the election. Because polls are weighted by recency, as we look further and further into the future, our confidence in the polls decreases and the confidence interval around the polling average fans out. Each candidate’s probability of winning is the portion of the portion of the projected election-day polling distribution in their favor, based on that day’s polling average.</p>
</section>
<section id="some-caveats-worth-noting" class="level1">
<h1>Some caveats worth noting</h1>
<p>This is an inherently flawed method, and it’s worth pointing out a few of the flaws and shortcuts I used:</p>
<section id="the-functions-used-to-weight-polls-are-nowhere-near-perfect." class="level3">
<h3 class="anchored" data-anchor-id="the-functions-used-to-weight-polls-are-nowhere-near-perfect.">The functions used to weight polls are nowhere near perfect.</h3>
<p>The original weighting functions (which I haven’t changed) were chosen somewhat arbitrarily. In hindsight, they’re probably placing too much emphasis on recency and the error bars ought to be larger. While I have received some <a href="https://community.rstudio.com/t/is-it-possible-to-tune-arbitrary-parameters-w-tidymodels/117998/2">advice on tuning arbitrary functions</a> as a part of a larger model, I haven’t implemented here. It’s more prudent to think of this as an over-confident polling aggregate, rather than any sort of model. For a true projection model, I’d recommend looking at <a href="https://projects.jhkforecasts.com/2022-midterms/virginia-governor">Jack Kersting’s website</a>.</p>
</section>
<section id="the-weighting-method-ignores-important-weighting-factors" class="level3">
<h3 class="anchored" data-anchor-id="the-weighting-method-ignores-important-weighting-factors">The weighting method ignores important weighting factors</h3>
<p>This weighting method is super simple and ignores common weighting factors, like pollster and survey methodology. Other less-common poll weighting methods, like accounting for partisan non-response bias and and how the pollster weights their results (notably, whether or not the pollster weights by education) were similarly ignored. There is definitely a <a href="https://gelliottmorris.substack.com/p/what-people-are-missing-about-the?justPublished=true">strong argument</a> for including these weighting factors, but for me, this exercise was more about learning to use <code>purrr::map()</code> and other related functions when <a href="https://github.com/markjrieke/thedatadiary/blob/main/2021.10.01-virginia_governors_race/scripts/va_poll_wrangle.R">writing the script for this plot</a>.</p>
</section>
<section id="some-pollsters-are-filtered-out-by-design" class="level3">
<h3 class="anchored" data-anchor-id="some-pollsters-are-filtered-out-by-design">Some pollsters are filtered out by design</h3>
<p>I debated this for quite some time, but decided to add a filter to remove polls conducted by <a href="https://www.rasmussenreports.com/">Rasmussen</a> and <a href="https://www.thetrafalgargroup.org/">Trafalgar</a>. Trafalgar is excluded from any of the <a href="https://docs.google.com/spreadsheets/d/e/2PACX-1vQ56fySJKLL18Lipu1_i3ID9JE06voJEz2EXm6JW4Vh11zmndyTwejMavuNntzIWLY0RyhA1UsVEen0/pub?gid=0&amp;single=true&amp;output=csv">Economist’s polling databases</a> for opaque yet clearly shoddy methodology and Rasmussen is <a href="https://twitter.com/Rasmussen_Poll/status/1448819612242616324?ref_src=twsrc%5Etfw%7Ctwcamp%5Eembeddedtimeline%7Ctwterm%5Eprofile%3ARasmussen_Poll%7Ctwgr%5EeyJ0ZndfZXhwZXJpbWVudHNfY29va2llX2V4cGlyYXRpb24iOnsiYnVja2V0IjoxMjA5NjAwLCJ2ZXJzaW9uIjpudWxsfSwidGZ3X2hvcml6b25fdHdlZXRfZW1iZWRfOTU1NSI6eyJidWNrZXQiOiJodGUiLCJ2ZXJzaW9uIjpudWxsfSwidGZ3X3NwYWNlX2NhcmQiOnsiYnVja2V0Ijoib2ZmIiwidmVyc2lvbiI6bnVsbH19%7Ctwcon%5Etimelinechrome&amp;ref_url=https%3A%2F%2Fwww.rasmussenreports.com%2F">clearly partisan</a>. Removing these from the average follows the general consensus on ET (though, to be transparent, ET does tend to slant far to the left). In future polling projects, I’d hope to develop some more robust methodology to programatically downweight problematic pollsters (how’s <em>that</em> for a tongue twister?), but for now I’m just going to exclude.</p>
</section>
</section>
<section id="final-thoughts-on-polling" class="level1">
<h1>Final thoughts on polling</h1>
<p>This methodology certainly has its flaws, but it <em>is</em> <a href="https://github.com/markjrieke/thedatadiary/blob/main/2021.10.01-virginia_governors_race/scripts/va_poll_wrangle.R">transparent</a>. I’ll continuously update this plot up until election day on my <a href="https://github.com/markjrieke/thedatadiary/tree/main/2021.10.01-virginia_governors_race">github</a>.</p>
</section>
<section id="some-programming-notes" class="level1">
<h1>Some programming notes</h1>
<p>I’ve finished migrating my site to Netlify! I had originally planned to make the switch from Squarespace sometime early in 2022, but motivation struck me during a relatively light work week and I was able to rebuild the site using <a href="https://bookdown.org/yihui/blogdown/">blogdown</a>. This allows for a lot more customization and control than was available with Squarespace, but the biggest upside is <em>definitely</em> the ease of sharing in-line code, here’s a quick example:</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># let's put together a plot from the diamonds dataset</span></span>
<span id="cb1-4">diamonds <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> carat,</span>
<span id="cb1-6">             <span class="at" style="color: #657422;">y =</span> price,</span>
<span id="cb1-7">             <span class="at" style="color: #657422;">color =</span> cut)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.1</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-10">  viridis<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">scale_color_viridis</span>(<span class="at" style="color: #657422;">discrete =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://www.thedatadiary.net/posts/2021-10-19-polling-average-of-the-va-governor-s-race-using-purrr-map-functions/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="2100"></p>
</div>
</div>
<p>This ease of use and visibility will make things more seamless for me and allow me to dig into more technical content in more detail in the future!</p>
<p>I’ll be taking a (much needed) vacation next week, spending some time off the grid in the Grand Canyon and surrounding area with my family. I’ve got a short post lined up for early November when I return - see you then!</p>
<p>As always, you can find the source files for <a href="https://github.com/markjrieke/thedatadiary/tree/main/2021.10.01-virginia_governors_race">the script to generate the polling average</a> and for <a href="https://github.com/markjrieke/thedatadiary.net">this site</a> on my github.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2021,
  author = {Mark Rieke},
  title = {Polling {Average} of the {VA} {Governor’s} {Race} Using
    Purrr::map Functions},
  date = {2021-10-19},
  url = {https://www.thedatadiary.net/posts/2021-10-19-polling-average-of-the-va-governor-s-race-using-purrr-map-functions},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2021" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2021. <span>“Polling Average of the VA Governor’s Race Using
Purrr::map Functions.”</span> October 19, 2021. <a href="https://www.thedatadiary.net/posts/2021-10-19-polling-average-of-the-va-governor-s-race-using-purrr-map-functions">https://www.thedatadiary.net/posts/2021-10-19-polling-average-of-the-va-governor-s-race-using-purrr-map-functions</a>.
</div></div></section></div> ]]></description>
  <category>politics</category>
  <guid>https://www.thedatadiary.net/posts/2021-10-19-polling-average-of-the-va-governor-s-race-using-purrr-map-functions/index.html</guid>
  <pubDate>Tue, 19 Oct 2021 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2021-10-19-polling-average-of-the-va-governor-s-race-using-purrr-map-functions/featured.png" medium="image" type="image/png" height="192" width="144"/>
</item>
<item>
  <title>RStudio’s Call for Documentation</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2021-10-05-rstudio-s-call-for-documentation/index.html</link>
  <description><![CDATA[ 




<p>In my job, I spend a good amount of time working in the platform setup by our survey vendor, <a href="https://www.qualtrics.com/">Qualtrics</a>. There are some pre-formatted reports that we can send on a recurring basis through Qualtrics, but for one-off or custom reports, I can work with the raw data in R. A few weeks ago, however, I was asked to setup a recurring email to send a customized report to a group of hospital directors each week. While R makes generating the report simple, sending out each week was tedious, as each one needed to be sent separately. Since the reports contain patient information, I couldn’t automate via a third party server like <a href="https://github.com/features/actions">GitHub Actions</a>. I needed a way to localize the automation to my computer.</p>
<p>Luckily enough, I was able to work out a solution! I wrote about it in a submission to <a href="https://community.rstudio.com/t/r-views-call-for-documentation-announcement/110579">RStudio’s 2021 Call for Documentation</a>. You can read my article on <a href="https://community.rstudio.com/t/automated-email-reports-with-r-vba-and-the-task-scheduler-r-views-submission/115807/5">Automated Email Reports with R, VBA, and the Task Scheduler</a> for more detail.</p>
<section id="some-programming-notes" class="level3">
<h3 class="anchored" data-anchor-id="some-programming-notes">Some programming notes</h3>
<ul>
<li>I’ve been named one of RStudio Community’s New Users of the Month!</li>
<li>I’ve started working in Rmarkdown for these posts (you can actually view the native file for this post here). This allows me to mix in code and prose in one document &amp; should make the process a bit easier on my end.</li>
<li>I’ve scheduled out posts every two weeks for the rest of the year. I wanted to give myself enough time to work on some longer term projects, so be on the lookout for more in store!</li>
</ul>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2021,
  author = {Mark Rieke},
  title = {RStudio’s {Call} for {Documentation}},
  date = {2021-10-05},
  url = {https://www.thedatadiary.net/posts/2021-10-05-rstudio-s-call-for-documentation},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2021" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2021. <span>“RStudio’s Call for Documentation.”</span>
October 5, 2021. <a href="https://www.thedatadiary.net/posts/2021-10-05-rstudio-s-call-for-documentation">https://www.thedatadiary.net/posts/2021-10-05-rstudio-s-call-for-documentation</a>.
</div></div></section></div> ]]></description>
  <category>archive</category>
  <category>rstats</category>
  <guid>https://www.thedatadiary.net/posts/2021-10-05-rstudio-s-call-for-documentation/index.html</guid>
  <pubDate>Tue, 05 Oct 2021 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2021-10-05-rstudio-s-call-for-documentation/icon.png" medium="image" type="image/png" height="132" width="144"/>
</item>
<item>
  <title>Catching Up (again)</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2021-09-23-catching-up-again/index.html</link>
  <description><![CDATA[ 




<p>Wow, it’s been quite a while! Once again, I’m catching up from a long hiatus (this time, there was about a month’s gap between posts). Although I haven’t been writing here, I have been keeping myself incredibly busy - for that reason, I think I’m going to switch up the format of this site. Here’s a few changes I’m planning on making, &amp; also why I plan on making them.</p>
<section id="opening-up-topic-options" class="level3">
<h3 class="anchored" data-anchor-id="opening-up-topic-options">Opening up topic options</h3>
<p>Up until now, I’ve pretty much exclusively been looking at politically-related things from a data-centric point of view, partially because most news outlets are sensationalist and it annoys me, and partially because the 2020 election &amp; aftermath was on my mind for most of early 2021 (also, wanting to understand the <a href="https://projects.economist.com/us-2020-forecast/president/how-this-works">Economist’s Election Forecast methodology</a> was the spark that led to taking stats classes, learning R, and [eventually] landing a new job). While I still want to/expect that I will touch on political-esque topics, I want to expand into things I’m more generally interested in. I’ve spent a lot of time this year working on projects that don’t touch politics and it was difficult to spur the enthusiasm to work on a political project just to fill the site after having spent hours coding something unrelated. I’ve imposed this political filter on myself, &amp; expanding the horizon to include any/all topics that interest me will allow me to more consistently write without overextending myself.</p>
</section>
<section id="moving-away-from-squarespace" class="level3">
<h3 class="anchored" data-anchor-id="moving-away-from-squarespace">Moving away from Squarespace</h3>
<p>Currently, this site is hosted by Squarespace. This was great for getting setup &amp; used to working online, but after a year of working with it, I’ve realized that it isn’t the ideal platform for my use case. Early next year, hopefully, I’ll switch over to using rmarkdown, Hugo, and Netifly to build &amp; deploy a site directly from R. This will make my life a lot easier, for a couple of reasons:</p>
<ul>
<li>I will have a lot more control over layouts and themes</li>
<li>I’ll be able to more easily share code, images, and interactives(!)</li>
<li>The code &amp; the website will be housed under one directory (rather than existing as two separate entities)</li>
</ul>
<p>Additionally, the platform I’m planning on moving to is more blog/personal-professional focused, rather than retail focused, like Squarespace. I may also be able to move towards having posts appear in emails, rather than having to link to the post itself.</p>
</section>
<section id="timeline" class="level3">
<h3 class="anchored" data-anchor-id="timeline">Timeline</h3>
<p>I haven’t yet settled on this yet, but I may move from a weekly schedule to a bi-weekly schedule (not that I ever really stuck to the weekly schedule). The projects I’ve been working on typically take quite a bit of time, so trying to churn one out each week means that I may have to suffer quality for a schedule, which I don’t want to do. I’d rather have enough time to fully devote to completing something.</p>
<p>Anyways, that’s a lot of updates - I’ll hopefully check in within a few weeks time!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2021,
  author = {Mark Rieke},
  title = {Catching {Up} (Again)},
  date = {2021-09-23},
  url = {https://www.thedatadiary.net/posts/2021-09-23-catching-up-again},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2021" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2021. <span>“Catching Up (Again).”</span> September 23,
2021. <a href="https://www.thedatadiary.net/posts/2021-09-23-catching-up-again">https://www.thedatadiary.net/posts/2021-09-23-catching-up-again</a>.
</div></div></section></div> ]]></description>
  <category>archive</category>
  <guid>https://www.thedatadiary.net/posts/2021-09-23-catching-up-again/index.html</guid>
  <pubDate>Thu, 23 Sep 2021 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2021-09-23-catching-up-again/icon.png" medium="image" type="image/png" height="132" width="144"/>
</item>
<item>
  <title>Tidymodels and the Titanic</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/index.html</link>
  <description><![CDATA[ 




<p>This week, I thought I’d do something a bit different. I’ve been working with &amp; getting used to <a href="https://www.tidymodels.org/">tidymodels</a>, a suite of R packages for building machine learning models with tidyverse principles (you can thank <a href="https://juliasilge.com/blog/">Julia Silge’s blog</a> for providing a whole host of examples and walkthroughs). Using tidymodels and <a href="https://www.kaggle.com/c/titanic">Kaggle’s Titanic dataset</a>, I created a few simple models to predict whether or not each passenger survived.</p>
<section id="exploratory-data-analysis" class="level1">
<h1>Exploratory Data Analysis</h1>
<p>First off, it’s important to get to know the dataset in a bit of detail before diving into model building. The Titanic dataset is relatively small, containing 12 columns of data on 891 passengers.</p>
<ul>
<li><strong>PassengerId</strong> : ordered number assigned to each passenger (1, 2, 3… etc.).</li>
<li><strong>Survived</strong> : indicates whether the passenger survived or not (imported as numeric, where a 1 means that the passenger survived and a 0 means that the passenger died.</li>
<li><strong>PClass</strong> : passenger class (1st, 2nd, or 3rd).</li>
<li><strong>Name</strong> : passenger’s name.</li>
<li><strong>Sex</strong> : passenger’s sex.</li>
<li><strong>Age</strong> : passenger’s age.</li>
<li><strong>SibSp</strong> : number of the passenger’s siblings and/or spouses aboard the ship.</li>
<li><strong>Parch</strong> : number of the passenger’s parents and/or children aboard the ship.</li>
<li><strong>Ticket</strong> : passenger’s ticket number.</li>
<li><strong>Fare</strong> : price of the passenger’s ticket.</li>
<li><strong>Cabin</strong> : passenger’s cabin number.</li>
<li><strong>Embarked</strong> : port from which the passenger embarked.</li>
</ul>
<p>The passenger’s name and ticket number are unique, and don’t offer any much predictive power (at least, not for the type we’ll be deploying), so I’ve removed those columns from the selection. The majority of passengers are missing Cabin information, so I’ve similarly removed that column. Let’s take a look at the age distribution by gender. Density plots are good for this sort of objective, but a quick note - density plots don’t show the counts (like a histogram), just the relative distribution of each group.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/pics/plot_01.png" class="img-fluid"></p>
<p>Both men and women have similar age distributions, with the majority being adults roughly in their twenties. It’d be interesting to look at which age groups survived.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/pics/plot_02.png" class="img-fluid"></p>
<p>There’s a spike survivorship at a young age (as expected, due to the prioritization of children). Young adults make up the majority of both survivors and those who died, simply because young adults made up the majority of passengers. It may be more interesting to see which male/female age groups survived.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/pics/plot_03.png" class="img-fluid"></p>
<p>Interestingly, there’s a large portion of the women who died were children. To gain some more insight, however, it may be beneficial to bin the results. As mentioned above, density plots don’t show a count of each age, but the relative amounts instead. We can use a histogram to get a better idea of the actual amount in each group.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/pics/plot_04.png" class="img-fluid"></p>
<p>From the histogram, we can see that there were far more male passengers than female passengers. Let’s setup age brackets and see how many of each age group survived.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/pics/plot_05.png" class="img-fluid"></p>
<p>Despite there being more male passengers, there were more female survivors in just about every age bracket. I had expected that women would have a greater percentage of survivorship, but was mildly surprised that the absolute number of female survivors was greater than the number of male survivors.</p>
<p>Lets look at how survivorship is related to the number of family members each passenger was traveling with.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/pics/plot_06.png" class="img-fluid"></p>
<p>While there’s not huge variation between survivorship percentages across each class, we can see that the majority of passengers were traveling alone.</p>
<p>Finally, I looked at the distribution of the fare price by survivorship. As expected, passengers who didn’t survive skewed towards low cost fares while survivors were more evenly distributed across fare prices.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/pics/plot_07.png" class="img-fluid"></p>
</section>
<section id="model-fitting-and-evaluation" class="level1">
<h1>Model Fitting and Evaluation</h1>
<p>Now that we’ve explored the data a bit, we can get started on some actual model fitting and evaluation. I split the dataset into a training set and test set, and built two simple models - a <a href="https://en.wikipedia.org/wiki/Logistic_regression">logistic regression</a> and a <a href="https://en.wikipedia.org/wiki/Random_forest">random forest model</a>. In very light detail, a logistic regression is the most basic classification model based on the generalized linear model and a random forest model is a decision tree-based algorithm. With no <a href="https://www.datarobot.com/wiki/tuning/">tuning</a> applied, neither model performed particularly well - the logistic regression and random forest models had accuracies of 85.5% and 83.8% on the test set, respectively. While the logistic regression had a slightly higher accuracy on the test set, the random forest performed better on the metric of <a href="https://en.wikipedia.org/wiki/Receiver_operating_characteristic">area under the ROC (receiver-operator characteristic)</a> curve - 0.899 compared to 0.888 (generally, binary classification systems with ROC AUC values close to 1 perform better). A comparison between the two ROC curves is shown below.</p>
<p>It’s not perfect, but the purpose was to explore the tidymodels framework, and I’m pretty happy with the outcome/practice along the way.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/pics/roc_auc.png" class="img-fluid"></p>
</section>
<section id="some-things-to-readwatchlisten-to" class="level1">
<h1>Some Things to Read/Watch/Listen to</h1>
<ul>
<li>There’s been a concerted effort by prominent conservatives to <a href="https://twitter.com/gelliottmorris/status/1424524749875601408?s=21">promote vaccination</a> and <a href="https://www.reviewjournal.com/opinion/letters/letter-dont-blame-the-gop-for-vaccine-hesitancy-2413731/amp/">shift the blame for vaccine hesitancy to the Biden administration</a>, pointing in particular to one of Kamala Harris’ comments during the Vice Presidential debate. This criticism falls fairly short, given that commentators like <a href="https://www.youtube.com/watch?v=ocEFTIwnO6I">Tucker Carlson</a> and legislators like <a href="https://www.cnn.com/2021/08/10/tech/twitter-marjorie-taylor-greene/index.html">Marjorie Taylor Green</a> continue to spread vaccine conspiracy theories. Further, a <a href="https://www.economist.com/graphic-detail/2021/07/30/which-americans-are-against-the-jab">statistical model by the Economist</a> found that the strongest predictor of whether or not someone has been vaccinated is who they voted for in the 2020 presidential election.</li>
<li>Julia Silge was recently featured as a guest on an excellent episode of the <a href="https://www.youtube.com/watch?v=p7z8yZucwlM">Not So Standard Podcast</a>. Well worth a listen for R dorks like myself.</li>
<li>Perry Bacon Jr wrote an <a href="https://www.washingtonpost.com/opinions/2021/08/09/why-moderation-doesnt-guarantee-electoral-success-biden-democrats/">informative piece</a> on the misplaced importance on swing voters in election cycles.</li>
</ul>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2021,
  author = {Mark Rieke},
  title = {Tidymodels and the {Titanic}},
  date = {2021-08-08},
  url = {https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2021" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2021. <span>“Tidymodels and the Titanic.”</span> August 8,
2021. <a href="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic">https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic</a>.
</div></div></section></div> ]]></description>
  <category>archive</category>
  <category>rstats</category>
  <category>tidymodels</category>
  <guid>https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/index.html</guid>
  <pubDate>Sun, 08 Aug 2021 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2021-08-08-tidymodels-and-the-titanic/featured.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>The Gas Price Fallacy</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2021-07-18-the-gas-price-fallacy/index.html</link>
  <description><![CDATA[ 




<p>As America has vaccinated its population, life has seemingly begun to return to the pre-pandemic normal. Businesses have been opening to higher levels of capacity, schools are planning for higher levels of in-person learning in the fall, and, notably, Americans have returned to <a href="https://covid19.apple.com/mobility">pre-pandemic levels of transit</a>.</p>
<p><a href="https://twitter.com/existentialfish/status/1377779116414533638">Conservative commentators</a> and <a href="https://twitter.com/Jim_Jordan/status/1406966549714440196">representatives</a> have pointed out that prices of commodity goods - in particular, gasoline - have skyrocketed over the past year and attribute this increase to Biden’s presidency. Looking at retail gasoline prices, we can see a steady increase since Biden took office.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-07-18-the-gas-price-fallacy/plot_01.png" class="img-fluid"></p>
<p>What they fail to point out, however, is that the price of gasoline (and other commodities) significantly dropped during the pandemic, and that the increases are largely a return to pre-pandemic prices.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-07-18-the-gas-price-fallacy/plot_02.png" class="img-fluid"></p>
<p>While there are certainly opportunities to critique the current administration’s energy policy (<a href="https://apnews.com/article/joe-biden-billings-a3a37acf2fce55449b704b01badc1f67">banning new drilling leases on federal land/water</a> and <a href="https://apnews.com/article/donald-trump-joe-biden-keystone-pipeline-canada-environment-and-nature-141eabd7cca6449dfbd2dab8165812f2">canceling the Keystone XL pipeline’s border-crossing permit</a>, for example), attributing the recent return to pre-pandemic gasoline prices is a particularly weak and intentionally misleading avenue of attack.</p>
<p>As always, you can find my work on <a href="https://github.com/markjrieke/thedatadiary">github</a>.</p>
<section id="some-readingviewing-material" class="level3">
<h3 class="anchored" data-anchor-id="some-readingviewing-material">Some Reading/Viewing Material</h3>
<ul>
<li>The Economist wrote an <a href="https://www.economist.com/graphic-detail/2021/07/10/in-person-voting-really-did-accelerate-covid-19s-spread-in-america">interesting article</a> finding a significant link between a county’s in-person voting rate and new COVID cases in November.</li>
<li>Elliot Morris summarized the work of several political scientists in a recent article describing <a href="https://gelliottmorris.substack.com/p/why-did-the-gop-slide-so-far-towards">why the GOP slid so far towards authoritarianism</a> in the past decade. The article is behind a subscriber paywall, but is well worth the read. In short, however, “ethnically antagonistic” voters are much more likely to agree with statements traditionally viewed as authoritarian. This group hadn’t coalesced under a single party until Trump brought these anti-racial voters into the party (recall his role in the <a href="https://www.theatlantic.com/ideas/archive/2020/05/birtherism-and-trump/610978/">birther conspiracy</a> and the <a href="https://www.cnn.com/2016/08/31/politics/2016-election-donald-trump-hillary-clinton-race/index.html">racial antagonism surrounding his 2016 campaign</a>), at which point democratic (note, small “d”) norms became a partisan issue.</li>
<li>In my machine learning class, I’ve started learning about the implementation of neural networks. The course’s instruction style is highly technical, but Grant Sanderson’s <a href="https://www.youtube.com/watch?t=1015s&amp;v=aircAruvnKk">series on neural networks</a> has helped me align a technical and intuitive understanding of the topic.</li>
</ul>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2021,
  author = {Mark Rieke},
  title = {The {Gas} {Price} {Fallacy}},
  date = {2021-07-18},
  url = {https://www.thedatadiary.net/posts/2021-07-18-the-gas-price-fallacy},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2021" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2021. <span>“The Gas Price Fallacy.”</span> July 18, 2021.
<a href="https://www.thedatadiary.net/posts/2021-07-18-the-gas-price-fallacy">https://www.thedatadiary.net/posts/2021-07-18-the-gas-price-fallacy</a>.
</div></div></section></div> ]]></description>
  <category>archive</category>
  <category>politics</category>
  <guid>https://www.thedatadiary.net/posts/2021-07-18-the-gas-price-fallacy/index.html</guid>
  <pubDate>Sun, 18 Jul 2021 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2021-07-18-the-gas-price-fallacy/featured.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Blexas?</title>
  <dc:creator>Mark Rieke</dc:creator>
  <link>https://www.thedatadiary.net/posts/2021-07-11-blexas/index.html</link>
  <description><![CDATA[ 




<p>Last year, Donald Trump won Texas’ 38 electoral votes handily, <a href="https://en.wikipedia.org/wiki/2020_United_States_presidential_election_in_Texas">earning 52% of the vote compared to Biden’s 46% (R+6)</a>. Taken on its own, this is hardly surprising - <a href="https://www.270towin.com/states/Texas">Texas has gone to the Republican presidential candidate in every election since 1980</a>. Looking at the relative gains made in Texas over recent election cycles, however, paints a much more hopeful picture for Democrats hoping to flip the state &amp; garner the nickname, “blexas.”</p>
<p>On election day, FiveThirtyEight and the Economist gave Biden a <a href="https://projects.fivethirtyeight.com/2020-election-forecast/texas/">38%</a> and <a href="https://projects.economist.com/us-2020-forecast/president/texas">30%</a> chance of winning in Texas, respectively. While still bearish on Biden, this is far more bullish than 2016, when FiveThirtyEight’s model gave Clinton a mere <a href="https://projects.fivethirtyeight.com/2016-election-forecast/texas/#plus">5%</a> chance of winning in Texas (in fact, both FiveThirtyEight and the Economist were more confident in Biden’s chance of winning Texas in 2020 than FiveThirtyEight was that Trump would win the presidency in 2016 (<a href="https://projects.fivethirtyeight.com/2016-election-forecast/#plus">28%</a>)). Part of this shift can be attributed to Democratic gains nationally, but Texas Democrats have been steadily gaining more ground than can be explained by national swing.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-07-11-blexas/pics/plot_01.png" class="img-fluid"></p>
<p>The Cook Political Report publishes its <a href="https://cookpolitical.com/analysis/national/pvi/introducing-2021-cook-political-report-partisan-voter-index">Partisan Voter Index</a> (PVI) following each presidential election. PVI is a measure of how a state, district, or county votes relative to the national environment. For example, say a Democratic candidate wins 53% of the two-party voteshare nationally, but 51% in a given state. Despite the state going to the Democratic candidate, the state PVI would be R+2%, since the candidate performed 2% under the national vote (the actual PVI calculated in the Cook report is slightly more involved, but this basic understanding is sufficient for our purposes). Looking at Texas’ PVI over past elections, we see that Democrats have been making relative gains in every election since 2004, despite Texas still voting more Republican than the nation.</p>
<p>Much of this can likely be attributed to demographic shifts drive by major Texas cities - <a href="https://demographics.texas.gov/Resources/Presentations/OSD/2021/2021_01_15_LeadershipNorthTexas.pdf">Dallas, Houston, Austin, and San Antonio have seen massive population increases</a>, largely due to domestic and international migration (as opposed to natural changes - e.g., births). As Texas grows, it also continues to diversify. The non-hispanic white population in Texas dropped from 45% in 2010 to 41% in 2019, and non-white population groups have driven growth over the past 10 years.</p>
<p><img src="https://www.thedatadiary.net/posts/2021-07-11-blexas/pics/txdemographics.jpg" class="img-fluid"></p>
<p>All that being said, while I expect that Texas will continue to experience demographic shifts that are favorable in the eyes of Democratic politicians, in the absence of any real modeling work, I’m hesitant to say that Texas will turn blue in the near term. Despite gains in the presidential results, Texas Democrats <a href="https://en.wikipedia.org/wiki/2020_United_States_House_of_Representatives_elections_in_Texas#Results_summary">didn’t outperform expectations in the house</a>, nor did they even advance a candidate in the special election for TX-06 (two Republican candidates advanced to a runoff). Governor Abbott is also introducing a <a href="https://www.nytimes.com/2021/07/07/us/politics/texas-abbott-voting-laws-transgender-rights.html">special legislative session</a> with one goal (of many) of making Texas a state with some of the most restrictive voting laws with targeted partisan effects. Looking to other states as a reference, North Carolina had also seen similar PVI shifts in the past without resulting in Democratic victories (though, to be fair, North Carolina hasn’t experienced the same level of demographic shift that Texas is undergoing).</p>
<p>Perhaps there is some modeling work I can do to produce a more definitive stance, but until then, I’ll hold on making any bold predictions.</p>
<p>As always, you can find my work on <a href="https://github.com/markjrieke/thedatadiary">github</a>.</p>
<section id="general-updates" class="level3">
<h3 class="anchored" data-anchor-id="general-updates">General Updates</h3>
<p>It’s been quite a while, but it’s good to get back into writing again. I wrote the scripts/made the charts for this post about two weeks ago, but haven’t had the time (or rather, haven’t made the time) to write the post itself. While I feel like I’ve been saying this for three months now, I do hope to get back to a more regular schedule soon - perhaps biweekly, to avoid rushing projects. We’ll see - in any regard, here are some updates that I’m excited about:</p>
<ul>
<li>I started my new job a few weeks ago! It’s both very rewarding (I get to use R &amp; work with large polling datasets daily!) and very demanding. I enjoy the challenge &amp; am excited for upcoming projects that I’ve been tasked with.</li>
<li>I’ve been steadily making headway against the Machine Learning course I’ve been taking - at this point, I’m about halfway finished.</li>
<li>I’ve begun to poke around in the tidymodels framework. I’m interested in the standardization the packages supply for generating models in R.</li>
</ul>
<section id="some-readingviewing-material" class="level4">
<h4 class="anchored" data-anchor-id="some-readingviewing-material">Some reading/viewing material:</h4>
<ul>
<li>I linked to it above, but it’s worth reading through this <a href="https://www.nytimes.com/2021/07/07/us/politics/texas-abbott-voting-laws-transgender-rights.html">NYT article on the special legislative session in Texas</a>. I only touched on voting rights, but session is primed as another hot-button issue session following spring’s ultra-conservative agenda.</li>
<li>Checks and Balance, the Economist’s weekly podcast, focused on Critical Race Theory &amp; the troubled history of race in American education in their most recent podcast, “<a href="https://open.spotify.com/show/4jjKHhNPHfkIZHssgrQavP">History Test</a>.” It’s well worth a listen, especially if you’re like me, and had never heard of CRT until recently.</li>
<li>Just over 6 months ago on January 6th, violent Trump supporters stormed the U.S. capitol. With time and <a href="https://www.msnbc.com/opinion/gop-lies-about-jan-6-are-getting-bolder-more-dangerous-n1267178">overt lies</a> being propagated by Fox News, OANN, and Newsmaxx, it’s easy to forget exactly what happened and how it felt on that day. This <a href="https://www.youtube.com/watch?v=jWJVMoe7OY0">NYT Visual Investigation</a> does an excellent job of reconstructing the timeline of the events that day.</li>
</ul>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{rieke2021,
  author = {Mark Rieke},
  title = {Blexas?},
  date = {2021-07-11},
  url = {https://www.thedatadiary.net/posts/2021-07-11-blexas},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-rieke2021" class="csl-entry quarto-appendix-citeas">
Mark Rieke. 2021. <span>“Blexas?”</span> July 11, 2021. <a href="https://www.thedatadiary.net/posts/2021-07-11-blexas">https://www.thedatadiary.net/posts/2021-07-11-blexas</a>.
</div></div></section></div> ]]></description>
  <category>archive</category>
  <category>politics</category>
  <guid>https://www.thedatadiary.net/posts/2021-07-11-blexas/index.html</guid>
  <pubDate>Sun, 11 Jul 2021 05:00:00 GMT</pubDate>
  <media:content url="https://www.thedatadiary.net/posts/2021-07-11-blexas/featured.png" medium="image" type="image/png" height="96" width="144"/>
</item>
</channel>
</rss>
