<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bayes theorem on the data diary</title>
    <link>https://www.thedatadiary.net/categories/bayes-theorem/</link>
    <description>Recent content in bayes theorem on the data diary</description>
    <generator>Source Themes academia (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Mark Rieke {year}</copyright>
    <lastBuildDate>Sun, 12 Jun 2022 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://www.thedatadiary.net/categories/bayes-theorem/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Estimate your uncertainty</title>
      <link>https://www.thedatadiary.net/blog/2022-06-12-estimate-your-uncertainty/</link>
      <pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.thedatadiary.net/blog/2022-06-12-estimate-your-uncertainty/</guid>
      <description>


&lt;p&gt;I recently picked up &lt;a href=&#34;http://varianceexplained.org/about/&#34;&gt;David Robinson’s&lt;/a&gt; book, &lt;a href=&#34;http://varianceexplained.org/r/empirical-bayes-book/&#34;&gt;Introduction to Empirical Bayes&lt;/a&gt;. It’s available online for a price of your own choosing (operating under a “pay-what-you-want” model), so you can technically pick it up for free, but it’s well worth the suggested price of $9.95. The book has a particular focus on practical steps for implementing Bayesian methods with code, which I appreciate. I’ve made it through Part I (of four), which makes for a good stopping point to practice what I’ve read.&lt;/p&gt;
&lt;p&gt;The first section is highly focused on modeling the probability of success/failure of some binary outcome using a &lt;a href=&#34;https://en.wikipedia.org/wiki/Beta_distribution&#34;&gt;beta distribution&lt;/a&gt;. This is highly relevant to my work as an analyst, where whether or not a patient responded positively to a particular question on a survey can be modeled with this method. Thus far, however, I’ve taken the &lt;a href=&#34;https://en.wikipedia.org/wiki/Frequentist_inference&#34;&gt;frequentist&lt;/a&gt; approach to analyses, which assumes we know nothing about what the data ought to look like prior to analyzing it. This is largely because I didn’t know of a robust way to estimate a &lt;a href=&#34;https://en.wikipedia.org/wiki/Prior_probability&#34;&gt;prior&lt;/a&gt; for a Bayesian analysis.&lt;/p&gt;
&lt;p&gt;Thankfully, however, the book walks through examples of exactly how to do this! We can use a &lt;a href=&#34;https://en.wikipedia.org/wiki/Maximum_likelihood_estimation&#34;&gt;maximum likelihood estimator&lt;/a&gt; to estimate a reasonable prior given the current data. That’s quite a bit of statistical mumbo-jumbo — in this post I’ll walk through an example that spells it out a bit more clearly using fake hospital satisfaction data.&lt;/p&gt;
&lt;div id=&#34;setting-up-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Setting up the data&lt;/h2&gt;
&lt;p&gt;First, let’s simulate responses to patient satisfaction surveys. I tend to look at patient satisfaction scores across individual hospital units (e.g., ED, ICU, IMU, etc.). Units can have varying numbers of discharges, so we’ll use a &lt;a href=&#34;https://en.wikipedia.org/wiki/Log-normal_distribution&#34;&gt;log-normal&lt;/a&gt; distribution to estimate the number of responses for each unit.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# simulate 1,500 hospital units with an average of 150 survey returns per unit
set.seed(123)
survey_data &amp;lt;- 
  rlnorm(1500, log(150), 1.5) %&amp;gt;%
  as_tibble() %&amp;gt;%
  rename(n = value)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://www.thedatadiary.net/blog/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;4500&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The spectrum of responses is incredibly broad — some units have a massive number of returns (in the tens of thousands!) while others have just a handful. This is fairly consistent with the real-world data that I’ve seen (though the units on the high-side are a bit over-represented here).&lt;/p&gt;
&lt;p&gt;Next, let’s assume that there is some true satisfaction rate that is associated with each unit. If each unit had an infinite number of survey returns, the satisfaction rate from the survey returns would approach this true value. In this case, we’ll set the true satisfaction for each unit randomly but have it hover around 66%.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# set the true satisfaction to be different for each unit, but hover around 66%
set.seed(234)
survey_data &amp;lt;- 
  survey_data %&amp;gt;%
  rowwise() %&amp;gt;%
  mutate(true_satisfaction = rbeta(1, 66, 34))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Although there is a true satisfaction associated with each unit, we wouldn’t expect that the reported survey scores would match this exactly. This is especially true when there are few responses — if a unit has a true satisfaction rate of 75% but only 3 responses, it’s impossible for the reported score to match the underlying true rate!&lt;/p&gt;
&lt;p&gt;We can simulate the number of patients who responded positively (in survey terms, the number of “topbox” responses) by generating &lt;code&gt;n&lt;/code&gt; responses for each unit using a &lt;a href=&#34;https://en.wikipedia.org/wiki/Binomial_distribution&#34;&gt;binomial distribution&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# simulate the number of patients responding with the topbox value
# we *know* the true value, but the actual score may vary!
set.seed(345)
survey_data &amp;lt;-
  survey_data %&amp;gt;%
  mutate(n = round(n),
         topbox = rbinom(1, n, true_satisfaction)) %&amp;gt;%
  ungroup() %&amp;gt;%
  
  # name each unit
  rowid_to_column() %&amp;gt;%
  mutate(unit = paste(&amp;quot;Unit&amp;quot;, rowid)) %&amp;gt;%
  relocate(unit) %&amp;gt;%
  
  # remove the true satisfaction so we don&amp;#39;t know what it is!
  select(-rowid, -true_satisfaction)

# find patient satisfaction scores
survey_data &amp;lt;- 
  survey_data %&amp;gt;%
  mutate(score = topbox/n)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://www.thedatadiary.net/blog/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;4500&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As expected, most of our simulated data hovers around a score of 66%. However, there are a few scores at the extremes of 0% and 100% — given how we simulated the data, it is unlikely that these units are &lt;em&gt;really&lt;/em&gt; performing so poorly/so well and it’s likelier that they just have few returns.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# which units have the highest scores?
survey_data %&amp;gt;%
  arrange(desc(score)) %&amp;gt;%
  slice_head(n = 10) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;unit&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;topbox&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;score&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 26&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 591&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 616&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 811&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 943&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1217&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1435&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1437&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 863&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9473684&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 372&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9230769&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# which units have the lowest scores?
survey_data %&amp;gt;%
  arrange(score) %&amp;gt;%
  slice_head(n = 10) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;unit&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;topbox&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;score&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1092&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 248&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2500000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1120&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2857143&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 416&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3333333&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 456&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3333333&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 972&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3333333&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 113&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3846154&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 260&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 695&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1352&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4117647&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As expected, the units on either end of the spectrum aren’t necessarily outperforming/underperforming — they simply don’t have a lot of survey responses! We can use Bayesian inference to estimate the true satisfaction rate by specifying and updating a prior!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;generating-a-prior-distribution&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Generating a prior distribution&lt;/h2&gt;
&lt;p&gt;When looking at the entire dataset, the distribution of scores is thrown off a bit by the units with few responses. If we restrict the dataset to only the units that have more than 30 responses (which, &lt;a href=&#34;https://www.thedatadiary.net/blog/2022-04-28-30-is-not-statistical/&#34;&gt;as I’ve written about before&lt;/a&gt;, isn’t necessarily a data-driven cutoff for analysis) we can get a clearer idea of the distribution of the scores.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;survey_data_filtered &amp;lt;-
  survey_data %&amp;gt;%
  filter(n &amp;gt; 30)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://www.thedatadiary.net/blog/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;4500&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, we can represent this distribution with a density plot:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.thedatadiary.net/blog/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;4500&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This looks suspiciously like a beta distribution! A beta distribution’s shape can be defined by two parameters — alpha and beta. Varying these parameters lets us adjust the center and width to match any possible beta distribution.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/7/78/PDF_of_the_Beta_distribution.gif&#34; /&gt;&lt;/p&gt;
&lt;p&gt;What may make sense would be to use &lt;em&gt;this distribution&lt;/em&gt; as our prior. I.e., if we have no responses for a unit, we can probably guess that their score would be somewhere around 66% with some healthy room on either side for variability. To do so, we need to estimate an appropriate alpha and beta — rather than guess the values using trial and error we can pass the work off to our computer to find parameters that &lt;strong&gt;maximize&lt;/strong&gt; the &lt;strong&gt;likelihood&lt;/strong&gt; that our &lt;strong&gt;estimated distribution&lt;/strong&gt; matches the true distribution (hence the name, &lt;em&gt;maximum likelihood estimator&lt;/em&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(stats4)

# log-likelihood function
log_likelihood &amp;lt;- function(alpha, beta) {
  -sum(dbeta(survey_data_filtered$score, alpha, beta, log = TRUE))
}

# pass various alphas &amp;amp; betas to `log_likelihood` 
# to find combination that maximizes the likelihood!
params &amp;lt;- 
  mle(
    log_likelihood, 
    start = list(alpha = 50, beta = 50),
    lower = c(1, 1)
  )

# extract alpha &amp;amp; beta
params &amp;lt;- coef(params)
alpha0 &amp;lt;- params[1]
beta0 &amp;lt;- params[2]

print(paste(&amp;quot;alpha:&amp;quot;, round(alpha0, 1), &amp;quot;beta:&amp;quot;, round(beta0, 1)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;alpha: 39.7 beta: 20.5&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;How well does a beta distribution defined by these parameters match our actual data?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.thedatadiary.net/blog/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;4500&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This is a pretty good representation of our initial data! When we have no survey responses, we can use a beta distribution with the initial parameters as specified by the maximum likelihood estimation. As a unit gets more responses, we can update our estimation to rely more heavily on the data rather than the prior:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# update alpha &amp;amp; beta as new responses come in!
alpha_new &amp;lt;- alpha0 + n_topbox
beta_new &amp;lt;- beta0 + n - n_topbox&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;updating-our-priors&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Updating our priors&lt;/h2&gt;
&lt;p&gt;With a prior distribution defined by &lt;code&gt;alpha0&lt;/code&gt; and &lt;code&gt;beta0&lt;/code&gt;, we can upgrade our frequentest estimation of each unit’s score to a Bayesian estimation!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# empirical bayes estimation of satisfaction score
survey_eb &amp;lt;-
  survey_data %&amp;gt;%
  mutate(eb_estimate = (topbox + alpha0) / (n + alpha0 + beta0))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What are the top and bottom performing units by this new Bayesian estimation?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# which units have the highest estimated scores?
survey_eb %&amp;gt;%
  arrange(desc(eb_estimate)) %&amp;gt;%
  slice_head(n = 10) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;unit&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;topbox&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;score&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;eb_estimate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 133&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;160&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;133&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8312500&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7841640&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1004&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;123&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;103&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8373984&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7787827&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 172&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;165&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;133&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8060606&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7667547&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1042&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;372&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;291&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7822581&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7650930&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1294&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1409&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1083&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7686302&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7641391&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 892&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;349&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;273&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7822350&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7641085&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 306&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;247&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;195&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7894737&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7639102&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1249&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1234&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;943&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7641815&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7592901&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 427&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5469&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4151&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7590053&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7579168&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 920&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1637&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1243&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7593158&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7557585&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# which units have the lowest estimated scores?
survey_eb %&amp;gt;%
  arrange(eb_estimate) %&amp;gt;%
  slice_head(n = 10) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;unit&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;topbox&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;score&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;eb_estimate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 613&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1886&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;932&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4941676&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4992689&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 760&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;112&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4375000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5149645&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 363&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;226&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;112&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4955752&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5299674&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 316&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;431&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;224&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5197216&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5368008&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1032&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;235&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;119&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5063830&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5375222&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 1093&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;354&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;183&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5169492&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5376064&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 749&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5286&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2839&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5370791&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5384528&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 291&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;865&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;460&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5317919&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5400741&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 515&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;60&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;26&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4333333&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5463929&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unit 622&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;242&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;127&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5247934&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5515432&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There are a few things that are worth noting with these estimates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The estimated score is not the same as the actual reported score! As more responses come in, however, the estimated score converges to the actual.&lt;/li&gt;
&lt;li&gt;The prior pulls estimated scores towards the prior mean — low scores are pulled up a bit and high scores are pulled down a bit.&lt;/li&gt;
&lt;li&gt;The top (and bottom) performing units are no longer dominated by units with few returns!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can also estimate the uncertainty around the estimated score with a &lt;a href=&#34;https://en.wikipedia.org/wiki/Credible_interval&#34;&gt;credible interval&lt;/a&gt;. Credible intervals are the Bayesian counterpart to a frequentist’s &lt;a href=&#34;https://en.wikipedia.org/wiki/Confidence_interval&#34;&gt;confidence interval&lt;/a&gt; — both estimate the region that the true value could fall in given a certain probability — credible intervals, however, are informed by the prior distribution.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.thedatadiary.net/blog/2022-06-12-estimate-your-uncertainty/index_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;4500&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Because credible intervals are informed in part by the prior, they are tighter than their confidence interval counterparts. Like with the estimated score, however, as n-size increases, the Bayesian and frequentist interval estimations converge. In the absence of larger swathes of data, Bayesian methods can offer additional insight into our data by means of a prior distribution.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;some-closing-thoughts&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Some closing thoughts&lt;/h2&gt;
&lt;p&gt;Overall, this has been a fairly glowing review of the methods laid out in the first section of &lt;em&gt;Introduction to Empirical Bayes&lt;/em&gt;. That being said, Bayesian methods of inference are not inherently &lt;em&gt;better&lt;/em&gt; than frequentist methods — while they can offer additional context via a prior, there are situations where frequentist methods are preferred. From a math perspective, the prior provides diminishing returns as sample size increases, so it may be better forgoe Bayesian analysis when sample sizes are large. From an organizational perspective, Bayesian inference may be difficult to explain. In my own work, it’s highly unlikely that I’ll use Bayesian inference in any critical projects any time soon — I can imagine a lengthy uphill battle trying to explain the difference between the reported score and the estimated score informed by a prior.&lt;/p&gt;
&lt;p&gt;Finally, there are a few things in this toy analysis that I am hoping to improve upon as I progress further through the book:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As I mentioned above and &lt;a href=&#34;https://www.thedatadiary.net/blog/2022-04-28-30-is-not-statistical/&#34;&gt;in previous writings&lt;/a&gt;, using &lt;code&gt;n = 30&lt;/code&gt; is a relatively arbitrary cutoff point for analysis. In this case, the prior distribution is fairly sensitive to the cutoff point selected — I am hoping that later sections in the book highilight more robust ways of partitioning data for setting priors.&lt;/li&gt;
&lt;li&gt;In the above analysis we’re only examining one variable (univariate analysis) — I am looking forward to extending these methods to multivariate analyses and regressions.&lt;/li&gt;
&lt;li&gt;The beta distribution is appropriate for modeling the probability distribution of binary outcomes. In this example, where the outcome is simply the proportion of patients that responded favorably to the survey, modeling the outcome with a beta distribution is appropriate (responses can either be in the “topbox” or not). When there are more than two possible outcomes — for example, when trying to model &lt;a href=&#34;https://en.wikipedia.org/wiki/Net_promoter_score&#34;&gt;Net Promoter Score&lt;/a&gt; as the proportion of “promoters,” “passives,” and “detractors” — the more general &lt;a href=&#34;https://en.wikipedia.org/wiki/Dirichlet_distribution&#34;&gt;Dirichlet distribution&lt;/a&gt; is more appropriate.&lt;/li&gt;
&lt;li&gt;I’m hoping also that the book covers methods for dealing with time-dependent data. For example, we’d expect that concerted efforts (or lack thereof) by the hospital units could significantly impact the underlying “true satisfaction” that we’re attempting to estimate via surveying. We expect that more recent survey responses should be more impactful in informing our posterior estimation, but I’ve yet to find any robust literature on how to weight the recency of responses. In the past, I’ve used &lt;a href=&#34;https://en.wikipedia.org/wiki/Exponential_decay&#34;&gt;exponentional decay&lt;/a&gt; to reduce the weight of old responses, but this feels a bit arbitrary.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overall, this has been a long way of saying that I’m happy with the book so far and I’m excited to see what comes next as I continue reading!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
