{
  "hash": "dd85e97b22a328828f3fac2b552cd53d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Weighting and Its Consequences\"\ndate: '2025-05-04'\ncategories: [politics]\ndescription: \"Part 3: Binary Surprises\"\nimage: header.png\n---\n\n\n\n::: {.callout-note}\nThis is the third entry in a multi-part series of posts on weighting surveys. You can read the previous entries at the links below.\n\n* [Part 1: The Abstract](../2025-02-15-aapor-01/index.qmd)\n* [Part 2: A Free Lunch](../2025-04-20-aapor-02/index.qmd)\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggdist)\nlibrary(ggblend)\nlibrary(riekelib)\n\npal <- c(\"#838cf1\", \"#f1838c\", \"#5a9282\")\n```\n:::\n\n\n\nIn the [previous entry](../2025-04-20-aapor-02/index.qmd) of this series on survey weighting, I recreated the results of Little and Vartivarian's 2005 paper, [Does Weighting for Nonresponse Increase the Variance of Survey Means?](https://www150.statcan.gc.ca/n1/en/pub/12-001-x/2005002/article/9046-eng.pdf?st=V8cCWCpp) The paper (and my recreation) demonstrate that weighting survey responses can reduce both the bias *and* variance in the estimate of the population mean when the weighting variables are highly correlated with both the outcome and nonresponse. \n\nThese results were demonstrated using a continuous variable as the outcome. In many cases, however, surveys are designed to measure the population's preference from a discrete set of choices.^[Of particular interest to me (and regular readers here): political horse-race and issue polls all fall handily into this category.] How do Little and Vartivarian's results hold up in surveys with discrete outcomes?\n\nTo answer this question, I once again turn to simulation. Consider two groups (A and B) of equal population answering a survey with a binary outcome. Much like the previous entry, we'll set up four simulation sets that correspond to each of the cases in Little and Vartivarian's paper:\n\n* Case 1: Group membership is uncorrelated with both nonresponse and the outcome;\n* Case 2: Group membership is uncorrelated with nonresponse but correlated with the outcome;\n* Case 3: Group membership is correlated with nonresponse but uncorrelated with the outcome;\n* Case 4: Group membership is correlated with both nonresponse and the outcome.\n\nWhen group membership is correlated with the outcome, I set group A's support at 3% and group B's support to 97%. When correlated with nonresponse, I set group A's probability of response to 5% and group B's to 7%. Under these conditions, I simulate the results of 5,000 surveys per case and compare the unweighted and weighted^[I use the same simple inverse probability weighting method described in the previous post in this series.] estimates to see the effect of weighting on bias and variance. In this particular set of binomial cases, weighting *doesn't quite* display the same behavior observed in the continuous outcome case.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# true underlying population/group characteristics\ngroups <-\n  tibble(group = LETTERS[1:2],\n         group_mean = c(0.03, 0.97),\n         population = c(0.5, 0.5),\n         p_respond = c(0.05, 0.07)) %>%\n  mutate(p_sampled = population * p_respond,\n         p_sampled = p_sampled/sum(p_sampled))\n\n# true mean among population\ntrue_mean <-\n  groups %>%\n  summarise(true_mean = sum(group_mean * population)) %>%\n  pull(true_mean)\n\n# simulation parameters\nn_sims <- 5000\nsample_size <- 700\n\n# plot! ------------------------------------------------------------------------\n\n# setup simulation conditions\ncrossing(poll = 1:n_sims,\n         differential_response = c(TRUE, FALSE),\n         group_correlation = c(TRUE, FALSE),\n         group = groups$group) %>%\n  left_join(groups) %>%\n  mutate(p_sampled = if_else(differential_response, p_sampled, population),\n         group_mean = if_else(group_correlation, group_mean, true_mean)) %>%\n  \n  # simulate responses\n  nest(data = -c(poll, differential_response, group_correlation)) %>%\n  mutate(K = map(data, ~rmultinom(1, sample_size, .x$p_sampled)[,1])) %>%\n  unnest(c(data, K)) %>%\n  bind_cols(Y = rbinom(nrow(.), .$K, .$group_mean)) %>%\n  \n  # summarize weighted/unweighted mean per simulation\n  group_by(poll,\n           differential_response,\n           group_correlation) %>%\n  mutate(n_total = sum(K),\n         observed = K/n_total,\n         weight = population/observed) %>%\n  summarise(weighted = sum(Y * weight)/sum(K * weight),\n            unweighted = sum(Y)/sum(K)) %>%\n  ungroup() %>%\n  \n  # prep for plotting\n  pivot_longer(ends_with(\"weighted\"),\n               names_to = \"method\",\n               values_to = \"p\") %>%\n  mutate(case = case_when(differential_response & group_correlation ~ \"Cell 4: Bias ↓ Variance ↓\",\n                          !differential_response & group_correlation ~ \"Cell 3: Bias -- Variance ↓\",\n                          differential_response & !group_correlation ~ \"Cell 2: Bias -- Variance ↑\",\n                          !differential_response & !group_correlation ~ \"Cell 1: Bias -- Variance --\")) %>%\n  \n  # plot!\n  ggplot(aes(x = case,\n             y = p,\n             color = method,\n             fill = method)) + \n  stat_histinterval(slab_alpha = 0.75,\n                    breaks = seq(from = 0.4, to = 0.7, by = 0.003125)) %>% partition(vars(method)) %>% blend(\"darken\") +\n  geom_hline(yintercept = true_mean,\n             linetype = \"dotted\",\n             color = \"gray40\") +\n  scale_color_manual(values = rev(pal[1:2])) + \n  scale_fill_manual(values = rev(pal[1:2])) + \n  scale_y_percent() +\n  coord_flip() + \n  theme_rieke() + \n  theme(legend.position = \"bottom\") + \n  labs(title = \"**Effect of weighting on estimates of the population mean**\",\n       subtitle = paste(\"Weighting on subgroups **decreases biase** and **decreases variance** when group\",\n                        \"membership is highly correlated with response rate and preference in **binary outcomes**\",\n                        sep = \"<br>\"),\n       x = NULL,\n       y = NULL,\n       caption = paste(\"Distribution of weighted and unweighted population means for 5,000 simulated surveys\",\n                       \"Dashed line indicates simulated true population mean\",\n                       sep = \"<br>\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=2700}\n:::\n:::\n\n\n\nIn cases 1 and 2, where group membership is uncorrelated with the outcome, we don't see the same effects on variance as we did in the continuous case. In cases 3 and 4, we do, but only because I cranked up the group correlation with the outcome to an incredible degree. It appears that binomial outcomes require much more dramatic group differences than continuous outcomes in order to simultaneously decrease both bias and variance with survey weighting. \n\nTo explore when weighting benefits variance, I set up another set of simulations that vary the group correlation with both nonresponse and the outcome.^[In the plots below, support among group B is given as `1 - group_A_support`.] By plotting the estimated standard error from 5,000 simulated surveys per combination of group correlation with nonresponse and the outcome, I find that:\n\n* Any amount of group correlation with the outcome decreases the variance of the weighted population estimate relative to the unweighted estimate when group membership is uncorrelated with nonresponse;\n* As group correlation with nonresponse increases, group correlation with the outcome must also increase dramatically in order to see a decrease in the variance of the population mean estimate. If groups are \"not correlated enough\" with the outcome, then weighting increases the variance of the population mean estimate.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# true underlying population/group characteristics\ngroups <-\n  tibble(group = LETTERS[1:2],\n         population = c(0.5, 0.5))\n\n# simulation parameters\nn_sims <- 5000\nsample_size <- 700\n\n# simulate responses -----------------------------------------------------------\n\nsims <- \n  \n  # simulate different levels of subgroup correlation with the outcome\n  crossing(sim = 1:n_sims,\n         beta = seq(from = 0.03, to = 0.97, by = 0.01),\n         groups) %>%\n  \n  # simulate different levels of subgroup correlation with nonresponse\n  nest(data = -c(sim, group, population)) %>%\n  nest(data = -sim) %>%\n  crossing(tibble(case = 1:4,\n                  p_respond = list(c(0.05, 0.05), c(0.07, 0.03), c(0.08, 0.02), c(0.09, 0.01)))) %>%\n  unnest(c(data, p_respond)) %>%\n  unnest(data) %>%\n  group_by(sim, beta, case) %>%\n  mutate(p_sampled = population * p_respond,\n         p_sampled = p_sampled/sum(p_sampled)) %>%\n  ungroup() %>%\n  \n  # simulate survey collection / response\n  mutate(p_support = if_else(group == \"A\", beta, 1 - beta)) %>%\n  nest(data = -c(sim, beta, case)) %>%\n  mutate(K = map(data, ~rmultinom(1, sample_size, .$p_sampled)[,1])) %>%\n  unnest(c(data, K)) %>%\n  bind_cols(Y = rbinom(nrow(.), .$K, .$p_support)) %>%\n  \n  # compute weighted/unweighted results per survey\n  group_by(sim, beta, case) %>%\n  mutate(n_total = sum(K),\n         observed = K/n_total,\n         weight = population/observed) %>%\n  summarise(weighted = sum(Y * weight)/sum(K * weight),\n            unweighted = sum(Y)/sum(K)) %>%\n  ungroup() %>%\n  \n  # summarise mean/sd for each condition of case, p_support, and p_respond\n  pivot_longer(ends_with(\"weighted\"),\n               names_to = \"method\",\n               values_to = \"p\") %>%\n  group_by(beta, method, case) %>%\n  summarise(mean = mean(p),\n            sd = sd(p)) %>%\n  ungroup()\n  \n# plot! ------------------------------------------------------------------------\n\nsims %>%\n  mutate(case = case_match(case,\n                           1 ~ \"Response Rates: 5/5%\",\n                           2 ~ \"Response Rates: 7/3%\",\n                           3 ~ \"Response Rates: 8/2%\",\n                           4 ~ \"Response Rates: 9/1%\")) %>%\n  ggplot(aes(x = beta,\n             y = sd,\n             color = method)) + \n  geom_point() +\n  scale_color_manual(values = rev(pal[1:2])) + \n  facet_wrap(~case, scales = \"free_y\") + \n  theme_rieke() +\n  theme(legend.position = \"none\") + \n  labs(title = \"**Effect of weighting on SE of the mean**\",\n       subtitle = glue::glue(\"In binary outcomes, **\",\n                             color_text(\"weighting\", pal[1]),\n                             \"** can reduce the SE relative to the **\",\n                             color_text(\"unweighted\", pal[2]),\n                             \"** mean,<br>\",\n                             \"depending on the relative proportion of nonresponse among subgroups\"),\n       x = \"Subgroup A probability of support\",\n       y = \"SE\",\n       caption = paste(\"SE estimated from 5,000 simulated surveys of 700 respondents\",\n                       \"for each level of support among subgroup A\",\n                       sep = \"<br>\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=2700}\n:::\n:::\n\n\n\nThese findings are essentially in agreement with Little and Vartivarian's paper, but offer some more detail about when a covariate is \"correlated enough\" with the outcome to decrease the variance in the estimate of the weighted mean. In short, the summary provided in [Table 1](https://www.thedatadiary.net/posts/2025-04-20-aapor-02/little-vartivarian-table.png) of Little and Vartivarian's paper holds true, but what is considered \"highly correlated\" with the outcome is highly dependent on the level of differential nonresponse among subgroups. In particular, it appears that the benefit of weighting on variance requires surprisingly high degrees of correlation with binary outcomes.^[There's a suspiciously parabola-like shape in the previous plot that implies a closed-form equation. I've [gone down the rabbit hole](https://bsky.app/profile/markjrieke.bsky.social/post/3l7ynytuy5423) of trying to find a nice and tidy general equation, but having seen that hell, I'm happy to settle for the results of simulation.]\n\nThese findings are of interest for survey practitioners and analysts with access to the raw survey responses. I'm often more interested, however, in *aggregating* the results of political polls. In the next post in this series, I'll demonstrate how aggregators/forecasters can incorporate the effects of weighting as a part of their models to decrease the variance in parameter estimates measuring statistical bias. \n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}