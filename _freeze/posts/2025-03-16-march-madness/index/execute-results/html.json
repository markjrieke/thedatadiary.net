{
  "hash": "cbcb80ff431a7c79d4019b841c780446",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"MADHATTRS\"\ndate: '2025-03-16'\ncategories: [stan, march madness]\ndescription: \"An introduction to and description of a March Madness forecasting system\"\nimage: header.png\nexecute: \n  echo: false\nhtml:\n  fig-width: 9\n  fig-height: 9\nfilters:\n  - add-code-files\n---\n\n::: {.cell}\n\n:::\n\n\n\n### Introduction\n\nThis year, I'm launching my first-ever March Madness forecast for both the [men's](../../projects/2025-march-madness/mens.qmd) and [women's](../../projects/2025-march-madness/womens.qmd) tournaments. Every day, the forecast simulates thousands of potential tournament outcomes to see how far each team will advance and which team has the greatest chance of winning the national title.\n\nPowering the forecast is the first iteration of the **MADHATTRS**^[This is a not-so-subtle nod to my family's long-standing March Madness bracket group name, MadHatters.] system. MADHATTRS --- which stands for **M**ultivariate **A**ttack / **D**efense / **H**ome **A**djustments **T**o **T**eam **R**atings (via) **S**imulation^[What would any forecast be without a wonky [backronym](https://en.wikipedia.org/wiki/Backronym)?] --- is a series of models that estimates each team's offensive and defensive strength as well as their home-court advantage. In the regular season, MADHATTRS can estimate the outcome of individual games. During the playoffs, it considers the strength of *potential* schedules each team could face when projecting each team's probability of advancing. \n\nAs always, this work is fully open source --- code to [prep data](https://github.com/markjrieke/2025-march-madness/tree/main/R/model/functions), fit the [models](https://github.com/markjrieke/2025-march-madness/tree/main/stan), and [render site graphics](https://github.com/markjrieke/2025-march-madness/tree/main/R/site) can found in the project's [repository on GitHub](https://github.com/markjrieke/2025-march-madness). The READMEs throughout the repository describe the system in detail but I provide a high-level overview of the core components of the forecast below.\n\n### The whole game\n\nMADHATTRS is broken up into several different models but each is in service of the same two fundamental objectives:\n\n* Estimate each team's rate of points-per-minute (PPM) in each game.\n* Estimate the number of overtimes played in each game.\n\nEach team's PPM is a function of their offensive output, their opponent's defensive skill, and whether or not they have a home-court advantage. When playing away from home --- either as the away team or on neutral territory --- the *Home Advantage* goes to 0 and doesn't contribute to PPM. \n\n$$\n\\text{PPM} \\sim \\text{Offense} - \\text{Opponent Defense} + \\text{Home Advantage}\n$$\n\nThe number of overtimes played is estimated based on the absolute difference between each team's PPM^[*Technically*, I estimate both the probability of the game going to overtime *and* the number of overtimes via a [hurdle model](https://mc-stan.org/docs/stan-users-guide/finite-mixtures.html#hurdle-models).] --- games between two teams with similar PPMs are likelier to go to overtime than lopsided games.\n\n$$\n\\text{Overtimes} \\sim \\left| \\text{PPM}_{\\text{home}} - \\text{PPM}_{\\text{away}} \\right|\n$$\n\nThat's pretty much it! All the other components below are slight variations on these two core pillars. I'll walk through each component using my [alma mater](https://www.youtube.com/watch?v=yVBYcANXfXs), the University of Tulsa, as an example.\n\n### History, not a mystery\n\nAt the beginning of the season, prior to any teams playing any games, we still have a pretty good idea of which teams will be competitive. Intuitively, we know that teams will *probably* be \n\nPICK IT UP HERE DAWG\n\n* pre-season training\n  * data since 2002\n  * let these drift season to season\n  * early in each season, we are most uncertain\n  * estimate each team's rate of scoring\n  * pseudo-random walk\n  * posterior from each season is used as a prior for the next season\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.panel-tabset}\n\n#### Men's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/historical paramters mens-1.png){width=2700}\n:::\n:::\n\n\n\n#### Women's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/historical parameters womens-1.png){width=2700}\n:::\n:::\n\n\n\n:::\n  \n### Season's greetings\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.panel-tabset}\n\n#### Men's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/team parameters mens-1.png){width=2700}\n:::\n:::\n\n\n\n#### Women's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/team parameters womens-1.png){width=2700}\n:::\n:::\n\n\n\n:::\n\n* daily season updates\n  * Tulsa mens/womens parameters from beginning of season -> now\n  * use the output from pre-season as a prior for the current season\n  * really really similar to the pre-season training, but we save the daily output\n  * as the season progresses, the uncertainty around team ratings shrinks\n  * save the correlation structure for offensive/defensive/home advantage ratings\n  \n### Predictions in retrograde\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.panel-tabset}\n\n#### Men's\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/mens predictions plot-1.png){width=2700}\n:::\n:::\n\n\n\n#### Women's\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/womens predictions plot-1.png){width=2700}\n:::\n:::\n\n\n\n:::\n\n* prediction\n  * tulsa mens/womens vs oru mens/womens blobs as of 3/16\n  * same as the training, but in reverse!\n  * does the game go to overtime?\n  * does how many overtimes are played?\n  * rate of scoring for each team given number of minutes\n  * estimate mixed scoring distribution(s)\n  \n### bracket title\n\n* bracket\n  * uses the same prediction model described above\n  * in each simulation, the winner advances\n  * so you end up simulating very normal tournaments where 1/2 seeds all beat the 15/16 seess\n  * but also weird edge cases where there's lots of upsets\n  * the result is a mixture of possible tournament outcomes\n  \n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}