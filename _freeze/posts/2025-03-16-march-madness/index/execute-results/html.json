{
  "hash": "8d7f1221650ec0f91bd1e71d484575ce",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"MADHATTRS\"\ndate: '2025-03-16'\ncategories: [stan, march madness]\ndescription: \"An introduction to and description of a March Madness forecasting system\"\nimage: header.png\nexecute: \n  echo: false\nhtml:\n  fig-width: 9\n  fig-height: 9\nfilters:\n  - add-code-files\n---\n\n::: {.cell}\n\n:::\n\n\n\n### Introduction\n\nThis year, I'm launching my first-ever March Madness forecast for both the [men's](../../projects/2025-march-madness/mens.qmd) and [women's](../../projects/2025-march-madness/womens.qmd) tournaments. Every day, the forecast simulates thousands of potential tournament outcomes to see how far each team will advance and which team has the greatest chance of winning the national title.\n\nPowering the forecast is the first iteration of the **MADHATTRS**^[This is a not-so-subtle nod to my family's long-standing March Madness bracket group name, MadHatters.] system. MADHATTRS --- which stands for **M**ultivariate **A**ttack / **D**efense / **H**ome **A**djustments **T**o **T**eam **R**atings (via) **S**imulation^[What would any forecast be without a wonky [backronym](https://en.wikipedia.org/wiki/Backronym)?] --- is a series of models that estimates each team's offensive and defensive strength as well as their home-court advantage. Like other [Elo](https://en.wikipedia.org/wiki/Elo_rating_system)-adjacent [systems](https://fivethirtyeight.com/methodology/how-our-wnba-predictions-work/), MADHATTRS is applied at the team (rather than player) level.^[Examples of player-level metrics include FiveThirtyEight's [RAPTOR](https://fivethirtyeight.com/features/introducing-raptor-our-new-metric-for-the-modern-nba/) or ESPN's [real plus-minus](https://www.espn.com/nba/story/_/id/28309836/how-real-plus-minus-reveal-hidden-nba-stars).] Unlike other systems, MADHATTRS is fully [Bayesian](https://en.wikipedia.org/wiki/Bayesian_statistics) under-the-hood and enjoys all the benefits of Bayesian inference --- most importantly, propagating uncertainty throughout the system.\n\nAs always, this work is fully open source --- code to [prep data](https://github.com/markjrieke/2025-march-madness/tree/main/R/model), fit the [models](https://github.com/markjrieke/2025-march-madness/tree/main/stan), and [render site graphics](https://github.com/markjrieke/2025-march-madness/tree/main/R/site) can found in the project's [repository on GitHub](https://github.com/markjrieke/2025-march-madness). The READMEs throughout the repository describe the system in detail but I provide a high-level overview of the core components of the forecast below.\n\n### The whole game\n\nMADHATTRS is split into several different models but each has the same two fundamental objectives:\n\n* To estimate each team's rate of points-per-minute (PPM) in each game.\n* To estimate the number of overtimes played in each game.\n\nEach team's PPM is a function of their offensive output, their opponent's defensive skill, and whether or not they have a home-court advantage. When playing away from home --- either as the away team or on neutral territory --- the *Home Advantage* goes to 0 and doesn't contribute to PPM. Adjustments to PPM are made relative to a fixed point, 1.75 PPM, which translates to an expected 70 points in 40 minutes of regulation.^[This fixed point is picked somewhat arbitrarily --- the exact value doesn't matter, just that adjustments are made relative to this value.]\n\n$$\n\\text{PPM} \\sim \\text{Offense} - \\text{Opponent Defense} + \\text{Home Advantage}\n$$\n\nThe number of overtimes played is modeled by scaling the absolute difference between each team's PPM.^[*Technically*, I estimate both the probability of the game going to overtime *and* the number of overtimes via a [hurdle model](https://mc-stan.org/docs/stan-users-guide/finite-mixtures.html#hurdle-models).] Games between two teams with similar PPMs --- be they high or low skill --- are likelier to go to overtime than lopsided games between a low-skilled team and a powerhouse. \n\n$$\n\\text{Overtimes} \\sim \\text{Scaling Factor} \\times \\left| \\text{PPM}_{\\text{home}} - \\text{PPM}_{\\text{away}} \\right|\n$$\n\nThat's pretty much it! All the other components below are slight variations on these two core pillars. I'll walk through each component using my [alma mater](https://www.youtube.com/watch?v=yVBYcANXfXs), the University of Tulsa, as an example.\n\n### History, not a mystery\n\nFor the 2001-02 through 2023-24 seasons, MADHATTRS estimates each team's offensive, defensive, and home-court adjustments to PPM by iteratively fitting an entire season's worth of data at a time. Since players graduate, leave for the NBA/WNBA, transfer, or simply get better/worse at the game, the historical model allows each team's ratings to drift from season to season. In this pseudo-[random walk](https://mc-stan.org/docs/functions-reference/distributions_over_unbounded_vectors.html#gaussian-dynamic-linear-models), the [prior](https://en.wikipedia.org/wiki/Prior_probability) for each season is the [posterior](https://en.wikipedia.org/wiki/Posterior_probability) from the previous season plus a bit of noise. This means that, especially at the beginning of each season, we tend to expect teams rankings to be similar to what they were in the previous season.\n\nTulsa's basketball teams, for example, have defensive PPM adjustments that bounce somewhere between 0.0 and 0.2 PPM on average over the years, though the value drifts from season to season. This translates to an average reduction in their opponent's score between 0 and 8 points for games ending in regulation. \n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.panel-tabset group=\"league\"}\n\n#### Men's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/historical paramters mens-1.png){width=2700}\n:::\n:::\n\n\n\n#### Women's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/historical parameters womens-1.png){width=2700}\n:::\n:::\n\n\n\n:::\n\nMuch like team parameters, a similar pseudo-random walk method is used to estimate the probability of a game going to overtime. Per the model's output, two evenly matched teams are likelier to go to overtime today than in the early 2000's. \n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.panel-tabset group=\"league\"}\n\n#### Men's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/historical overtime mens-1.png){width=2700}\n:::\n:::\n\n\n\n#### Women's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/historical overtime womens-1.png){width=2700}\n:::\n:::\n\n\n\n:::\n  \n### Season's greetings\n\nThe 2024-25 season model is essentially the same as the historical model. The differences lie mostly in how the model is run and what output is stored. \n\nMuch like the historical model, the current season uses the previous season's posterior as a prior to estimate season-level parameters. Unlike the historical model, the current season's model is refit every day that at least one game is played. As the season progresses, the uncertainty around each parameter's estimate decreases.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.panel-tabset group=\"league\"}\n\n#### Men's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/team parameters mens-1.png){width=2700}\n:::\n:::\n\n\n\n#### Women's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/team parameters womens-1.png){width=2700}\n:::\n:::\n\n\n\n:::\n\nSimilarly, the probability of going to overtime uses the previous season's posterior as a prior and is updated every day.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.panel-tabset group=\"league\"}\n\n#### Men's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/overtime mens-1.png){width=2700}\n:::\n:::\n\n\n\n#### Women's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/overtime womens-1.png){width=2700}\n:::\n:::\n\n\n\n:::\n\nIn addition to running daily, the season model is unique in that it records the correlation between parameters along with the parameters themselves. Preserving the correlation structure is important when it comes time to generate predictions. Team defensive PPM adjustments are effectively independent of offensive and home advantage adjustments, but there's a noticeable negative correlation between the offensive and home advantage adjustments!\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.panel-tabset group=\"league\"}\n\n#### Men's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/correlated parameters mens-1.png){width=2700}\n:::\n:::\n\n\n\n#### Women's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/correlated parameters womens-1.png){width=2700}\n:::\n:::\n\n\n\n:::\n\n### Running it back --- prediction\n\nTo generate predictions, the process used to estimate ratings is simply run in reverse. For each game, the model first estimates whether or not the game will go to overtime and if so, the number of overtime periods played. If the game goes to overtime, the model then guesses what the tied score was leading into the final overtime period.^[In simulations that end in regulation, this is set to 0-0.] Finally, it uses each team's PPM estimates to simulate the number of points scored in the final period^[In the majority of simulations, this \"final period\" is just the end of regulation.] and adds that to the previously tied score to get to the final score.^[There are some tricks [under the hood](https://github.com/markjrieke/2025-march-madness/blob/main/stan/functions.stan#L181-L233) to ensure that the final score isn't a tie.] This process is repeated thousands of times to get a distribution of possible final scores. Each team's probability of winning is simply the proportion of simulations in which they emerge victorious. \n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\nAs an example, let's simulate a Tulsa home game against their cross-town rival, [ORU](https://oru.edu/) --- each point below is a simulated outcome. The majority of simulations end in regulation and include everything from blowouts for either team close finishes. Simulations that go to overtime (potentially many overtimes!) unsurprisinglying tend to result in more points for both teams and a closer final score. Based on this set of simulations, Tulsa's men's team has a **67%** chance of winning and the women's team has a **58%** chance of winning. \n\n::: {.panel-tabset group=\"league\"}\n\n#### Men's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/mens predictions plot-1.png){width=2700}\n:::\n:::\n\n\n\n#### Women's\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/womens predictions plot-1.png){width=2700}\n:::\n:::\n\n\n\n:::\n  \n### 9 billion-billion brackets\n\nIn the regular season, MADHATTRS generates game outcomes by simulating an individual game thousands of times. In the playoffs, it simulates the *entire tournament* thousands of times. Each team's probability of advancing (or winning the tournament) is the proportion of simulations in which they reach that milestone. \n\nSince the tournament is single-elimination, the simulations includes weird edge cases with huge upsets alongside very normal tournaments in which all the 1 and 2 seeds beat the 15 and 16 seeds. The result is a *mixture* of potential tournament outcomes. Effectively, this means that the the probability of each team advancing to the next stage in the bracket is based on the team's skill pitted against their potential strength of schedule. \n\nThere are 2 × 10<sup>63</sup> (or 9 billion-billion) [possible March Madness brackets](https://www.ncaa.com/news/basketball-men/bracketiq/2023-03-16/perfect-ncaa-bracket-absurd-odds-march-madness-dream). Although I didn't run *quite* that many simulations,^[Based on some back-of-the-napkin math, it'd take ~14 million years for that to run. Unfortunately, the first game is only a few days away!] my hope is that in the thousands of simulations that are run, I capture some of the madness that will emerge from the tournament.\n  \n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}